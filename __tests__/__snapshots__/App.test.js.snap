// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App component should not render Login if token is present but render Settings component 1`] = `
<MockedProvider
  addTypename={true}
>
  <ApolloProvider
    client={
      ApolloClient {
        "__operations_cache__": Array [
          Array [
            "user",
            Object {
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "user",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "email",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "email",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "user",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "location",
                                },
                                "selectionSet": undefined,
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "email",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 83,
                  "start": 0,
                },
              },
              "variables": Object {
                "email": "sammy.muriuki@andela.com",
              },
            },
          ],
          Array [
            "durationOfMeetingsPerMeetingRoom",
            Object {
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "durationOfMeetingsPerMeetingRoom",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "startDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "endDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "page",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "page",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "perPage",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "perPage",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "analyticsForMeetingsDurations",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "hasPrevious",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "hasNext",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "pages",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "MeetingsDurationaAnalytics",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "roomName",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "count",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "totalDuration",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "startDate",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "endDate",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "page",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "perPage",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 391,
                  "start": 0,
                },
              },
              "variables": Object {
                "endDate": "Feb 01 2019",
                "page": 1,
                "perPage": 5,
                "startDate": "Feb 01 2019",
              },
            },
          ],
          Array [
            "data",
            Object {
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": undefined,
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "allRooms",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "rooms",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "capacity",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 73,
                  "start": 0,
                },
              },
              "variables": undefined,
            },
          ],
          Array [
            "AnalyticsBookingsCount",
            Object {
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "AnalyticsBookingsCount",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "startDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "endDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "bookingsAnalyticsCount",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "period",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "bookings",
                                },
                                "selectionSet": undefined,
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "startDate",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "endDate",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 181,
                  "start": 0,
                },
              },
              "variables": Object {
                "endDate": "Feb 01 2019",
                "startDate": "Feb 01 2019",
              },
            },
          ],
          Array [
            "AnalyticsRatiosTotal",
            Object {
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "AnalyticsRatiosTotal",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "startDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "endDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "analyticsRatios",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "checkins",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "checkinsPercentage",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "bookings",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cancellations",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cancellationsPercentage",
                                },
                                "selectionSet": undefined,
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "startDate",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "endDate",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 249,
                  "start": 0,
                },
              },
              "variables": Object {
                "endDate": "Feb 01 2019",
                "page": 1,
                "perPage": 5,
                "startDate": "Feb 01 2019",
              },
            },
          ],
        ],
        "cache": InMemoryCache {
          "addTypename": true,
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "storeFactory": [Function],
          },
          "data": ObjectCache {
            "data": Object {},
          },
          "optimistic": Array [],
          "silenceBroadcast": false,
          "watches": Array [
            Object {
              "callback": [Function],
              "optimistic": true,
              "previousResult": [Function],
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "durationOfMeetingsPerMeetingRoom",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "startDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "endDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "page",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "page",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "perPage",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "perPage",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "analyticsForMeetingsDurations",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "hasPrevious",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "hasNext",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "pages",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "MeetingsDurationaAnalytics",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "roomName",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "count",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "totalDuration",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "__typename",
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "__typename",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "startDate",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "endDate",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "page",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "perPage",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 391,
                  "source": Object {
                    "body": "
  query durationOfMeetingsPerMeetingRoom(
    $startDate: String!
    $endDate: String!
    $page: Int
    $perPage: Int
  ) {
    analyticsForMeetingsDurations(startDate: $startDate, endDate: $endDate, page: $page, perPage: $perPage) {
      hasPrevious,
      hasNext,
      pages,
      MeetingsDurationaAnalytics {
        roomName
        count
        totalDuration
      }
    }
  }
",
                    "locationOffset": Object {
                      "column": 1,
                      "line": 1,
                    },
                    "name": "GraphQL request",
                  },
                  "start": 0,
                },
              },
              "variables": Object {
                "endDate": "Feb 01 2019",
                "startDate": "Feb 01 2019",
              },
            },
            Object {
              "callback": [Function],
              "optimistic": true,
              "previousResult": [Function],
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": undefined,
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "allRooms",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "rooms",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "capacity",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "__typename",
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "__typename",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 73,
                  "source": Object {
                    "body": "
{
  allRooms{
    rooms{
      id
      name
      capacity
    }
  }
}
",
                    "locationOffset": Object {
                      "column": 1,
                      "line": 1,
                    },
                    "name": "GraphQL request",
                  },
                  "start": 0,
                },
              },
              "variables": undefined,
            },
            Object {
              "callback": [Function],
              "optimistic": true,
              "previousResult": [Function],
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "AnalyticsBookingsCount",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "startDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "endDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "bookingsAnalyticsCount",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "period",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "bookings",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "__typename",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "startDate",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "endDate",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 181,
                  "source": Object {
                    "body": "
  query AnalyticsBookingsCount($startDate: String!, $endDate: String!){
    bookingsAnalyticsCount(startDate: $startDate, endDate: $endDate){
      period
      bookings
    }
  }
",
                    "locationOffset": Object {
                      "column": 1,
                      "line": 1,
                    },
                    "name": "GraphQL request",
                  },
                  "start": 0,
                },
              },
              "variables": Object {
                "endDate": "Feb 01 2019",
                "startDate": "Feb 01 2019",
              },
            },
            Object {
              "callback": [Function],
              "optimistic": true,
              "previousResult": [Function],
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "AnalyticsRatiosTotal",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "startDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "endDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "analyticsRatios",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "checkins",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "checkinsPercentage",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "bookings",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cancellations",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cancellationsPercentage",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "__typename",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "startDate",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "endDate",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 249,
                  "source": Object {
                    "body": "
  query AnalyticsRatiosTotal($startDate: String!, $endDate: String!){
    analyticsRatios(startDate: $startDate, endDate: $endDate){
      checkins
      checkinsPercentage
      bookings
      cancellations
      cancellationsPercentage
    }
  }
",
                    "locationOffset": Object {
                      "column": 1,
                      "line": 1,
                    },
                    "name": "GraphQL request",
                  },
                  "start": 0,
                },
              },
              "variables": Object {
                "endDate": "Feb 01 2019",
                "page": 1,
                "perPage": 5,
                "startDate": "Feb 01 2019",
              },
            },
            Object {
              "callback": [Function],
              "optimistic": true,
              "previousResult": [Function],
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "durationOfMeetingsPerMeetingRoom",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "startDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "endDate",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "page",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "page",
                                },
                              },
                            },
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "perPage",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "perPage",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "analyticsForMeetingsDurations",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "hasPrevious",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "hasNext",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "pages",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "MeetingsDurationaAnalytics",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "roomName",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "count",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "totalDuration",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "__typename",
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "__typename",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "startDate",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "endDate",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "page",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "perPage",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 391,
                  "source": Object {
                    "body": "
  query durationOfMeetingsPerMeetingRoom(
    $startDate: String!
    $endDate: String!
    $page: Int
    $perPage: Int
  ) {
    analyticsForMeetingsDurations(startDate: $startDate, endDate: $endDate, page: $page, perPage: $perPage) {
      hasPrevious,
      hasNext,
      pages,
      MeetingsDurationaAnalytics {
        roomName
        count
        totalDuration
      }
    }
  }
",
                    "locationOffset": Object {
                      "column": 1,
                      "line": 1,
                    },
                    "name": "GraphQL request",
                  },
                  "start": 0,
                },
              },
              "variables": Object {
                "endDate": "Feb 01 2019",
                "page": 1,
                "perPage": 5,
                "startDate": "Feb 01 2019",
              },
            },
            Object {
              "callback": [Function],
              "optimistic": true,
              "previousResult": [Function],
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "user",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "email",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "email",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "user",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "location",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "__typename",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "String",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "email",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 83,
                  "source": Object {
                    "body": "
query user ($email: String!) {
  user( email: $email) {
    id
    location
  }
}
",
                    "locationOffset": Object {
                      "column": 1,
                      "line": 1,
                    },
                    "name": "GraphQL request",
                  },
                  "start": 0,
                },
              },
              "variables": Object {
                "email": "sammy.muriuki@andela.com",
              },
            },
          ],
        },
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": ApolloLink {
          "request": [Function],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "queryManager": QueryManager {
          "dataStore": DataStore {
            "cache": InMemoryCache {
              "addTypename": true,
              "config": Object {
                "addTypename": true,
                "dataIdFromObject": [Function],
                "fragmentMatcher": HeuristicFragmentMatcher {},
                "storeFactory": [Function],
              },
              "data": ObjectCache {
                "data": Object {},
              },
              "optimistic": Array [],
              "silenceBroadcast": false,
              "watches": Array [
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "previousResult": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "durationOfMeetingsPerMeetingRoom",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "startDate",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "endDate",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "page",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "page",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "perPage",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "perPage",
                                    },
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "analyticsForMeetingsDurations",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "hasPrevious",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "hasNext",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "pages",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "MeetingsDurationaAnalytics",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "roomName",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "count",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "totalDuration",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "__typename",
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "__typename",
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "startDate",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "endDate",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "Int",
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "page",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "Int",
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "perPage",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 391,
                      "source": Object {
                        "body": "
  query durationOfMeetingsPerMeetingRoom(
    $startDate: String!
    $endDate: String!
    $page: Int
    $perPage: Int
  ) {
    analyticsForMeetingsDurations(startDate: $startDate, endDate: $endDate, page: $page, perPage: $perPage) {
      hasPrevious,
      hasNext,
      pages,
      MeetingsDurationaAnalytics {
        roomName
        count
        totalDuration
      }
    }
  }
",
                        "locationOffset": Object {
                          "column": 1,
                          "line": 1,
                        },
                        "name": "GraphQL request",
                      },
                      "start": 0,
                    },
                  },
                  "variables": Object {
                    "endDate": "Feb 01 2019",
                    "startDate": "Feb 01 2019",
                  },
                },
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "previousResult": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": undefined,
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "allRooms",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "rooms",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "capacity",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "__typename",
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "__typename",
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 73,
                      "source": Object {
                        "body": "
{
  allRooms{
    rooms{
      id
      name
      capacity
    }
  }
}
",
                        "locationOffset": Object {
                          "column": 1,
                          "line": 1,
                        },
                        "name": "GraphQL request",
                      },
                      "start": 0,
                    },
                  },
                  "variables": undefined,
                },
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "previousResult": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "AnalyticsBookingsCount",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "startDate",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "endDate",
                                    },
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "bookingsAnalyticsCount",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "period",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "bookings",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "__typename",
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "startDate",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "endDate",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 181,
                      "source": Object {
                        "body": "
  query AnalyticsBookingsCount($startDate: String!, $endDate: String!){
    bookingsAnalyticsCount(startDate: $startDate, endDate: $endDate){
      period
      bookings
    }
  }
",
                        "locationOffset": Object {
                          "column": 1,
                          "line": 1,
                        },
                        "name": "GraphQL request",
                      },
                      "start": 0,
                    },
                  },
                  "variables": Object {
                    "endDate": "Feb 01 2019",
                    "startDate": "Feb 01 2019",
                  },
                },
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "previousResult": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "AnalyticsRatiosTotal",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "startDate",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "endDate",
                                    },
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "analyticsRatios",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "checkins",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "checkinsPercentage",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "bookings",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "cancellations",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "cancellationsPercentage",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "__typename",
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "startDate",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "endDate",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 249,
                      "source": Object {
                        "body": "
  query AnalyticsRatiosTotal($startDate: String!, $endDate: String!){
    analyticsRatios(startDate: $startDate, endDate: $endDate){
      checkins
      checkinsPercentage
      bookings
      cancellations
      cancellationsPercentage
    }
  }
",
                        "locationOffset": Object {
                          "column": 1,
                          "line": 1,
                        },
                        "name": "GraphQL request",
                      },
                      "start": 0,
                    },
                  },
                  "variables": Object {
                    "endDate": "Feb 01 2019",
                    "page": 1,
                    "perPage": 5,
                    "startDate": "Feb 01 2019",
                  },
                },
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "previousResult": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "durationOfMeetingsPerMeetingRoom",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "startDate",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "endDate",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "page",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "page",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "perPage",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "perPage",
                                    },
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "analyticsForMeetingsDurations",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "hasPrevious",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "hasNext",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "pages",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "MeetingsDurationaAnalytics",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "roomName",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "count",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "totalDuration",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "__typename",
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "__typename",
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "startDate",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "endDate",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "Int",
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "page",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "Int",
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "perPage",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 391,
                      "source": Object {
                        "body": "
  query durationOfMeetingsPerMeetingRoom(
    $startDate: String!
    $endDate: String!
    $page: Int
    $perPage: Int
  ) {
    analyticsForMeetingsDurations(startDate: $startDate, endDate: $endDate, page: $page, perPage: $perPage) {
      hasPrevious,
      hasNext,
      pages,
      MeetingsDurationaAnalytics {
        roomName
        count
        totalDuration
      }
    }
  }
",
                        "locationOffset": Object {
                          "column": 1,
                          "line": 1,
                        },
                        "name": "GraphQL request",
                      },
                      "start": 0,
                    },
                  },
                  "variables": Object {
                    "endDate": "Feb 01 2019",
                    "page": 1,
                    "perPage": 5,
                    "startDate": "Feb 01 2019",
                  },
                },
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "previousResult": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "user",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "email",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "email",
                                    },
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "user",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "location",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "__typename",
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "email",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 83,
                      "source": Object {
                        "body": "
query user ($email: String!) {
  user( email: $email) {
    id
    location
  }
}
",
                        "locationOffset": Object {
                          "column": 1,
                          "line": 1,
                        },
                        "name": "GraphQL request",
                      },
                      "start": 0,
                    },
                  },
                  "variables": Object {
                    "email": "sammy.muriuki@andela.com",
                  },
                },
              ],
            },
          },
          "deduplicator": ApolloLink {
            "request": [Function],
          },
          "fetchQueryPromises": Array [
            Array [
              "7",
              Object {
                "reject": [Function],
                "resolve": [Function],
              },
            ],
            Array [
              "8",
              Object {
                "reject": [Function],
                "resolve": [Function],
              },
            ],
            Array [
              "9",
              Object {
                "reject": [Function],
                "resolve": [Function],
              },
            ],
            Array [
              "10",
              Object {
                "reject": [Function],
                "resolve": [Function],
              },
            ],
            Array [
              "11",
              Object {
                "reject": [Function],
                "resolve": [Function],
              },
            ],
            Array [
              "12",
              Object {
                "reject": [Function],
                "resolve": [Function],
              },
            ],
          ],
          "idCounter": 13,
          "link": ApolloLink {
            "request": [Function],
          },
          "mutationStore": MutationStore {
            "store": Object {},
          },
          "onBroadcast": [Function],
          "queries": Array [
            Array [
              "2",
              Object {
                "cancel": [Function],
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "durationOfMeetingsPerMeetingRoom",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "page",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "page",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "perPage",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "perPage",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "analyticsForMeetingsDurations",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasPrevious",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasNext",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "pages",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "MeetingsDurationaAnalytics",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "roomName",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "count",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "totalDuration",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "__typename",
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "page",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "perPage",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 391,
                    "source": Object {
                      "body": "
  query durationOfMeetingsPerMeetingRoom(
    $startDate: String!
    $endDate: String!
    $page: Int
    $perPage: Int
  ) {
    analyticsForMeetingsDurations(startDate: $startDate, endDate: $endDate, page: $page, perPage: $perPage) {
      hasPrevious,
      hasNext,
      pages,
      MeetingsDurationaAnalytics {
        roomName
        count
        totalDuration
      }
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "invalidate": false,
                "invalidated": false,
                "lastRequestId": 7,
                "listeners": Array [
                  [Function],
                ],
                "newData": null,
                "observableQuery": ObservableQuery {
                  "_subscriber": [Function],
                  "isCurrentlyPolling": false,
                  "isTornDown": false,
                  "observers": Array [
                    SubscriptionObserver {
                      "_subscription": Subscription {
                        "_cleanup": [Function],
                        "_observer": Object {
                          "error": [Function],
                          "next": [Function],
                        },
                        "_queue": undefined,
                        "_state": "ready",
                      },
                    },
                  ],
                  "options": Object {
                    "context": Object {},
                    "metadata": Object {
                      "reactComponent": Object {
                        "displayName": "Apollo(AverageMeetingDurationPieChart)",
                      },
                    },
                    "notifyOnNetworkStatusChange": false,
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "durationOfMeetingsPerMeetingRoom",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "startDate",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "startDate",
                                      },
                                    },
                                  },
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "endDate",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "endDate",
                                      },
                                    },
                                  },
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "page",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "page",
                                      },
                                    },
                                  },
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "perPage",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "perPage",
                                      },
                                    },
                                  },
                                ],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "analyticsForMeetingsDurations",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "hasPrevious",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "hasNext",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "pages",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "MeetingsDurationaAnalytics",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "roomName",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "count",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "totalDuration",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "String",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "String",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Int",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "page",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Int",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "perPage",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 391,
                        "start": 0,
                      },
                    },
                    "variables": Object {
                      "endDate": "Feb 01 2019",
                      "startDate": "Feb 01 2019",
                    },
                  },
                  "queryId": "2",
                  "queryManager": [Circular],
                  "scheduler": QueryScheduler {
                    "inFlightQueries": Object {},
                    "intervalQueries": Object {},
                    "pollingTimers": Object {},
                    "queryManager": [Circular],
                    "registeredQueries": Object {},
                    "ssrMode": false,
                  },
                  "shouldSubscribe": true,
                  "subscriptionHandles": Array [],
                  "variables": Object {
                    "endDate": "Feb 01 2019",
                    "startDate": "Feb 01 2019",
                  },
                },
                "subscriptions": Array [],
              },
            ],
            Array [
              "3",
              Object {
                "cancel": [Function],
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": undefined,
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "allRooms",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "rooms",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "capacity",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "__typename",
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 73,
                    "source": Object {
                      "body": "
{
  allRooms{
    rooms{
      id
      name
      capacity
    }
  }
}
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "invalidate": false,
                "invalidated": false,
                "lastRequestId": 8,
                "listeners": Array [
                  [Function],
                ],
                "newData": null,
                "observableQuery": ObservableQuery {
                  "_subscriber": [Function],
                  "isCurrentlyPolling": false,
                  "isTornDown": false,
                  "observers": Array [
                    SubscriptionObserver {
                      "_subscription": Subscription {
                        "_cleanup": [Function],
                        "_observer": Object {
                          "error": [Function],
                          "next": [Function],
                        },
                        "_queue": undefined,
                        "_state": "ready",
                      },
                    },
                  ],
                  "options": Object {
                    "context": Object {},
                    "metadata": Object {
                      "reactComponent": Object {
                        "displayName": "Apollo(GetAverageRoomCapacityComponent)",
                      },
                    },
                    "notifyOnNetworkStatusChange": false,
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": undefined,
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "allRooms",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "rooms",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "capacity",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 73,
                        "start": 0,
                      },
                    },
                  },
                  "queryId": "3",
                  "queryManager": [Circular],
                  "scheduler": QueryScheduler {
                    "inFlightQueries": Object {},
                    "intervalQueries": Object {},
                    "pollingTimers": Object {},
                    "queryManager": [Circular],
                    "registeredQueries": Object {},
                    "ssrMode": false,
                  },
                  "shouldSubscribe": true,
                  "subscriptionHandles": Array [],
                  "variables": Object {},
                },
                "subscriptions": Array [],
              },
            ],
            Array [
              "4",
              Object {
                "cancel": [Function],
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "AnalyticsBookingsCount",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "bookingsAnalyticsCount",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "period",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "bookings",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 181,
                    "source": Object {
                      "body": "
  query AnalyticsBookingsCount($startDate: String!, $endDate: String!){
    bookingsAnalyticsCount(startDate: $startDate, endDate: $endDate){
      period
      bookings
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "invalidate": false,
                "invalidated": false,
                "lastRequestId": 9,
                "listeners": Array [
                  [Function],
                ],
                "newData": null,
                "observableQuery": ObservableQuery {
                  "_subscriber": [Function],
                  "isCurrentlyPolling": false,
                  "isTornDown": false,
                  "observers": Array [
                    SubscriptionObserver {
                      "_subscription": Subscription {
                        "_cleanup": [Function],
                        "_observer": Object {
                          "error": [Function],
                          "next": [Function],
                        },
                        "_queue": undefined,
                        "_state": "ready",
                      },
                    },
                  ],
                  "options": Object {
                    "context": Object {},
                    "metadata": Object {
                      "reactComponent": Object {
                        "displayName": "Query",
                      },
                    },
                    "notifyOnNetworkStatusChange": true,
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "AnalyticsBookingsCount",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "startDate",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "startDate",
                                      },
                                    },
                                  },
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "endDate",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "endDate",
                                      },
                                    },
                                  },
                                ],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "bookingsAnalyticsCount",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "period",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "bookings",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "String",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "String",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 181,
                        "start": 0,
                      },
                    },
                    "variables": Object {
                      "endDate": "Feb 01 2019",
                      "startDate": "Feb 01 2019",
                    },
                  },
                  "queryId": "4",
                  "queryManager": [Circular],
                  "scheduler": QueryScheduler {
                    "inFlightQueries": Object {},
                    "intervalQueries": Object {},
                    "pollingTimers": Object {},
                    "queryManager": [Circular],
                    "registeredQueries": Object {},
                    "ssrMode": false,
                  },
                  "shouldSubscribe": true,
                  "subscriptionHandles": Array [],
                  "variables": Object {
                    "endDate": "Feb 01 2019",
                    "startDate": "Feb 01 2019",
                  },
                },
                "subscriptions": Array [],
              },
            ],
            Array [
              "5",
              Object {
                "cancel": [Function],
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "AnalyticsRatiosTotal",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "analyticsRatios",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "checkins",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "checkinsPercentage",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "bookings",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cancellations",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cancellationsPercentage",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 249,
                    "source": Object {
                      "body": "
  query AnalyticsRatiosTotal($startDate: String!, $endDate: String!){
    analyticsRatios(startDate: $startDate, endDate: $endDate){
      checkins
      checkinsPercentage
      bookings
      cancellations
      cancellationsPercentage
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "invalidate": false,
                "invalidated": false,
                "lastRequestId": 10,
                "listeners": Array [
                  [Function],
                ],
                "newData": null,
                "observableQuery": ObservableQuery {
                  "_subscriber": [Function],
                  "isCurrentlyPolling": false,
                  "isTornDown": false,
                  "observers": Array [
                    SubscriptionObserver {
                      "_subscription": Subscription {
                        "_cleanup": [Function],
                        "_observer": Object {
                          "error": [Function],
                          "next": [Function],
                        },
                        "_queue": undefined,
                        "_state": "ready",
                      },
                    },
                  ],
                  "options": Object {
                    "context": Object {},
                    "metadata": Object {
                      "reactComponent": Object {
                        "displayName": "Apollo(Checkins)",
                      },
                    },
                    "notifyOnNetworkStatusChange": false,
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "AnalyticsRatiosTotal",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "startDate",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "startDate",
                                      },
                                    },
                                  },
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "endDate",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "endDate",
                                      },
                                    },
                                  },
                                ],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "analyticsRatios",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "checkins",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "checkinsPercentage",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "bookings",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "cancellations",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "cancellationsPercentage",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "String",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "String",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 249,
                        "start": 0,
                      },
                    },
                    "variables": Object {
                      "endDate": "Feb 01 2019",
                      "page": 1,
                      "perPage": 5,
                      "startDate": "Feb 01 2019",
                    },
                  },
                  "queryId": "5",
                  "queryManager": [Circular],
                  "scheduler": QueryScheduler {
                    "inFlightQueries": Object {},
                    "intervalQueries": Object {},
                    "pollingTimers": Object {},
                    "queryManager": [Circular],
                    "registeredQueries": Object {},
                    "ssrMode": false,
                  },
                  "shouldSubscribe": true,
                  "subscriptionHandles": Array [],
                  "variables": Object {
                    "endDate": "Feb 01 2019",
                    "page": 1,
                    "perPage": 5,
                    "startDate": "Feb 01 2019",
                  },
                },
                "subscriptions": Array [],
              },
            ],
            Array [
              "6",
              Object {
                "cancel": [Function],
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "durationOfMeetingsPerMeetingRoom",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "page",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "page",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "perPage",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "perPage",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "analyticsForMeetingsDurations",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasPrevious",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasNext",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "pages",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "MeetingsDurationaAnalytics",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "roomName",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "count",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "totalDuration",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "__typename",
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "page",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "perPage",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 391,
                    "source": Object {
                      "body": "
  query durationOfMeetingsPerMeetingRoom(
    $startDate: String!
    $endDate: String!
    $page: Int
    $perPage: Int
  ) {
    analyticsForMeetingsDurations(startDate: $startDate, endDate: $endDate, page: $page, perPage: $perPage) {
      hasPrevious,
      hasNext,
      pages,
      MeetingsDurationaAnalytics {
        roomName
        count
        totalDuration
      }
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "invalidate": false,
                "invalidated": false,
                "lastRequestId": 11,
                "listeners": Array [
                  [Function],
                ],
                "newData": null,
                "observableQuery": ObservableQuery {
                  "_subscriber": [Function],
                  "isCurrentlyPolling": false,
                  "isTornDown": false,
                  "observers": Array [
                    SubscriptionObserver {
                      "_subscription": Subscription {
                        "_cleanup": [Function],
                        "_observer": Object {
                          "error": [Function],
                          "next": [Function],
                        },
                        "_queue": undefined,
                        "_state": "ready",
                      },
                    },
                  ],
                  "options": Object {
                    "context": Object {},
                    "metadata": Object {
                      "reactComponent": Object {
                        "displayName": "Apollo(AverageMeetingList)",
                      },
                    },
                    "notifyOnNetworkStatusChange": false,
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "durationOfMeetingsPerMeetingRoom",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "startDate",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "startDate",
                                      },
                                    },
                                  },
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "endDate",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "endDate",
                                      },
                                    },
                                  },
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "page",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "page",
                                      },
                                    },
                                  },
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "perPage",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "perPage",
                                      },
                                    },
                                  },
                                ],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "analyticsForMeetingsDurations",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "hasPrevious",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "hasNext",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "pages",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "MeetingsDurationaAnalytics",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "roomName",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "count",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "totalDuration",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "String",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "String",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Int",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "page",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Int",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "perPage",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 391,
                        "start": 0,
                      },
                    },
                    "variables": Object {
                      "endDate": "Feb 01 2019",
                      "page": 1,
                      "perPage": 5,
                      "startDate": "Feb 01 2019",
                    },
                  },
                  "queryId": "6",
                  "queryManager": [Circular],
                  "scheduler": QueryScheduler {
                    "inFlightQueries": Object {},
                    "intervalQueries": Object {},
                    "pollingTimers": Object {},
                    "queryManager": [Circular],
                    "registeredQueries": Object {},
                    "ssrMode": false,
                  },
                  "shouldSubscribe": true,
                  "subscriptionHandles": Array [],
                  "variables": Object {
                    "endDate": "Feb 01 2019",
                    "page": 1,
                    "perPage": 5,
                    "startDate": "Feb 01 2019",
                  },
                },
                "subscriptions": Array [],
              },
            ],
            Array [
              "1",
              Object {
                "cancel": [Function],
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "user",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "email",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "email",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "user",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "location",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "email",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 83,
                    "source": Object {
                      "body": "
query user ($email: String!) {
  user( email: $email) {
    id
    location
  }
}
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "invalidate": false,
                "invalidated": false,
                "lastRequestId": 12,
                "listeners": Array [
                  [Function],
                ],
                "newData": null,
                "observableQuery": ObservableQuery {
                  "_subscriber": [Function],
                  "isCurrentlyPolling": false,
                  "isTornDown": false,
                  "observers": Array [
                    SubscriptionObserver {
                      "_subscription": Subscription {
                        "_cleanup": [Function],
                        "_observer": Object {
                          "error": [Function],
                          "next": [Function],
                        },
                        "_queue": undefined,
                        "_state": "ready",
                      },
                    },
                  ],
                  "options": Object {
                    "context": Object {},
                    "metadata": Object {
                      "reactComponent": Object {
                        "displayName": "Apollo(AnalyticsActivity)",
                      },
                    },
                    "notifyOnNetworkStatusChange": false,
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "user",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "email",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "email",
                                      },
                                    },
                                  },
                                ],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "user",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "location",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "String",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "email",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 83,
                        "start": 0,
                      },
                    },
                    "variables": Object {
                      "email": "sammy.muriuki@andela.com",
                    },
                  },
                  "queryId": "1",
                  "queryManager": [Circular],
                  "scheduler": QueryScheduler {
                    "inFlightQueries": Object {},
                    "intervalQueries": Object {},
                    "pollingTimers": Object {},
                    "queryManager": [Circular],
                    "registeredQueries": Object {},
                    "ssrMode": false,
                  },
                  "shouldSubscribe": true,
                  "subscriptionHandles": Array [],
                  "variables": Object {
                    "email": "sammy.muriuki@andela.com",
                  },
                },
                "subscriptions": Array [],
              },
            ],
          ],
          "queryDeduplication": true,
          "queryIdsByName": Object {
            "AnalyticsBookingsCount": Array [
              "4",
            ],
            "AnalyticsRatiosTotal": Array [
              "5",
            ],
            "durationOfMeetingsPerMeetingRoom": Array [
              "2",
              "6",
            ],
            "user": Array [
              "1",
            ],
          },
          "queryStore": QueryStore {
            "store": Object {
              "1": Object {
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "user",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "email",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "email",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "user",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "location",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "email",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 83,
                    "source": Object {
                      "body": "
query user ($email: String!) {
  user( email: $email) {
    id
    location
  }
}
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "graphQLErrors": Array [],
                "metadata": Object {
                  "reactComponent": Object {
                    "displayName": "Apollo(AnalyticsActivity)",
                  },
                },
                "networkError": null,
                "networkStatus": 1,
                "previousVariables": null,
                "variables": Object {
                  "email": "sammy.muriuki@andela.com",
                },
              },
              "2": Object {
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "durationOfMeetingsPerMeetingRoom",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "page",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "page",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "perPage",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "perPage",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "analyticsForMeetingsDurations",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasPrevious",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasNext",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "pages",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "MeetingsDurationaAnalytics",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "roomName",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "count",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "totalDuration",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "__typename",
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "page",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "perPage",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 391,
                    "source": Object {
                      "body": "
  query durationOfMeetingsPerMeetingRoom(
    $startDate: String!
    $endDate: String!
    $page: Int
    $perPage: Int
  ) {
    analyticsForMeetingsDurations(startDate: $startDate, endDate: $endDate, page: $page, perPage: $perPage) {
      hasPrevious,
      hasNext,
      pages,
      MeetingsDurationaAnalytics {
        roomName
        count
        totalDuration
      }
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "graphQLErrors": Array [],
                "metadata": Object {
                  "reactComponent": Object {
                    "displayName": "Apollo(AverageMeetingDurationPieChart)",
                  },
                },
                "networkError": null,
                "networkStatus": 1,
                "previousVariables": null,
                "variables": Object {
                  "endDate": "Feb 01 2019",
                  "startDate": "Feb 01 2019",
                },
              },
              "3": Object {
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": undefined,
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "allRooms",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "rooms",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "capacity",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "__typename",
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 73,
                    "source": Object {
                      "body": "
{
  allRooms{
    rooms{
      id
      name
      capacity
    }
  }
}
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "graphQLErrors": Array [],
                "metadata": Object {
                  "reactComponent": Object {
                    "displayName": "Apollo(GetAverageRoomCapacityComponent)",
                  },
                },
                "networkError": null,
                "networkStatus": 1,
                "previousVariables": null,
                "variables": Object {},
              },
              "4": Object {
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "AnalyticsBookingsCount",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "bookingsAnalyticsCount",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "period",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "bookings",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 181,
                    "source": Object {
                      "body": "
  query AnalyticsBookingsCount($startDate: String!, $endDate: String!){
    bookingsAnalyticsCount(startDate: $startDate, endDate: $endDate){
      period
      bookings
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "graphQLErrors": Array [],
                "metadata": Object {
                  "reactComponent": Object {
                    "displayName": "Query",
                  },
                },
                "networkError": null,
                "networkStatus": 1,
                "previousVariables": null,
                "variables": Object {
                  "endDate": "Feb 01 2019",
                  "startDate": "Feb 01 2019",
                },
              },
              "5": Object {
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "AnalyticsRatiosTotal",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "analyticsRatios",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "checkins",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "checkinsPercentage",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "bookings",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cancellations",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cancellationsPercentage",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 249,
                    "source": Object {
                      "body": "
  query AnalyticsRatiosTotal($startDate: String!, $endDate: String!){
    analyticsRatios(startDate: $startDate, endDate: $endDate){
      checkins
      checkinsPercentage
      bookings
      cancellations
      cancellationsPercentage
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "graphQLErrors": Array [],
                "metadata": Object {
                  "reactComponent": Object {
                    "displayName": "Apollo(Checkins)",
                  },
                },
                "networkError": null,
                "networkStatus": 1,
                "previousVariables": null,
                "variables": Object {
                  "endDate": "Feb 01 2019",
                  "page": 1,
                  "perPage": 5,
                  "startDate": "Feb 01 2019",
                },
              },
              "6": Object {
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "durationOfMeetingsPerMeetingRoom",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "page",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "page",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "perPage",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "perPage",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "analyticsForMeetingsDurations",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasPrevious",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasNext",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "pages",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "MeetingsDurationaAnalytics",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "roomName",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "count",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "totalDuration",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "__typename",
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "page",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "perPage",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 391,
                    "source": Object {
                      "body": "
  query durationOfMeetingsPerMeetingRoom(
    $startDate: String!
    $endDate: String!
    $page: Int
    $perPage: Int
  ) {
    analyticsForMeetingsDurations(startDate: $startDate, endDate: $endDate, page: $page, perPage: $perPage) {
      hasPrevious,
      hasNext,
      pages,
      MeetingsDurationaAnalytics {
        roomName
        count
        totalDuration
      }
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "graphQLErrors": Array [],
                "metadata": Object {
                  "reactComponent": Object {
                    "displayName": "Apollo(AverageMeetingList)",
                  },
                },
                "networkError": null,
                "networkStatus": 1,
                "previousVariables": null,
                "variables": Object {
                  "endDate": "Feb 01 2019",
                  "page": 1,
                  "perPage": 5,
                  "startDate": "Feb 01 2019",
                },
              },
            },
          },
          "scheduler": QueryScheduler {
            "inFlightQueries": Object {},
            "intervalQueries": Object {},
            "pollingTimers": Object {},
            "queryManager": [Circular],
            "registeredQueries": Object {},
            "ssrMode": false,
          },
        },
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "ssrMode": false,
        "store": DataStore {
          "cache": InMemoryCache {
            "addTypename": true,
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "storeFactory": [Function],
            },
            "data": ObjectCache {
              "data": Object {},
            },
            "optimistic": Array [],
            "silenceBroadcast": false,
            "watches": Array [
              Object {
                "callback": [Function],
                "optimistic": true,
                "previousResult": [Function],
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "durationOfMeetingsPerMeetingRoom",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "page",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "page",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "perPage",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "perPage",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "analyticsForMeetingsDurations",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasPrevious",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasNext",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "pages",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "MeetingsDurationaAnalytics",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "roomName",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "count",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "totalDuration",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "__typename",
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "page",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "perPage",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 391,
                    "source": Object {
                      "body": "
  query durationOfMeetingsPerMeetingRoom(
    $startDate: String!
    $endDate: String!
    $page: Int
    $perPage: Int
  ) {
    analyticsForMeetingsDurations(startDate: $startDate, endDate: $endDate, page: $page, perPage: $perPage) {
      hasPrevious,
      hasNext,
      pages,
      MeetingsDurationaAnalytics {
        roomName
        count
        totalDuration
      }
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "variables": Object {
                  "endDate": "Feb 01 2019",
                  "startDate": "Feb 01 2019",
                },
              },
              Object {
                "callback": [Function],
                "optimistic": true,
                "previousResult": [Function],
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": undefined,
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "allRooms",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "rooms",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "capacity",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "__typename",
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 73,
                    "source": Object {
                      "body": "
{
  allRooms{
    rooms{
      id
      name
      capacity
    }
  }
}
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "variables": undefined,
              },
              Object {
                "callback": [Function],
                "optimistic": true,
                "previousResult": [Function],
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "AnalyticsBookingsCount",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "bookingsAnalyticsCount",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "period",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "bookings",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 181,
                    "source": Object {
                      "body": "
  query AnalyticsBookingsCount($startDate: String!, $endDate: String!){
    bookingsAnalyticsCount(startDate: $startDate, endDate: $endDate){
      period
      bookings
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "variables": Object {
                  "endDate": "Feb 01 2019",
                  "startDate": "Feb 01 2019",
                },
              },
              Object {
                "callback": [Function],
                "optimistic": true,
                "previousResult": [Function],
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "AnalyticsRatiosTotal",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "analyticsRatios",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "checkins",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "checkinsPercentage",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "bookings",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cancellations",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cancellationsPercentage",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 249,
                    "source": Object {
                      "body": "
  query AnalyticsRatiosTotal($startDate: String!, $endDate: String!){
    analyticsRatios(startDate: $startDate, endDate: $endDate){
      checkins
      checkinsPercentage
      bookings
      cancellations
      cancellationsPercentage
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "variables": Object {
                  "endDate": "Feb 01 2019",
                  "page": 1,
                  "perPage": 5,
                  "startDate": "Feb 01 2019",
                },
              },
              Object {
                "callback": [Function],
                "optimistic": true,
                "previousResult": [Function],
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "durationOfMeetingsPerMeetingRoom",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "startDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "startDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "endDate",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "endDate",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "page",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "page",
                                  },
                                },
                              },
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "perPage",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "perPage",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "analyticsForMeetingsDurations",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasPrevious",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "hasNext",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "pages",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "MeetingsDurationaAnalytics",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "roomName",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "count",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "totalDuration",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "__typename",
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "startDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "endDate",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "page",
                            },
                          },
                        },
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "Int",
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "perPage",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 391,
                    "source": Object {
                      "body": "
  query durationOfMeetingsPerMeetingRoom(
    $startDate: String!
    $endDate: String!
    $page: Int
    $perPage: Int
  ) {
    analyticsForMeetingsDurations(startDate: $startDate, endDate: $endDate, page: $page, perPage: $perPage) {
      hasPrevious,
      hasNext,
      pages,
      MeetingsDurationaAnalytics {
        roomName
        count
        totalDuration
      }
    }
  }
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "variables": Object {
                  "endDate": "Feb 01 2019",
                  "page": 1,
                  "perPage": 5,
                  "startDate": "Feb 01 2019",
                },
              },
              Object {
                "callback": [Function],
                "optimistic": true,
                "previousResult": [Function],
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "user",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "email",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "email",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "user",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "location",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "email",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 83,
                    "source": Object {
                      "body": "
query user ($email: String!) {
  user( email: $email) {
    id
    location
  }
}
",
                      "locationOffset": Object {
                        "column": 1,
                        "line": 1,
                      },
                      "name": "GraphQL request",
                    },
                    "start": 0,
                  },
                },
                "variables": Object {
                  "email": "sammy.muriuki@andela.com",
                },
              },
            ],
          },
        },
        "version": "2.3.1",
        "watchQuery": [Function],
      }
    }
  >
    <MemoryRouter
      initialEntries={
        Array [
          "/",
          "/settings",
        ]
      }
      initialIndex={1}
      keyLength={0}
    >
      <Router
        history={
          Object {
            "action": "REPLACE",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              Object {
                "hash": "",
                "pathname": "/analytics",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 1,
            "length": 2,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/analytics",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <withRouter(App)>
          <Route
            render={[Function]}
          >
            <App
              history={
                Object {
                  "action": "REPLACE",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    Object {
                      "hash": "",
                      "pathname": "/analytics",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 1,
                  "length": 2,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/analytics",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/analytics",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": false,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
            >
              <Switch>
                <Route
                  component={[Function]}
                  computedMatch={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/analytics",
                      "url": "/analytics",
                    }
                  }
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/analytics",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  path="/analytics"
                >
                  <Analytics
                    history={
                      Object {
                        "action": "REPLACE",
                        "block": [Function],
                        "canGo": [Function],
                        "createHref": [Function],
                        "entries": Array [
                          Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          Object {
                            "hash": "",
                            "pathname": "/analytics",
                            "search": "",
                            "state": undefined,
                          },
                        ],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "index": 1,
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/analytics",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/analytics",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/analytics",
                        "url": "/analytics",
                      }
                    }
                  >
                    <NavBar>
                      <TopMenu>
                        <div
                          className="top-menu"
                        >
                          <div
                            className="container size-2-8 nav-menu"
                          >
                            <div
                              className="container content-start nav-left"
                            >
                              <ul
                                className="inline nav-brand"
                              >
                                <li
                                  className="logo"
                                >
                                  <img
                                    alt="Logo"
                                    src="test-file-stub"
                                  />
                                </li>
                                <li
                                  className="logo-text"
                                >
                                  <h1>
                                    CONVERGE
                                  </h1>
                                </li>
                              </ul>
                            </div>
                            <div
                              className="container content-end nav-right"
                            >
                              <div
                                className="search-box"
                              >
                                <form
                                  className="container"
                                >
                                  <input
                                    className="search-bar"
                                    type="text"
                                  />
                                  <img
                                    alt="Search icon"
                                    className="search-icon"
                                    src="test-file-stub"
                                  />
                                </form>
                              </div>
                              <div
                                className="container side-nav"
                              >
                                <div
                                  className="notifications"
                                >
                                  <img
                                    alt="Notification icon"
                                    src="test-file-stub"
                                  />
                                </div>
                                <div
                                  className="profile"
                                >
                                  <img
                                    alt="Profile icon"
                                    className="menu-icon"
                                  />
                                </div>
                                <div
                                  className="profile-name"
                                >
                                  <span
                                    className="username"
                                  >
                                    undefined undefined
                                  </span>
                                  <ProfileMenu>
                                    <ThemedIconMenu
                                      className="material-icons profile-dropdown"
                                      composeTheme="deeply"
                                      icon="arrow_drop_down"
                                      iconRipple={true}
                                      mapThemrProps={[Function]}
                                      menuRipple={true}
                                      position="auto"
                                      selectable={false}
                                    >
                                      <IconMenu
                                        className="material-icons profile-dropdown"
                                        icon="arrow_drop_down"
                                        iconRipple={true}
                                        menuRipple={true}
                                        position="auto"
                                        selectable={false}
                                        theme={
                                          Object {
                                            "tooltipInner": "tooltipInner",
                                          }
                                        }
                                      >
                                        <div
                                          className="material-icons profile-dropdown"
                                        >
                                          <ThemedThemed
                                            composeTheme="deeply"
                                            disabled={false}
                                            icon="arrow_drop_down"
                                            mapThemrProps={[Function]}
                                            onClick={[Function]}
                                            ripple={true}
                                            rippleCentered={true}
                                            rippleClassName=""
                                            rippleMultiple={true}
                                            rippleSpread={2}
                                          >
                                            <ThemedRippledComponent
                                              composeTheme="deeply"
                                              disabled={false}
                                              icon="arrow_drop_down"
                                              mapThemrProps={[Function]}
                                              onClick={[Function]}
                                              ripple={true}
                                              rippleCentered={true}
                                              rippleClassName=""
                                              rippleMultiple={true}
                                              rippleSpread={2}
                                              theme={
                                                Object {
                                                  "tooltipInner": "tooltipInner",
                                                }
                                              }
                                            >
                                              <RippledComponent
                                                disabled={false}
                                                icon="arrow_drop_down"
                                                onClick={[Function]}
                                                ripple={true}
                                                rippleCentered={true}
                                                rippleClassName=""
                                                rippleMultiple={true}
                                                rippleSpread={2}
                                                theme={
                                                  Object {
                                                    "tooltipInner": "tooltipInner",
                                                  }
                                                }
                                              >
                                                <IconButton
                                                  accent={false}
                                                  className=""
                                                  disabled={false}
                                                  icon="arrow_drop_down"
                                                  neutral={true}
                                                  onClick={[Function]}
                                                  onMouseDown={[Function]}
                                                  onTouchStart={[Function]}
                                                  primary={false}
                                                  theme={
                                                    Object {
                                                      "tooltipInner": "tooltipInner",
                                                    }
                                                  }
                                                  type="button"
                                                >
                                                  <button
                                                    className=""
                                                    data-react-toolbox="button"
                                                    disabled={false}
                                                    onClick={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchStart={[Function]}
                                                    type="button"
                                                  >
                                                    <FontIcon
                                                      alt=""
                                                      className=""
                                                      value="arrow_drop_down"
                                                    >
                                                      <span
                                                        aria-label=""
                                                        className="material-icons"
                                                        data-react-toolbox="font-icon"
                                                      >
                                                        arrow_drop_down
                                                      </span>
                                                    </FontIcon>
                                                  </button>
                                                </IconButton>
                                              </RippledComponent>
                                            </ThemedRippledComponent>
                                          </ThemedThemed>
                                          <ThemedMenu
                                            active={false}
                                            composeTheme="deeply"
                                            mapThemrProps={[Function]}
                                            onHide={[Function]}
                                            outline={true}
                                            position="auto"
                                            ripple={true}
                                            selectable={false}
                                            theme={
                                              Object {
                                                "tooltipInner": "tooltipInner",
                                              }
                                            }
                                          >
                                            <Menu
                                              active={false}
                                              onHide={[Function]}
                                              outline={true}
                                              position="auto"
                                              ripple={true}
                                              selectable={false}
                                              theme={
                                                Object {
                                                  "tooltipInner": "tooltipInner",
                                                }
                                              }
                                            >
                                              <div
                                                className=""
                                                data-react-toolbox="menu"
                                                style={
                                                  Object {
                                                    "height": undefined,
                                                    "width": undefined,
                                                  }
                                                }
                                              >
                                                <div
                                                  style={
                                                    Object {
                                                      "height": undefined,
                                                      "width": undefined,
                                                    }
                                                  }
                                                />
                                                <ul>
                                                  <NavLink
                                                    activeClassName="active"
                                                    ariaCurrent="true"
                                                    key=".0"
                                                    to="/preference"
                                                  >
                                                    <Route
                                                      path="/preference"
                                                    >
                                                      <Link
                                                        aria-current={false}
                                                        replace={false}
                                                        to="/preference"
                                                      >
                                                        <a
                                                          aria-current={false}
                                                          href="/preference"
                                                          onClick={[Function]}
                                                        >
                                                          <ThemedThemed
                                                            caption="Preference"
                                                            className="profile-menu"
                                                            composeTheme="deeply"
                                                            disabled={false}
                                                            mapThemrProps={[Function]}
                                                            ripple={true}
                                                            rippleCentered={false}
                                                            rippleClassName=""
                                                            rippleMultiple={true}
                                                            rippleSpread={2}
                                                          >
                                                            <ThemedRippledComponent
                                                              caption="Preference"
                                                              className="profile-menu"
                                                              composeTheme="deeply"
                                                              disabled={false}
                                                              mapThemrProps={[Function]}
                                                              ripple={true}
                                                              rippleCentered={false}
                                                              rippleClassName=""
                                                              rippleMultiple={true}
                                                              rippleSpread={2}
                                                              theme={
                                                                Object {
                                                                  "tooltipInner": "tooltipInner",
                                                                }
                                                              }
                                                            >
                                                              <RippledComponent
                                                                caption="Preference"
                                                                className="profile-menu"
                                                                disabled={false}
                                                                ripple={true}
                                                                rippleCentered={false}
                                                                rippleClassName=""
                                                                rippleMultiple={true}
                                                                rippleSpread={2}
                                                                theme={
                                                                  Object {
                                                                    "tooltipInner": "tooltipInner",
                                                                  }
                                                                }
                                                              >
                                                                <MenuItem
                                                                  caption="Preference"
                                                                  className="profile-menu"
                                                                  disabled={false}
                                                                  onMouseDown={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  selected={false}
                                                                  theme={
                                                                    Object {
                                                                      "tooltipInner": "tooltipInner",
                                                                    }
                                                                  }
                                                                >
                                                                  <li
                                                                    className="profile-menu"
                                                                    data-react-toolbox="menu-item"
                                                                    onClick={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onTouchStart={[Function]}
                                                                  >
                                                                    <span>
                                                                      Preference
                                                                    </span>
                                                                  </li>
                                                                </MenuItem>
                                                              </RippledComponent>
                                                            </ThemedRippledComponent>
                                                          </ThemedThemed>
                                                        </a>
                                                      </Link>
                                                    </Route>
                                                  </NavLink>
                                                  <ThemedThemed
                                                    caption="LOGOUT"
                                                    className="profile-menu"
                                                    composeTheme="deeply"
                                                    disabled={false}
                                                    key=".1"
                                                    mapThemrProps={[Function]}
                                                    onClick={[Function]}
                                                    ripple={true}
                                                    rippleCentered={false}
                                                    rippleClassName=""
                                                    rippleMultiple={true}
                                                    rippleSpread={2}
                                                    selected={false}
                                                  >
                                                    <ThemedRippledComponent
                                                      caption="LOGOUT"
                                                      className="profile-menu"
                                                      composeTheme="deeply"
                                                      disabled={false}
                                                      mapThemrProps={[Function]}
                                                      onClick={[Function]}
                                                      ripple={true}
                                                      rippleCentered={false}
                                                      rippleClassName=""
                                                      rippleMultiple={true}
                                                      rippleSpread={2}
                                                      selected={false}
                                                      theme={
                                                        Object {
                                                          "tooltipInner": "tooltipInner",
                                                        }
                                                      }
                                                    >
                                                      <RippledComponent
                                                        caption="LOGOUT"
                                                        className="profile-menu"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        ripple={true}
                                                        rippleCentered={false}
                                                        rippleClassName=""
                                                        rippleMultiple={true}
                                                        rippleSpread={2}
                                                        selected={false}
                                                        theme={
                                                          Object {
                                                            "tooltipInner": "tooltipInner",
                                                          }
                                                        }
                                                      >
                                                        <MenuItem
                                                          caption="LOGOUT"
                                                          className="profile-menu"
                                                          disabled={false}
                                                          onClick={[Function]}
                                                          onMouseDown={[Function]}
                                                          onTouchStart={[Function]}
                                                          selected={false}
                                                          theme={
                                                            Object {
                                                              "tooltipInner": "tooltipInner",
                                                            }
                                                          }
                                                        >
                                                          <li
                                                            className="profile-menu"
                                                            data-react-toolbox="menu-item"
                                                            onClick={[Function]}
                                                            onMouseDown={[Function]}
                                                            onTouchStart={[Function]}
                                                          >
                                                            <span>
                                                              LOGOUT
                                                            </span>
                                                          </li>
                                                        </MenuItem>
                                                      </RippledComponent>
                                                    </ThemedRippledComponent>
                                                  </ThemedThemed>
                                                </ul>
                                              </div>
                                            </Menu>
                                          </ThemedMenu>
                                        </div>
                                      </IconMenu>
                                    </ThemedIconMenu>
                                  </ProfileMenu>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </TopMenu>
                      <withRouter(TopNav)>
                        <Route
                          render={[Function]}
                        >
                          <TopNav
                            history={
                              Object {
                                "action": "REPLACE",
                                "block": [Function],
                                "canGo": [Function],
                                "createHref": [Function],
                                "entries": Array [
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  },
                                  Object {
                                    "hash": "",
                                    "pathname": "/analytics",
                                    "search": "",
                                    "state": undefined,
                                  },
                                ],
                                "go": [Function],
                                "goBack": [Function],
                                "goForward": [Function],
                                "index": 1,
                                "length": 2,
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "pathname": "/analytics",
                                  "search": "",
                                  "state": undefined,
                                },
                                "push": [Function],
                                "replace": [Function],
                              }
                            }
                            location={
                              Object {
                                "hash": "",
                                "pathname": "/analytics",
                                "search": "",
                                "state": undefined,
                              }
                            }
                            match={
                              Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/analytics",
                                "url": "/analytics",
                              }
                            }
                          >
                            <div
                              className="top-nav"
                            >
                              <ul
                                className="converge-menu"
                              >
                                <li
                                  className="active"
                                  key="Analytics"
                                >
                                  <Link
                                    className="converge-link"
                                    onClick={[Function]}
                                    replace={false}
                                    to="/analytics"
                                  >
                                    <a
                                      className="converge-link"
                                      href="/analytics"
                                      onClick={[Function]}
                                    >
                                      <span>
                                        <img
                                          alt="Analytics"
                                          src="test-file-stub"
                                        />
                                      </span>
                                      Analytics
                                    </a>
                                  </Link>
                                </li>
                                <li
                                  className=""
                                  key="Settings"
                                >
                                  <Link
                                    className="converge-link"
                                    onClick={[Function]}
                                    replace={false}
                                    to="/settings/locations"
                                  >
                                    <a
                                      className="converge-link"
                                      href="/settings/locations"
                                      onClick={[Function]}
                                    >
                                      <span>
                                        <img
                                          alt="Settings"
                                          src="test-file-stub"
                                        />
                                      </span>
                                      Settings
                                    </a>
                                  </Link>
                                </li>
                                <li
                                  className=""
                                  key="Room Feedback"
                                >
                                  <Link
                                    className="converge-link"
                                    onClick={[Function]}
                                    replace={false}
                                    to="/feedback"
                                  >
                                    <a
                                      className="converge-link"
                                      href="/feedback"
                                      onClick={[Function]}
                                    >
                                      <span>
                                        <img
                                          alt="Room Feedback"
                                          src="test-file-stub"
                                        />
                                      </span>
                                      Room Feedback
                                    </a>
                                  </Link>
                                </li>
                              </ul>
                            </div>
                          </TopNav>
                        </Route>
                      </withRouter(TopNav)>
                    </NavBar>
                    <div
                      className="analytics-container"
                    >
                      <Apollo(AnalyticsActivity)>
                        <Query
                          displayName="Apollo(AnalyticsActivity)"
                          query={
                            Object {
                              "definitions": Array [
                                Object {
                                  "directives": Array [],
                                  "kind": "OperationDefinition",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "user",
                                  },
                                  "operation": "query",
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [
                                          Object {
                                            "kind": "Argument",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "email",
                                            },
                                            "value": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "email",
                                              },
                                            },
                                          },
                                        ],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "user",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "location",
                                              },
                                              "selectionSet": undefined,
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "variableDefinitions": Array [
                                    Object {
                                      "defaultValue": undefined,
                                      "kind": "VariableDefinition",
                                      "type": Object {
                                        "kind": "NonNullType",
                                        "type": Object {
                                          "kind": "NamedType",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "String",
                                          },
                                        },
                                      },
                                      "variable": Object {
                                        "kind": "Variable",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "email",
                                        },
                                      },
                                    },
                                  ],
                                },
                              ],
                              "kind": "Document",
                              "loc": Object {
                                "end": 83,
                                "start": 0,
                              },
                            }
                          }
                          skip={false}
                          variables={
                            Object {
                              "email": "sammy.muriuki@andela.com",
                            }
                          }
                          warnUnhandledError={true}
                        >
                          <AnalyticsActivity
                            user={
                              Object {
                                "error": undefined,
                                "fetchMore": [Function],
                                "loading": true,
                                "networkStatus": 1,
                                "refetch": [Function],
                                "startPolling": [Function],
                                "stopPolling": [Function],
                                "subscribeToMore": [Function],
                                "updateQuery": [Function],
                                "variables": Object {
                                  "email": "sammy.muriuki@andela.com",
                                },
                              }
                            }
                          >
                            <div>
                              <div
                                className="analytics-cover "
                              >
                                <div
                                  className="btn-left"
                                >
                                  <ThemedThemed
                                    className="activity-btn pad-top analysis-btn btn btn-color"
                                    composeTheme="deeply"
                                    disabled={false}
                                    icon={
                                      <div
                                        className="overViewBtn"
                                      >
                                        <span
                                          id="overview-span"
                                        >
                                          OVERVIEW
                                        </span>
                                      </div>
                                    }
                                    id="overview-button"
                                    mapThemrProps={[Function]}
                                    onClick={[Function]}
                                    ripple={true}
                                    rippleCentered={false}
                                    rippleClassName=""
                                    rippleMultiple={true}
                                    rippleSpread={2}
                                    type="button"
                                  >
                                    <ThemedRippledComponent
                                      className="activity-btn pad-top analysis-btn btn btn-color"
                                      composeTheme="deeply"
                                      disabled={false}
                                      icon={
                                        <div
                                          className="overViewBtn"
                                        >
                                          <span
                                            id="overview-span"
                                          >
                                            OVERVIEW
                                          </span>
                                        </div>
                                      }
                                      id="overview-button"
                                      mapThemrProps={[Function]}
                                      onClick={[Function]}
                                      ripple={true}
                                      rippleCentered={false}
                                      rippleClassName=""
                                      rippleMultiple={true}
                                      rippleSpread={2}
                                      theme={
                                        Object {
                                          "tooltipInner": "tooltipInner",
                                        }
                                      }
                                      type="button"
                                    >
                                      <RippledComponent
                                        className="activity-btn pad-top analysis-btn btn btn-color"
                                        disabled={false}
                                        icon={
                                          <div
                                            className="overViewBtn"
                                          >
                                            <span
                                              id="overview-span"
                                            >
                                              OVERVIEW
                                            </span>
                                          </div>
                                        }
                                        id="overview-button"
                                        onClick={[Function]}
                                        ripple={true}
                                        rippleCentered={false}
                                        rippleClassName=""
                                        rippleMultiple={true}
                                        rippleSpread={2}
                                        theme={
                                          Object {
                                            "tooltipInner": "tooltipInner",
                                          }
                                        }
                                        type="button"
                                      >
                                        <Button
                                          accent={false}
                                          className="activity-btn pad-top analysis-btn btn btn-color"
                                          disabled={false}
                                          flat={false}
                                          floating={false}
                                          icon={
                                            <div
                                              className="overViewBtn"
                                            >
                                              <span
                                                id="overview-span"
                                              >
                                                OVERVIEW
                                              </span>
                                            </div>
                                          }
                                          id="overview-button"
                                          mini={false}
                                          neutral={true}
                                          onClick={[Function]}
                                          onMouseDown={[Function]}
                                          onTouchStart={[Function]}
                                          primary={false}
                                          raised={false}
                                          theme={
                                            Object {
                                              "tooltipInner": "tooltipInner",
                                            }
                                          }
                                          type="button"
                                        >
                                          <button
                                            className=" activity-btn pad-top analysis-btn btn btn-color"
                                            data-react-toolbox="button"
                                            disabled={false}
                                            id="overview-button"
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchStart={[Function]}
                                            type="button"
                                          >
                                            <FontIcon
                                              alt=""
                                              className=""
                                              value={
                                                <div
                                                  className="overViewBtn"
                                                >
                                                  <span
                                                    id="overview-span"
                                                  >
                                                    OVERVIEW
                                                  </span>
                                                </div>
                                              }
                                            >
                                              <span
                                                aria-label=""
                                                className=""
                                                data-react-toolbox="font-icon"
                                              >
                                                <div
                                                  className="overViewBtn"
                                                >
                                                  <span
                                                    id="overview-span"
                                                  >
                                                    OVERVIEW
                                                  </span>
                                                </div>
                                              </span>
                                            </FontIcon>
                                          </button>
                                        </Button>
                                      </RippledComponent>
                                    </ThemedRippledComponent>
                                  </ThemedThemed>
                                  <ThemedThemed
                                    className="overview-btn  analysis-btn btn "
                                    composeTheme="deeply"
                                    disabled={false}
                                    icon={
                                      <div
                                        className="activityIconBtn"
                                      >
                                        <span
                                          id="activity-span"
                                        >
                                          ACTIVITY
                                        </span>
                                      </div>
                                    }
                                    mapThemrProps={[Function]}
                                    onClick={[Function]}
                                    ripple={true}
                                    rippleCentered={false}
                                    rippleClassName=""
                                    rippleMultiple={true}
                                    rippleSpread={2}
                                  >
                                    <ThemedRippledComponent
                                      className="overview-btn  analysis-btn btn "
                                      composeTheme="deeply"
                                      disabled={false}
                                      icon={
                                        <div
                                          className="activityIconBtn"
                                        >
                                          <span
                                            id="activity-span"
                                          >
                                            ACTIVITY
                                          </span>
                                        </div>
                                      }
                                      mapThemrProps={[Function]}
                                      onClick={[Function]}
                                      ripple={true}
                                      rippleCentered={false}
                                      rippleClassName=""
                                      rippleMultiple={true}
                                      rippleSpread={2}
                                      theme={
                                        Object {
                                          "tooltipInner": "tooltipInner",
                                        }
                                      }
                                    >
                                      <RippledComponent
                                        className="overview-btn  analysis-btn btn "
                                        disabled={false}
                                        icon={
                                          <div
                                            className="activityIconBtn"
                                          >
                                            <span
                                              id="activity-span"
                                            >
                                              ACTIVITY
                                            </span>
                                          </div>
                                        }
                                        onClick={[Function]}
                                        ripple={true}
                                        rippleCentered={false}
                                        rippleClassName=""
                                        rippleMultiple={true}
                                        rippleSpread={2}
                                        theme={
                                          Object {
                                            "tooltipInner": "tooltipInner",
                                          }
                                        }
                                      >
                                        <Button
                                          accent={false}
                                          className="overview-btn  analysis-btn btn "
                                          disabled={false}
                                          flat={false}
                                          floating={false}
                                          icon={
                                            <div
                                              className="activityIconBtn"
                                            >
                                              <span
                                                id="activity-span"
                                              >
                                                ACTIVITY
                                              </span>
                                            </div>
                                          }
                                          mini={false}
                                          neutral={true}
                                          onClick={[Function]}
                                          onMouseDown={[Function]}
                                          onTouchStart={[Function]}
                                          primary={false}
                                          raised={false}
                                          theme={
                                            Object {
                                              "tooltipInner": "tooltipInner",
                                            }
                                          }
                                          type="button"
                                        >
                                          <button
                                            className=" overview-btn  analysis-btn btn "
                                            data-react-toolbox="button"
                                            disabled={false}
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchStart={[Function]}
                                            type="button"
                                          >
                                            <FontIcon
                                              alt=""
                                              className=""
                                              value={
                                                <div
                                                  className="activityIconBtn"
                                                >
                                                  <span
                                                    id="activity-span"
                                                  >
                                                    ACTIVITY
                                                  </span>
                                                </div>
                                              }
                                            >
                                              <span
                                                aria-label=""
                                                className=""
                                                data-react-toolbox="font-icon"
                                              >
                                                <div
                                                  className="activityIconBtn"
                                                >
                                                  <span
                                                    id="activity-span"
                                                  >
                                                    ACTIVITY
                                                  </span>
                                                </div>
                                              </span>
                                            </FontIcon>
                                          </button>
                                        </Button>
                                      </RippledComponent>
                                    </ThemedRippledComponent>
                                  </ThemedThemed>
                                </div>
                                <div
                                  className="btn-right"
                                >
                                  <ThemedThemed
                                    className="location-btn analysis-btn "
                                    composeTheme="deeply"
                                    disabled={false}
                                    icon={
                                      <div
                                        className="locationIconBtn"
                                      >
                                        <span>
                                          Kampala
                                        </span>
                                      </div>
                                    }
                                    id="location-btn"
                                    mapThemrProps={[Function]}
                                    ripple={true}
                                    rippleCentered={false}
                                    rippleClassName=""
                                    rippleMultiple={true}
                                    rippleSpread={2}
                                  >
                                    <ThemedRippledComponent
                                      className="location-btn analysis-btn "
                                      composeTheme="deeply"
                                      disabled={false}
                                      icon={
                                        <div
                                          className="locationIconBtn"
                                        >
                                          <span>
                                            Kampala
                                          </span>
                                        </div>
                                      }
                                      id="location-btn"
                                      mapThemrProps={[Function]}
                                      ripple={true}
                                      rippleCentered={false}
                                      rippleClassName=""
                                      rippleMultiple={true}
                                      rippleSpread={2}
                                      theme={
                                        Object {
                                          "tooltipInner": "tooltipInner",
                                        }
                                      }
                                    >
                                      <RippledComponent
                                        className="location-btn analysis-btn "
                                        disabled={false}
                                        icon={
                                          <div
                                            className="locationIconBtn"
                                          >
                                            <span>
                                              Kampala
                                            </span>
                                          </div>
                                        }
                                        id="location-btn"
                                        ripple={true}
                                        rippleCentered={false}
                                        rippleClassName=""
                                        rippleMultiple={true}
                                        rippleSpread={2}
                                        theme={
                                          Object {
                                            "tooltipInner": "tooltipInner",
                                          }
                                        }
                                      >
                                        <Button
                                          accent={false}
                                          className="location-btn analysis-btn "
                                          disabled={false}
                                          flat={false}
                                          floating={false}
                                          icon={
                                            <div
                                              className="locationIconBtn"
                                            >
                                              <span>
                                                Kampala
                                              </span>
                                            </div>
                                          }
                                          id="location-btn"
                                          mini={false}
                                          neutral={true}
                                          onMouseDown={[Function]}
                                          onTouchStart={[Function]}
                                          primary={false}
                                          raised={false}
                                          theme={
                                            Object {
                                              "tooltipInner": "tooltipInner",
                                            }
                                          }
                                          type="button"
                                        >
                                          <button
                                            className=" location-btn analysis-btn "
                                            data-react-toolbox="button"
                                            disabled={false}
                                            id="location-btn"
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchStart={[Function]}
                                            type="button"
                                          >
                                            <FontIcon
                                              alt=""
                                              className=""
                                              value={
                                                <div
                                                  className="locationIconBtn"
                                                >
                                                  <span>
                                                    Kampala
                                                  </span>
                                                </div>
                                              }
                                            >
                                              <span
                                                aria-label=""
                                                className=""
                                                data-react-toolbox="font-icon"
                                              >
                                                <div
                                                  className="locationIconBtn"
                                                >
                                                  <span>
                                                    Kampala
                                                  </span>
                                                </div>
                                              </span>
                                            </FontIcon>
                                          </button>
                                        </Button>
                                      </RippledComponent>
                                    </ThemedRippledComponent>
                                  </ThemedThemed>
                                  <ThemedThemed
                                    className="analysis-btn calendar-btn"
                                    composeTheme="deeply"
                                    disabled={false}
                                    icon={
                                      <div
                                        className="calendarIconBtn"
                                      >
                                        <span>
                                          Feb 01 2019 - Feb 01 2019
                                        </span>
                                      </div>
                                    }
                                    id="calendar-btn"
                                    mapThemrProps={[Function]}
                                    onClick={[Function]}
                                    ripple={true}
                                    rippleCentered={false}
                                    rippleClassName=""
                                    rippleMultiple={true}
                                    rippleSpread={2}
                                  >
                                    <ThemedRippledComponent
                                      className="analysis-btn calendar-btn"
                                      composeTheme="deeply"
                                      disabled={false}
                                      icon={
                                        <div
                                          className="calendarIconBtn"
                                        >
                                          <span>
                                            Feb 01 2019 - Feb 01 2019
                                          </span>
                                        </div>
                                      }
                                      id="calendar-btn"
                                      mapThemrProps={[Function]}
                                      onClick={[Function]}
                                      ripple={true}
                                      rippleCentered={false}
                                      rippleClassName=""
                                      rippleMultiple={true}
                                      rippleSpread={2}
                                      theme={
                                        Object {
                                          "tooltipInner": "tooltipInner",
                                        }
                                      }
                                    >
                                      <RippledComponent
                                        className="analysis-btn calendar-btn"
                                        disabled={false}
                                        icon={
                                          <div
                                            className="calendarIconBtn"
                                          >
                                            <span>
                                              Feb 01 2019 - Feb 01 2019
                                            </span>
                                          </div>
                                        }
                                        id="calendar-btn"
                                        onClick={[Function]}
                                        ripple={true}
                                        rippleCentered={false}
                                        rippleClassName=""
                                        rippleMultiple={true}
                                        rippleSpread={2}
                                        theme={
                                          Object {
                                            "tooltipInner": "tooltipInner",
                                          }
                                        }
                                      >
                                        <Button
                                          accent={false}
                                          className="analysis-btn calendar-btn"
                                          disabled={false}
                                          flat={false}
                                          floating={false}
                                          icon={
                                            <div
                                              className="calendarIconBtn"
                                            >
                                              <span>
                                                Feb 01 2019 - Feb 01 2019
                                              </span>
                                            </div>
                                          }
                                          id="calendar-btn"
                                          mini={false}
                                          neutral={true}
                                          onClick={[Function]}
                                          onMouseDown={[Function]}
                                          onTouchStart={[Function]}
                                          primary={false}
                                          raised={false}
                                          theme={
                                            Object {
                                              "tooltipInner": "tooltipInner",
                                            }
                                          }
                                          type="button"
                                        >
                                          <button
                                            className=" analysis-btn calendar-btn"
                                            data-react-toolbox="button"
                                            disabled={false}
                                            id="calendar-btn"
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchStart={[Function]}
                                            type="button"
                                          >
                                            <FontIcon
                                              alt=""
                                              className=""
                                              value={
                                                <div
                                                  className="calendarIconBtn"
                                                >
                                                  <span>
                                                    Feb 01 2019 - Feb 01 2019
                                                  </span>
                                                </div>
                                              }
                                            >
                                              <span
                                                aria-label=""
                                                className=""
                                                data-react-toolbox="font-icon"
                                              >
                                                <div
                                                  className="calendarIconBtn"
                                                >
                                                  <span>
                                                    Feb 01 2019 - Feb 01 2019
                                                  </span>
                                                </div>
                                              </span>
                                            </FontIcon>
                                          </button>
                                        </Button>
                                      </RippledComponent>
                                    </ThemedRippledComponent>
                                  </ThemedThemed>
                                  <div
                                    className="dropdown"
                                  >
                                    <button
                                      className="dropbtn"
                                      id="btnControl"
                                      onClick={[Function]}
                                    >
                                      <img
                                        alt="download icon"
                                        className="dropbtn-img"
                                        src="test-file-stub"
                                      />
                                    </button>
                                    <div
                                      className="dropdown-content-null"
                                    >
                                      <span
                                        className="download-dropdown-label"
                                      >
                                        Export options 
                                      </span>
                                      <span
                                        id="download"
                                        onClick={[Function]}
                                      >
                                        PDF
                                      </span>
                                      <span
                                        onClick={[Function]}
                                      >
                                        JPEG
                                      </span>
                                      <span
                                        onClick={[Function]}
                                      >
                                        CSV
                                      </span>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <AnalyticsOverview
                                dateValue={
                                  Object {
                                    "endDate": "Feb 01 2019",
                                    "startDate": "Feb 01 2019",
                                  }
                                }
                              >
                                <AveragePieChartList
                                  dateValue={
                                    Object {
                                      "endDate": "Feb 01 2019",
                                      "startDate": "Feb 01 2019",
                                    }
                                  }
                                >
                                  <div
                                    className="pie-chart-container"
                                  >
                                    <MeetingDurationPieChart
                                      dateValue={
                                        Object {
                                          "endDate": "Feb 01 2019",
                                          "startDate": "Feb 01 2019",
                                        }
                                      }
                                    >
                                      <article
                                        className="pie-chart"
                                      >
                                        <section
                                          className="chart-header"
                                        >
                                          <p
                                            className="chart-title"
                                          >
                                            Average Meeting Duration
                                          </p>
                                          <ThemedTooltippedComponent
                                            className=""
                                            composeTheme="deeply"
                                            mapThemrProps={[Function]}
                                            theme={null}
                                            tooltip="The average amount of time people spend in all booked meeting rooms in a set time period"
                                            tooltipDelay={0}
                                            tooltipHideOnClick={true}
                                            tooltipPosition="top"
                                            tooltipShowOnClick={true}
                                          >
                                            <TooltippedComponent
                                              className=""
                                              theme={
                                                Object {
                                                  "tooltipInner": "tooltipInner",
                                                }
                                              }
                                              tooltip="The average amount of time people spend in all booked meeting rooms in a set time period"
                                              tooltipDelay={0}
                                              tooltipHideOnClick={true}
                                              tooltipPosition="top"
                                              tooltipShowOnClick={true}
                                            >
                                              <ThemedLink
                                                active={false}
                                                className=""
                                                composeTheme="deeply"
                                                mapThemrProps={[Function]}
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                theme={
                                                  Object {
                                                    "tooltipInner": "tooltipInner",
                                                  }
                                                }
                                              >
                                                <Link
                                                  active={false}
                                                  className=""
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  theme={
                                                    Object {
                                                      "tooltipInner": "tooltipInner",
                                                    }
                                                  }
                                                >
                                                  <a
                                                    className=""
                                                    data-react-toolbox="link"
                                                    onClick={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                  >
                                                    <img
                                                      alt="help icon"
                                                      src="test-file-stub"
                                                    />
                                                  </a>
                                                </Link>
                                              </ThemedLink>
                                            </TooltippedComponent>
                                          </ThemedTooltippedComponent>
                                        </section>
                                        <section
                                          className="chart-content"
                                        >
                                          <Apollo(AverageMeetingDurationPieChart)
                                            dateValue={
                                              Object {
                                                "endDate": "Feb 01 2019",
                                                "startDate": "Feb 01 2019",
                                              }
                                            }
                                          >
                                            <Query
                                              displayName="Apollo(AverageMeetingDurationPieChart)"
                                              query={
                                                Object {
                                                  "definitions": Array [
                                                    Object {
                                                      "directives": Array [],
                                                      "kind": "OperationDefinition",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "durationOfMeetingsPerMeetingRoom",
                                                      },
                                                      "operation": "query",
                                                      "selectionSet": Object {
                                                        "kind": "SelectionSet",
                                                        "selections": Array [
                                                          Object {
                                                            "alias": undefined,
                                                            "arguments": Array [
                                                              Object {
                                                                "kind": "Argument",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "startDate",
                                                                },
                                                                "value": Object {
                                                                  "kind": "Variable",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "startDate",
                                                                  },
                                                                },
                                                              },
                                                              Object {
                                                                "kind": "Argument",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "endDate",
                                                                },
                                                                "value": Object {
                                                                  "kind": "Variable",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "endDate",
                                                                  },
                                                                },
                                                              },
                                                              Object {
                                                                "kind": "Argument",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "page",
                                                                },
                                                                "value": Object {
                                                                  "kind": "Variable",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "page",
                                                                  },
                                                                },
                                                              },
                                                              Object {
                                                                "kind": "Argument",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "perPage",
                                                                },
                                                                "value": Object {
                                                                  "kind": "Variable",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "perPage",
                                                                  },
                                                                },
                                                              },
                                                            ],
                                                            "directives": Array [],
                                                            "kind": "Field",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "analyticsForMeetingsDurations",
                                                            },
                                                            "selectionSet": Object {
                                                              "kind": "SelectionSet",
                                                              "selections": Array [
                                                                Object {
                                                                  "alias": undefined,
                                                                  "arguments": Array [],
                                                                  "directives": Array [],
                                                                  "kind": "Field",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "hasPrevious",
                                                                  },
                                                                  "selectionSet": undefined,
                                                                },
                                                                Object {
                                                                  "alias": undefined,
                                                                  "arguments": Array [],
                                                                  "directives": Array [],
                                                                  "kind": "Field",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "hasNext",
                                                                  },
                                                                  "selectionSet": undefined,
                                                                },
                                                                Object {
                                                                  "alias": undefined,
                                                                  "arguments": Array [],
                                                                  "directives": Array [],
                                                                  "kind": "Field",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "pages",
                                                                  },
                                                                  "selectionSet": undefined,
                                                                },
                                                                Object {
                                                                  "alias": undefined,
                                                                  "arguments": Array [],
                                                                  "directives": Array [],
                                                                  "kind": "Field",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "MeetingsDurationaAnalytics",
                                                                  },
                                                                  "selectionSet": Object {
                                                                    "kind": "SelectionSet",
                                                                    "selections": Array [
                                                                      Object {
                                                                        "alias": undefined,
                                                                        "arguments": Array [],
                                                                        "directives": Array [],
                                                                        "kind": "Field",
                                                                        "name": Object {
                                                                          "kind": "Name",
                                                                          "value": "roomName",
                                                                        },
                                                                        "selectionSet": undefined,
                                                                      },
                                                                      Object {
                                                                        "alias": undefined,
                                                                        "arguments": Array [],
                                                                        "directives": Array [],
                                                                        "kind": "Field",
                                                                        "name": Object {
                                                                          "kind": "Name",
                                                                          "value": "count",
                                                                        },
                                                                        "selectionSet": undefined,
                                                                      },
                                                                      Object {
                                                                        "alias": undefined,
                                                                        "arguments": Array [],
                                                                        "directives": Array [],
                                                                        "kind": "Field",
                                                                        "name": Object {
                                                                          "kind": "Name",
                                                                          "value": "totalDuration",
                                                                        },
                                                                        "selectionSet": undefined,
                                                                      },
                                                                    ],
                                                                  },
                                                                },
                                                              ],
                                                            },
                                                          },
                                                        ],
                                                      },
                                                      "variableDefinitions": Array [
                                                        Object {
                                                          "defaultValue": undefined,
                                                          "kind": "VariableDefinition",
                                                          "type": Object {
                                                            "kind": "NonNullType",
                                                            "type": Object {
                                                              "kind": "NamedType",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "String",
                                                              },
                                                            },
                                                          },
                                                          "variable": Object {
                                                            "kind": "Variable",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "startDate",
                                                            },
                                                          },
                                                        },
                                                        Object {
                                                          "defaultValue": undefined,
                                                          "kind": "VariableDefinition",
                                                          "type": Object {
                                                            "kind": "NonNullType",
                                                            "type": Object {
                                                              "kind": "NamedType",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "String",
                                                              },
                                                            },
                                                          },
                                                          "variable": Object {
                                                            "kind": "Variable",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "endDate",
                                                            },
                                                          },
                                                        },
                                                        Object {
                                                          "defaultValue": undefined,
                                                          "kind": "VariableDefinition",
                                                          "type": Object {
                                                            "kind": "NamedType",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "Int",
                                                            },
                                                          },
                                                          "variable": Object {
                                                            "kind": "Variable",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "page",
                                                            },
                                                          },
                                                        },
                                                        Object {
                                                          "defaultValue": undefined,
                                                          "kind": "VariableDefinition",
                                                          "type": Object {
                                                            "kind": "NamedType",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "Int",
                                                            },
                                                          },
                                                          "variable": Object {
                                                            "kind": "Variable",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "perPage",
                                                            },
                                                          },
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                  "kind": "Document",
                                                  "loc": Object {
                                                    "end": 391,
                                                    "start": 0,
                                                  },
                                                }
                                              }
                                              skip={false}
                                              variables={
                                                Object {
                                                  "endDate": "Feb 01 2019",
                                                  "startDate": "Feb 01 2019",
                                                }
                                              }
                                              warnUnhandledError={true}
                                            >
                                              <AverageMeetingDurationPieChart
                                                data={
                                                  Object {
                                                    "error": undefined,
                                                    "fetchMore": [Function],
                                                    "loading": true,
                                                    "networkStatus": 1,
                                                    "refetch": [Function],
                                                    "startPolling": [Function],
                                                    "stopPolling": [Function],
                                                    "subscribeToMore": [Function],
                                                    "updateQuery": [Function],
                                                    "variables": Object {
                                                      "endDate": "Feb 01 2019",
                                                      "startDate": "Feb 01 2019",
                                                    },
                                                  }
                                                }
                                                dateValue={
                                                  Object {
                                                    "endDate": "Feb 01 2019",
                                                    "startDate": "Feb 01 2019",
                                                  }
                                                }
                                              >
                                                <Spinner
                                                  size=""
                                                >
                                                  <div
                                                    className="centered"
                                                  >
                                                    <div
                                                      className="spinner"
                                                    />
                                                  </div>
                                                </Spinner>
                                              </AverageMeetingDurationPieChart>
                                            </Query>
                                          </Apollo(AverageMeetingDurationPieChart)>
                                          <section
                                            className="chart-details"
                                          >
                                            <p
                                              className="duration-first-circle"
                                            >
                                              <span />
                                              Above 60 Minutes
                                            </p>
                                            <p
                                              className="duration-second-circle"
                                            >
                                              <span />
                                              45 - 60 Minutes
                                            </p>
                                            <p
                                              className="duration-third-circle"
                                            >
                                              <span />
                                              30 - 45 Minutes
                                            </p>
                                            <p
                                              className="duration-forth-circle"
                                            >
                                              <span />
                                              Below 30 Minutes
                                            </p>
                                          </section>
                                        </section>
                                      </article>
                                    </MeetingDurationPieChart>
                                    <RoomCapacityPieChart>
                                      <article
                                        className="pie-chart"
                                      >
                                        <section
                                          className="chart-header"
                                        >
                                          <p
                                            className="chart-title"
                                          >
                                            Average Room Capacity
                                          </p>
                                          <ThemedTooltippedComponent
                                            className=""
                                            composeTheme="deeply"
                                            mapThemrProps={[Function]}
                                            theme={null}
                                            tooltip="The number of people a meeting room can accommodate"
                                            tooltipDelay={0}
                                            tooltipHideOnClick={true}
                                            tooltipPosition="top"
                                            tooltipShowOnClick={true}
                                          >
                                            <TooltippedComponent
                                              className=""
                                              theme={
                                                Object {
                                                  "tooltipInner": "tooltipInner",
                                                }
                                              }
                                              tooltip="The number of people a meeting room can accommodate"
                                              tooltipDelay={0}
                                              tooltipHideOnClick={true}
                                              tooltipPosition="top"
                                              tooltipShowOnClick={true}
                                            >
                                              <ThemedLink
                                                active={false}
                                                className=""
                                                composeTheme="deeply"
                                                mapThemrProps={[Function]}
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                theme={
                                                  Object {
                                                    "tooltipInner": "tooltipInner",
                                                  }
                                                }
                                              >
                                                <Link
                                                  active={false}
                                                  className=""
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  theme={
                                                    Object {
                                                      "tooltipInner": "tooltipInner",
                                                    }
                                                  }
                                                >
                                                  <a
                                                    className=""
                                                    data-react-toolbox="link"
                                                    onClick={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                  >
                                                    <img
                                                      alt="help icon"
                                                      src="test-file-stub"
                                                    />
                                                  </a>
                                                </Link>
                                              </ThemedLink>
                                            </TooltippedComponent>
                                          </ThemedTooltippedComponent>
                                        </section>
                                        <section
                                          className="chart-content"
                                        >
                                          <Apollo(GetAverageRoomCapacityComponent)>
                                            <Query
                                              displayName="Apollo(GetAverageRoomCapacityComponent)"
                                              query={
                                                Object {
                                                  "definitions": Array [
                                                    Object {
                                                      "directives": Array [],
                                                      "kind": "OperationDefinition",
                                                      "name": undefined,
                                                      "operation": "query",
                                                      "selectionSet": Object {
                                                        "kind": "SelectionSet",
                                                        "selections": Array [
                                                          Object {
                                                            "alias": undefined,
                                                            "arguments": Array [],
                                                            "directives": Array [],
                                                            "kind": "Field",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "allRooms",
                                                            },
                                                            "selectionSet": Object {
                                                              "kind": "SelectionSet",
                                                              "selections": Array [
                                                                Object {
                                                                  "alias": undefined,
                                                                  "arguments": Array [],
                                                                  "directives": Array [],
                                                                  "kind": "Field",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "rooms",
                                                                  },
                                                                  "selectionSet": Object {
                                                                    "kind": "SelectionSet",
                                                                    "selections": Array [
                                                                      Object {
                                                                        "alias": undefined,
                                                                        "arguments": Array [],
                                                                        "directives": Array [],
                                                                        "kind": "Field",
                                                                        "name": Object {
                                                                          "kind": "Name",
                                                                          "value": "id",
                                                                        },
                                                                        "selectionSet": undefined,
                                                                      },
                                                                      Object {
                                                                        "alias": undefined,
                                                                        "arguments": Array [],
                                                                        "directives": Array [],
                                                                        "kind": "Field",
                                                                        "name": Object {
                                                                          "kind": "Name",
                                                                          "value": "name",
                                                                        },
                                                                        "selectionSet": undefined,
                                                                      },
                                                                      Object {
                                                                        "alias": undefined,
                                                                        "arguments": Array [],
                                                                        "directives": Array [],
                                                                        "kind": "Field",
                                                                        "name": Object {
                                                                          "kind": "Name",
                                                                          "value": "capacity",
                                                                        },
                                                                        "selectionSet": undefined,
                                                                      },
                                                                    ],
                                                                  },
                                                                },
                                                              ],
                                                            },
                                                          },
                                                        ],
                                                      },
                                                      "variableDefinitions": Array [],
                                                    },
                                                  ],
                                                  "kind": "Document",
                                                  "loc": Object {
                                                    "end": 73,
                                                    "start": 0,
                                                  },
                                                }
                                              }
                                              skip={false}
                                              warnUnhandledError={true}
                                            >
                                              <GetAverageRoomCapacityComponent
                                                data={
                                                  Object {
                                                    "error": undefined,
                                                    "fetchMore": [Function],
                                                    "loading": true,
                                                    "networkStatus": 1,
                                                    "refetch": [Function],
                                                    "startPolling": [Function],
                                                    "stopPolling": [Function],
                                                    "subscribeToMore": [Function],
                                                    "updateQuery": [Function],
                                                    "variables": Object {},
                                                  }
                                                }
                                              >
                                                <Spinner
                                                  size=""
                                                >
                                                  <div
                                                    className="centered"
                                                  >
                                                    <div
                                                      className="spinner"
                                                    />
                                                  </div>
                                                </Spinner>
                                              </GetAverageRoomCapacityComponent>
                                            </Query>
                                          </Apollo(GetAverageRoomCapacityComponent)>
                                          <section
                                            className="chart-details"
                                          >
                                            <p
                                              className="room-capacity-first-circle"
                                            >
                                              <span />
                                              Less than 10
                                            </p>
                                            <p
                                              className="room-capacity-second-circle"
                                            >
                                              <span />
                                              10 - 20
                                            </p>
                                            <p
                                              className="room-capacity-third-circle"
                                            >
                                              <span />
                                              More than 20
                                            </p>
                                          </section>
                                        </section>
                                      </article>
                                    </RoomCapacityPieChart>
                                    <BookingsCountBarGraph
                                      dateValue={
                                        Object {
                                          "endDate": "Feb 01 2019",
                                          "startDate": "Feb 01 2019",
                                        }
                                      }
                                    >
                                      <article
                                        className="bar-graph"
                                      >
                                        <section
                                          className="graph-header"
                                        >
                                          <p
                                            className="graph-title"
                                          >
                                            Total Bookings Count
                                          </p>
                                          <ThemedTooltippedComponent
                                            className=""
                                            composeTheme="deeply"
                                            mapThemrProps={[Function]}
                                            theme={null}
                                            tooltip="Total count of bookings in a given time"
                                            tooltipDelay={0}
                                            tooltipHideOnClick={true}
                                            tooltipPosition="top"
                                            tooltipShowOnClick={true}
                                          >
                                            <TooltippedComponent
                                              className=""
                                              theme={
                                                Object {
                                                  "tooltipInner": "tooltipInner",
                                                }
                                              }
                                              tooltip="Total count of bookings in a given time"
                                              tooltipDelay={0}
                                              tooltipHideOnClick={true}
                                              tooltipPosition="top"
                                              tooltipShowOnClick={true}
                                            >
                                              <ThemedLink
                                                active={false}
                                                className=""
                                                composeTheme="deeply"
                                                mapThemrProps={[Function]}
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                theme={
                                                  Object {
                                                    "tooltipInner": "tooltipInner",
                                                  }
                                                }
                                              >
                                                <Link
                                                  active={false}
                                                  className=""
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  theme={
                                                    Object {
                                                      "tooltipInner": "tooltipInner",
                                                    }
                                                  }
                                                >
                                                  <a
                                                    className=""
                                                    data-react-toolbox="link"
                                                    onClick={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                  >
                                                    <img
                                                      alt="help icon"
                                                      src="test-file-stub"
                                                    />
                                                  </a>
                                                </Link>
                                              </ThemedLink>
                                            </TooltippedComponent>
                                          </ThemedTooltippedComponent>
                                        </section>
                                        <section
                                          className="graph-content"
                                        >
                                          <QueryBookingsCount
                                            dateValue={
                                              Object {
                                                "endDate": "Feb 01 2019",
                                                "startDate": "Feb 01 2019",
                                              }
                                            }
                                          >
                                            <Query
                                              notifyOnNetworkStatusChange={true}
                                              query={
                                                Object {
                                                  "definitions": Array [
                                                    Object {
                                                      "directives": Array [],
                                                      "kind": "OperationDefinition",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "AnalyticsBookingsCount",
                                                      },
                                                      "operation": "query",
                                                      "selectionSet": Object {
                                                        "kind": "SelectionSet",
                                                        "selections": Array [
                                                          Object {
                                                            "alias": undefined,
                                                            "arguments": Array [
                                                              Object {
                                                                "kind": "Argument",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "startDate",
                                                                },
                                                                "value": Object {
                                                                  "kind": "Variable",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "startDate",
                                                                  },
                                                                },
                                                              },
                                                              Object {
                                                                "kind": "Argument",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "endDate",
                                                                },
                                                                "value": Object {
                                                                  "kind": "Variable",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "endDate",
                                                                  },
                                                                },
                                                              },
                                                            ],
                                                            "directives": Array [],
                                                            "kind": "Field",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "bookingsAnalyticsCount",
                                                            },
                                                            "selectionSet": Object {
                                                              "kind": "SelectionSet",
                                                              "selections": Array [
                                                                Object {
                                                                  "alias": undefined,
                                                                  "arguments": Array [],
                                                                  "directives": Array [],
                                                                  "kind": "Field",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "period",
                                                                  },
                                                                  "selectionSet": undefined,
                                                                },
                                                                Object {
                                                                  "alias": undefined,
                                                                  "arguments": Array [],
                                                                  "directives": Array [],
                                                                  "kind": "Field",
                                                                  "name": Object {
                                                                    "kind": "Name",
                                                                    "value": "bookings",
                                                                  },
                                                                  "selectionSet": undefined,
                                                                },
                                                              ],
                                                            },
                                                          },
                                                        ],
                                                      },
                                                      "variableDefinitions": Array [
                                                        Object {
                                                          "defaultValue": undefined,
                                                          "kind": "VariableDefinition",
                                                          "type": Object {
                                                            "kind": "NonNullType",
                                                            "type": Object {
                                                              "kind": "NamedType",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "String",
                                                              },
                                                            },
                                                          },
                                                          "variable": Object {
                                                            "kind": "Variable",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "startDate",
                                                            },
                                                          },
                                                        },
                                                        Object {
                                                          "defaultValue": undefined,
                                                          "kind": "VariableDefinition",
                                                          "type": Object {
                                                            "kind": "NonNullType",
                                                            "type": Object {
                                                              "kind": "NamedType",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "String",
                                                              },
                                                            },
                                                          },
                                                          "variable": Object {
                                                            "kind": "Variable",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "endDate",
                                                            },
                                                          },
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                  "kind": "Document",
                                                  "loc": Object {
                                                    "end": 181,
                                                    "start": 0,
                                                  },
                                                }
                                              }
                                              variables={
                                                Object {
                                                  "endDate": "Feb 01 2019",
                                                  "startDate": "Feb 01 2019",
                                                }
                                              }
                                            >
                                              <Spinner
                                                size=""
                                              >
                                                <div
                                                  className="centered"
                                                >
                                                  <div
                                                    className="spinner"
                                                  />
                                                </div>
                                              </Spinner>
                                            </Query>
                                          </QueryBookingsCount>
                                        </section>
                                      </article>
                                    </BookingsCountBarGraph>
                                  </div>
                                </AveragePieChartList>
                                <ComposedBookedRooms
                                  dateValue={
                                    Object {
                                      "endDate": "Feb 01 2019",
                                      "startDate": "Feb 01 2019",
                                    }
                                  }
                                >
                                  <div
                                    className="wrap-composed-rooms"
                                  >
                                    <div>
                                      <ComposedBooked
                                        bookedRoomText="Most Booked Rooms"
                                        component={[Function]}
                                        date={
                                          Object {
                                            "endDate": "Feb 01 2019",
                                            "startDate": "Feb 01 2019",
                                          }
                                        }
                                      >
                                        <BookedRooms
                                          bookedRoomText="Most Booked Rooms"
                                          bookedRoomsList={Array []}
                                          error={null}
                                          fetching={true}
                                          pollIcon="test-file-stub"
                                          tip="The highest number of times meeting rooms were booked in a set time period"
                                        >
                                          <div
                                            className="wrap-booked-room"
                                          >
                                            <div
                                              className="booked-room-header"
                                            >
                                              <img
                                                alt="Pull"
                                                src="test-file-stub"
                                              />
                                              <h4>
                                                Most Booked Rooms
                                              </h4>
                                              <ThemedTooltippedComponent
                                                className=""
                                                composeTheme="deeply"
                                                mapThemrProps={[Function]}
                                                theme={null}
                                                tooltip="The highest number of times meeting rooms were booked in a set time period"
                                                tooltipDelay={0}
                                                tooltipHideOnClick={true}
                                                tooltipPosition="top"
                                                tooltipShowOnClick={true}
                                              >
                                                <TooltippedComponent
                                                  className=""
                                                  theme={
                                                    Object {
                                                      "tooltipInner": "tooltipInner",
                                                    }
                                                  }
                                                  tooltip="The highest number of times meeting rooms were booked in a set time period"
                                                  tooltipDelay={0}
                                                  tooltipHideOnClick={true}
                                                  tooltipPosition="top"
                                                  tooltipShowOnClick={true}
                                                >
                                                  <ThemedLink
                                                    active={false}
                                                    className=""
                                                    composeTheme="deeply"
                                                    mapThemrProps={[Function]}
                                                    onClick={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                    theme={
                                                      Object {
                                                        "tooltipInner": "tooltipInner",
                                                      }
                                                    }
                                                  >
                                                    <Link
                                                      active={false}
                                                      className=""
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      theme={
                                                        Object {
                                                          "tooltipInner": "tooltipInner",
                                                        }
                                                      }
                                                    >
                                                      <a
                                                        className=""
                                                        data-react-toolbox="link"
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                      >
                                                        <img
                                                          alt="help icon"
                                                          src="test-file-stub"
                                                        />
                                                      </a>
                                                    </Link>
                                                  </ThemedLink>
                                                </TooltippedComponent>
                                              </ThemedTooltippedComponent>
                                            </div>
                                            <div
                                              className="booked-room-list"
                                            >
                                              <table>
                                                <TableHead
                                                  titles={
                                                    Array [
                                                      "Room",
                                                      "Meetings",
                                                      "% Share of All Meetings",
                                                    ]
                                                  }
                                                >
                                                  <thead>
                                                    <tr>
                                                      <th
                                                        key="Room"
                                                      >
                                                        Room
                                                      </th>
                                                      <th
                                                        key="Meetings"
                                                      >
                                                        Meetings
                                                      </th>
                                                      <th
                                                        key="% Share of All Meetings"
                                                      >
                                                        % Share of All Meetings
                                                      </th>
                                                    </tr>
                                                  </thead>
                                                </TableHead>
                                                <tbody>
                                                  <tr>
                                                    <td
                                                      colSpan="3"
                                                    >
                                                      <ThemedProgressBar
                                                        buffer={0}
                                                        className=""
                                                        composeTheme="deeply"
                                                        mapThemrProps={[Function]}
                                                        max={100}
                                                        min={0}
                                                        mode="indeterminate"
                                                        multicolor={false}
                                                        type="linear"
                                                        value={0}
                                                      >
                                                        <ProgressBar
                                                          buffer={0}
                                                          className=""
                                                          max={100}
                                                          min={0}
                                                          mode="indeterminate"
                                                          multicolor={false}
                                                          theme={
                                                            Object {
                                                              "tooltipInner": "tooltipInner",
                                                            }
                                                          }
                                                          type="linear"
                                                          value={0}
                                                        >
                                                          <div
                                                            aria-valuemax={100}
                                                            aria-valuemin={0}
                                                            aria-valuenow={0}
                                                            className=""
                                                            data-react-toolbox="progress-bar"
                                                          >
                                                            <div>
                                                              <span
                                                                data-ref="buffer"
                                                              />
                                                              <span
                                                                data-ref="value"
                                                              />
                                                            </div>
                                                          </div>
                                                        </ProgressBar>
                                                      </ThemedProgressBar>
                                                    </td>
                                                  </tr>
                                                </tbody>
                                              </table>
                                            </div>
                                          </div>
                                        </BookedRooms>
                                      </ComposedBooked>
                                    </div>
                                    <div
                                      id="booked-room-margin"
                                    >
                                      <ComposedBooked
                                        bookedRoomText="Least Booked Rooms"
                                        component={[Function]}
                                        date={
                                          Object {
                                            "endDate": "Feb 01 2019",
                                            "startDate": "Feb 01 2019",
                                          }
                                        }
                                        tip=""
                                      >
                                        <BookedRooms
                                          bookedRoomText="Least Booked Rooms"
                                          bookedRoomsList={Array []}
                                          error={null}
                                          fetching={true}
                                          pollIcon="test-file-stub"
                                          tip="The least number of times meeting rooms were booked in a set time period"
                                        >
                                          <div
                                            className="wrap-booked-room"
                                          >
                                            <div
                                              className="booked-room-header"
                                            >
                                              <img
                                                alt="Pull"
                                                src="test-file-stub"
                                              />
                                              <h4>
                                                Least Booked Rooms
                                              </h4>
                                              <ThemedTooltippedComponent
                                                className=""
                                                composeTheme="deeply"
                                                mapThemrProps={[Function]}
                                                theme={null}
                                                tooltip="The least number of times meeting rooms were booked in a set time period"
                                                tooltipDelay={0}
                                                tooltipHideOnClick={true}
                                                tooltipPosition="top"
                                                tooltipShowOnClick={true}
                                              >
                                                <TooltippedComponent
                                                  className=""
                                                  theme={
                                                    Object {
                                                      "tooltipInner": "tooltipInner",
                                                    }
                                                  }
                                                  tooltip="The least number of times meeting rooms were booked in a set time period"
                                                  tooltipDelay={0}
                                                  tooltipHideOnClick={true}
                                                  tooltipPosition="top"
                                                  tooltipShowOnClick={true}
                                                >
                                                  <ThemedLink
                                                    active={false}
                                                    className=""
                                                    composeTheme="deeply"
                                                    mapThemrProps={[Function]}
                                                    onClick={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                    theme={
                                                      Object {
                                                        "tooltipInner": "tooltipInner",
                                                      }
                                                    }
                                                  >
                                                    <Link
                                                      active={false}
                                                      className=""
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      theme={
                                                        Object {
                                                          "tooltipInner": "tooltipInner",
                                                        }
                                                      }
                                                    >
                                                      <a
                                                        className=""
                                                        data-react-toolbox="link"
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                      >
                                                        <img
                                                          alt="help icon"
                                                          src="test-file-stub"
                                                        />
                                                      </a>
                                                    </Link>
                                                  </ThemedLink>
                                                </TooltippedComponent>
                                              </ThemedTooltippedComponent>
                                            </div>
                                            <div
                                              className="booked-room-list"
                                            >
                                              <table>
                                                <TableHead
                                                  titles={
                                                    Array [
                                                      "Room",
                                                      "Meetings",
                                                      "% Share of All Meetings",
                                                    ]
                                                  }
                                                >
                                                  <thead>
                                                    <tr>
                                                      <th
                                                        key="Room"
                                                      >
                                                        Room
                                                      </th>
                                                      <th
                                                        key="Meetings"
                                                      >
                                                        Meetings
                                                      </th>
                                                      <th
                                                        key="% Share of All Meetings"
                                                      >
                                                        % Share of All Meetings
                                                      </th>
                                                    </tr>
                                                  </thead>
                                                </TableHead>
                                                <tbody>
                                                  <tr>
                                                    <td
                                                      colSpan="3"
                                                    >
                                                      <ThemedProgressBar
                                                        buffer={0}
                                                        className=""
                                                        composeTheme="deeply"
                                                        mapThemrProps={[Function]}
                                                        max={100}
                                                        min={0}
                                                        mode="indeterminate"
                                                        multicolor={false}
                                                        type="linear"
                                                        value={0}
                                                      >
                                                        <ProgressBar
                                                          buffer={0}
                                                          className=""
                                                          max={100}
                                                          min={0}
                                                          mode="indeterminate"
                                                          multicolor={false}
                                                          theme={
                                                            Object {
                                                              "tooltipInner": "tooltipInner",
                                                            }
                                                          }
                                                          type="linear"
                                                          value={0}
                                                        >
                                                          <div
                                                            aria-valuemax={100}
                                                            aria-valuemin={0}
                                                            aria-valuenow={0}
                                                            className=""
                                                            data-react-toolbox="progress-bar"
                                                          >
                                                            <div>
                                                              <span
                                                                data-ref="buffer"
                                                              />
                                                              <span
                                                                data-ref="value"
                                                              />
                                                            </div>
                                                          </div>
                                                        </ProgressBar>
                                                      </ThemedProgressBar>
                                                    </td>
                                                  </tr>
                                                </tbody>
                                              </table>
                                            </div>
                                          </div>
                                        </BookedRooms>
                                      </ComposedBooked>
                                    </div>
                                  </div>
                                </ComposedBookedRooms>
                                <Apollo(Checkins)
                                  dateValue={
                                    Object {
                                      "endDate": "Feb 01 2019",
                                      "startDate": "Feb 01 2019",
                                    }
                                  }
                                >
                                  <Query
                                    displayName="Apollo(Checkins)"
                                    query={
                                      Object {
                                        "definitions": Array [
                                          Object {
                                            "directives": Array [],
                                            "kind": "OperationDefinition",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "AnalyticsRatiosTotal",
                                            },
                                            "operation": "query",
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [
                                                    Object {
                                                      "kind": "Argument",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "startDate",
                                                      },
                                                      "value": Object {
                                                        "kind": "Variable",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "startDate",
                                                        },
                                                      },
                                                    },
                                                    Object {
                                                      "kind": "Argument",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "endDate",
                                                      },
                                                      "value": Object {
                                                        "kind": "Variable",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "endDate",
                                                        },
                                                      },
                                                    },
                                                  ],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "analyticsRatios",
                                                  },
                                                  "selectionSet": Object {
                                                    "kind": "SelectionSet",
                                                    "selections": Array [
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "checkins",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "checkinsPercentage",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "bookings",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "cancellations",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "cancellationsPercentage",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                    ],
                                                  },
                                                },
                                              ],
                                            },
                                            "variableDefinitions": Array [
                                              Object {
                                                "defaultValue": undefined,
                                                "kind": "VariableDefinition",
                                                "type": Object {
                                                  "kind": "NonNullType",
                                                  "type": Object {
                                                    "kind": "NamedType",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "String",
                                                    },
                                                  },
                                                },
                                                "variable": Object {
                                                  "kind": "Variable",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "startDate",
                                                  },
                                                },
                                              },
                                              Object {
                                                "defaultValue": undefined,
                                                "kind": "VariableDefinition",
                                                "type": Object {
                                                  "kind": "NonNullType",
                                                  "type": Object {
                                                    "kind": "NamedType",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "String",
                                                    },
                                                  },
                                                },
                                                "variable": Object {
                                                  "kind": "Variable",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "endDate",
                                                  },
                                                },
                                              },
                                            ],
                                          },
                                        ],
                                        "kind": "Document",
                                        "loc": Object {
                                          "end": 249,
                                          "start": 0,
                                        },
                                      }
                                    }
                                    skip={false}
                                    variables={
                                      Object {
                                        "endDate": "Feb 01 2019",
                                        "page": 1,
                                        "perPage": 5,
                                        "startDate": "Feb 01 2019",
                                      }
                                    }
                                    warnUnhandledError={true}
                                  >
                                    <Checkins
                                      data={
                                        Object {
                                          "error": undefined,
                                          "fetchMore": [Function],
                                          "loading": true,
                                          "networkStatus": 1,
                                          "refetch": [Function],
                                          "startPolling": [Function],
                                          "stopPolling": [Function],
                                          "subscribeToMore": [Function],
                                          "updateQuery": [Function],
                                          "variables": Object {
                                            "endDate": "Feb 01 2019",
                                            "page": 1,
                                            "perPage": 5,
                                            "startDate": "Feb 01 2019",
                                          },
                                        }
                                      }
                                      dateValue={
                                        Object {
                                          "endDate": "Feb 01 2019",
                                          "startDate": "Feb 01 2019",
                                        }
                                      }
                                    >
                                      <div
                                        className="checkins"
                                      >
                                        <DonutChart
                                          chartColor={
                                            Array [
                                              "#3359DB",
                                              "#bcbcbc",
                                            ]
                                          }
                                          chartTitle="% of Checkins"
                                          dataName="Checkins"
                                          entries={0}
                                          error={null}
                                          hasInfo={true}
                                          hintText=""
                                          loading={true}
                                          percentage={0}
                                          tip="The number and % of check-ins of booked meeting rooms"
                                          total={10}
                                        >
                                          <div
                                            className="donut-chart"
                                          >
                                            <div
                                              className="chart-header"
                                            >
                                              <p>
                                                % of Checkins
                                              </p>
                                              <div
                                                className="hint"
                                              >
                                                <ThemedTooltippedComponent
                                                  className=""
                                                  composeTheme="deeply"
                                                  mapThemrProps={[Function]}
                                                  theme={null}
                                                  tooltip="The number and % of check-ins of booked meeting rooms"
                                                  tooltipDelay={0}
                                                  tooltipHideOnClick={true}
                                                  tooltipPosition="top"
                                                  tooltipShowOnClick={true}
                                                >
                                                  <TooltippedComponent
                                                    className=""
                                                    theme={
                                                      Object {
                                                        "tooltipInner": "tooltipInner",
                                                      }
                                                    }
                                                    tooltip="The number and % of check-ins of booked meeting rooms"
                                                    tooltipDelay={0}
                                                    tooltipHideOnClick={true}
                                                    tooltipPosition="top"
                                                    tooltipShowOnClick={true}
                                                  >
                                                    <ThemedLink
                                                      active={false}
                                                      className=""
                                                      composeTheme="deeply"
                                                      mapThemrProps={[Function]}
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      theme={
                                                        Object {
                                                          "tooltipInner": "tooltipInner",
                                                        }
                                                      }
                                                    >
                                                      <Link
                                                        active={false}
                                                        className=""
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        theme={
                                                          Object {
                                                            "tooltipInner": "tooltipInner",
                                                          }
                                                        }
                                                      >
                                                        <a
                                                          className=""
                                                          data-react-toolbox="link"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                        >
                                                          <img
                                                            alt="help icon"
                                                            src="test-file-stub"
                                                          />
                                                        </a>
                                                      </Link>
                                                    </ThemedLink>
                                                  </TooltippedComponent>
                                                </ThemedTooltippedComponent>
                                                <div
                                                  className="hint-text"
                                                >
                                                  <p />
                                                </div>
                                              </div>
                                            </div>
                                            <div
                                              className="chart-content"
                                            >
                                              <div
                                                className="chart-spinner"
                                              >
                                                <Spinner
                                                  size=""
                                                >
                                                  <div
                                                    className="centered"
                                                  >
                                                    <div
                                                      className="spinner"
                                                    />
                                                  </div>
                                                </Spinner>
                                              </div>
                                            </div>
                                          </div>
                                        </DonutChart>
                                        <DonutChart
                                          chartColor={
                                            Array [
                                              "#FFAF30",
                                              "#bcbcbc",
                                            ]
                                          }
                                          chartTitle="% of App Bookings"
                                          dataName="Bookings"
                                          entries={15}
                                          error={null}
                                          hasInfo={true}
                                          hintText=""
                                          loading={true}
                                          percentage={75}
                                          tip="The number and % of people who book directly from the app instead from google calendar"
                                          total={20}
                                        >
                                          <div
                                            className="donut-chart"
                                          >
                                            <div
                                              className="chart-header"
                                            >
                                              <p>
                                                % of App Bookings
                                              </p>
                                              <div
                                                className="hint"
                                              >
                                                <ThemedTooltippedComponent
                                                  className=""
                                                  composeTheme="deeply"
                                                  mapThemrProps={[Function]}
                                                  theme={null}
                                                  tooltip="The number and % of people who book directly from the app instead from google calendar"
                                                  tooltipDelay={0}
                                                  tooltipHideOnClick={true}
                                                  tooltipPosition="top"
                                                  tooltipShowOnClick={true}
                                                >
                                                  <TooltippedComponent
                                                    className=""
                                                    theme={
                                                      Object {
                                                        "tooltipInner": "tooltipInner",
                                                      }
                                                    }
                                                    tooltip="The number and % of people who book directly from the app instead from google calendar"
                                                    tooltipDelay={0}
                                                    tooltipHideOnClick={true}
                                                    tooltipPosition="top"
                                                    tooltipShowOnClick={true}
                                                  >
                                                    <ThemedLink
                                                      active={false}
                                                      className=""
                                                      composeTheme="deeply"
                                                      mapThemrProps={[Function]}
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      theme={
                                                        Object {
                                                          "tooltipInner": "tooltipInner",
                                                        }
                                                      }
                                                    >
                                                      <Link
                                                        active={false}
                                                        className=""
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        theme={
                                                          Object {
                                                            "tooltipInner": "tooltipInner",
                                                          }
                                                        }
                                                      >
                                                        <a
                                                          className=""
                                                          data-react-toolbox="link"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                        >
                                                          <img
                                                            alt="help icon"
                                                            src="test-file-stub"
                                                          />
                                                        </a>
                                                      </Link>
                                                    </ThemedLink>
                                                  </TooltippedComponent>
                                                </ThemedTooltippedComponent>
                                                <div
                                                  className="hint-text"
                                                >
                                                  <p />
                                                </div>
                                              </div>
                                            </div>
                                            <div
                                              className="chart-content"
                                            >
                                              <div
                                                className="chart-spinner"
                                              >
                                                <Spinner
                                                  size=""
                                                >
                                                  <div
                                                    className="centered"
                                                  >
                                                    <div
                                                      className="spinner"
                                                    />
                                                  </div>
                                                </Spinner>
                                              </div>
                                            </div>
                                          </div>
                                        </DonutChart>
                                        <DonutChart
                                          chartColor={
                                            Array [
                                              "#49AAAF",
                                              "#bcbcbc",
                                            ]
                                          }
                                          chartTitle="% of Auto Cancellations"
                                          dataName="Cancellations"
                                          entries={0}
                                          error={null}
                                          hasInfo={false}
                                          hintText=""
                                          loading={true}
                                          percentage={0}
                                          tip="Number and % of auto-cancelled meeting rooms"
                                          total={10}
                                        >
                                          <div
                                            className="donut-chart"
                                          >
                                            <div
                                              className="chart-header"
                                            >
                                              <p>
                                                % of Auto Cancellations
                                              </p>
                                              <div
                                                className="hint"
                                              >
                                                <ThemedTooltippedComponent
                                                  className=""
                                                  composeTheme="deeply"
                                                  mapThemrProps={[Function]}
                                                  theme={null}
                                                  tooltip="Number and % of auto-cancelled meeting rooms"
                                                  tooltipDelay={0}
                                                  tooltipHideOnClick={true}
                                                  tooltipPosition="top"
                                                  tooltipShowOnClick={true}
                                                >
                                                  <TooltippedComponent
                                                    className=""
                                                    theme={
                                                      Object {
                                                        "tooltipInner": "tooltipInner",
                                                      }
                                                    }
                                                    tooltip="Number and % of auto-cancelled meeting rooms"
                                                    tooltipDelay={0}
                                                    tooltipHideOnClick={true}
                                                    tooltipPosition="top"
                                                    tooltipShowOnClick={true}
                                                  >
                                                    <ThemedLink
                                                      active={false}
                                                      className=""
                                                      composeTheme="deeply"
                                                      mapThemrProps={[Function]}
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      theme={
                                                        Object {
                                                          "tooltipInner": "tooltipInner",
                                                        }
                                                      }
                                                    >
                                                      <Link
                                                        active={false}
                                                        className=""
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        theme={
                                                          Object {
                                                            "tooltipInner": "tooltipInner",
                                                          }
                                                        }
                                                      >
                                                        <a
                                                          className=""
                                                          data-react-toolbox="link"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                        >
                                                          <img
                                                            alt="help icon"
                                                            src="test-file-stub"
                                                          />
                                                        </a>
                                                      </Link>
                                                    </ThemedLink>
                                                  </TooltippedComponent>
                                                </ThemedTooltippedComponent>
                                                <div
                                                  className="hint-text"
                                                >
                                                  <p />
                                                </div>
                                              </div>
                                            </div>
                                            <div
                                              className="chart-content"
                                            >
                                              <div
                                                className="chart-spinner"
                                              >
                                                <Spinner
                                                  size=""
                                                >
                                                  <div
                                                    className="centered"
                                                  >
                                                    <div
                                                      className="spinner"
                                                    />
                                                  </div>
                                                </Spinner>
                                              </div>
                                            </div>
                                          </div>
                                        </DonutChart>
                                      </div>
                                    </Checkins>
                                  </Query>
                                </Apollo(Checkins)>
                                <Apollo(AverageMeetingList)
                                  dateValue={
                                    Object {
                                      "endDate": "Feb 01 2019",
                                      "startDate": "Feb 01 2019",
                                    }
                                  }
                                >
                                  <Query
                                    displayName="Apollo(AverageMeetingList)"
                                    query={
                                      Object {
                                        "definitions": Array [
                                          Object {
                                            "directives": Array [],
                                            "kind": "OperationDefinition",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "durationOfMeetingsPerMeetingRoom",
                                            },
                                            "operation": "query",
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [
                                                    Object {
                                                      "kind": "Argument",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "startDate",
                                                      },
                                                      "value": Object {
                                                        "kind": "Variable",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "startDate",
                                                        },
                                                      },
                                                    },
                                                    Object {
                                                      "kind": "Argument",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "endDate",
                                                      },
                                                      "value": Object {
                                                        "kind": "Variable",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "endDate",
                                                        },
                                                      },
                                                    },
                                                    Object {
                                                      "kind": "Argument",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "page",
                                                      },
                                                      "value": Object {
                                                        "kind": "Variable",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "page",
                                                        },
                                                      },
                                                    },
                                                    Object {
                                                      "kind": "Argument",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "perPage",
                                                      },
                                                      "value": Object {
                                                        "kind": "Variable",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "perPage",
                                                        },
                                                      },
                                                    },
                                                  ],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "analyticsForMeetingsDurations",
                                                  },
                                                  "selectionSet": Object {
                                                    "kind": "SelectionSet",
                                                    "selections": Array [
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "hasPrevious",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "hasNext",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "pages",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "MeetingsDurationaAnalytics",
                                                        },
                                                        "selectionSet": Object {
                                                          "kind": "SelectionSet",
                                                          "selections": Array [
                                                            Object {
                                                              "alias": undefined,
                                                              "arguments": Array [],
                                                              "directives": Array [],
                                                              "kind": "Field",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "roomName",
                                                              },
                                                              "selectionSet": undefined,
                                                            },
                                                            Object {
                                                              "alias": undefined,
                                                              "arguments": Array [],
                                                              "directives": Array [],
                                                              "kind": "Field",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "count",
                                                              },
                                                              "selectionSet": undefined,
                                                            },
                                                            Object {
                                                              "alias": undefined,
                                                              "arguments": Array [],
                                                              "directives": Array [],
                                                              "kind": "Field",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "totalDuration",
                                                              },
                                                              "selectionSet": undefined,
                                                            },
                                                          ],
                                                        },
                                                      },
                                                    ],
                                                  },
                                                },
                                              ],
                                            },
                                            "variableDefinitions": Array [
                                              Object {
                                                "defaultValue": undefined,
                                                "kind": "VariableDefinition",
                                                "type": Object {
                                                  "kind": "NonNullType",
                                                  "type": Object {
                                                    "kind": "NamedType",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "String",
                                                    },
                                                  },
                                                },
                                                "variable": Object {
                                                  "kind": "Variable",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "startDate",
                                                  },
                                                },
                                              },
                                              Object {
                                                "defaultValue": undefined,
                                                "kind": "VariableDefinition",
                                                "type": Object {
                                                  "kind": "NonNullType",
                                                  "type": Object {
                                                    "kind": "NamedType",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "String",
                                                    },
                                                  },
                                                },
                                                "variable": Object {
                                                  "kind": "Variable",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "endDate",
                                                  },
                                                },
                                              },
                                              Object {
                                                "defaultValue": undefined,
                                                "kind": "VariableDefinition",
                                                "type": Object {
                                                  "kind": "NamedType",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "Int",
                                                  },
                                                },
                                                "variable": Object {
                                                  "kind": "Variable",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "page",
                                                  },
                                                },
                                              },
                                              Object {
                                                "defaultValue": undefined,
                                                "kind": "VariableDefinition",
                                                "type": Object {
                                                  "kind": "NamedType",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "Int",
                                                  },
                                                },
                                                "variable": Object {
                                                  "kind": "Variable",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "perPage",
                                                  },
                                                },
                                              },
                                            ],
                                          },
                                        ],
                                        "kind": "Document",
                                        "loc": Object {
                                          "end": 391,
                                          "start": 0,
                                        },
                                      }
                                    }
                                    skip={false}
                                    variables={
                                      Object {
                                        "endDate": "Feb 01 2019",
                                        "page": 1,
                                        "perPage": 5,
                                        "startDate": "Feb 01 2019",
                                      }
                                    }
                                    warnUnhandledError={true}
                                  >
                                    <AverageMeetingList
                                      data={
                                        Object {
                                          "error": undefined,
                                          "fetchMore": [Function],
                                          "loading": true,
                                          "networkStatus": 1,
                                          "refetch": [Function],
                                          "startPolling": [Function],
                                          "stopPolling": [Function],
                                          "subscribeToMore": [Function],
                                          "updateQuery": [Function],
                                          "variables": Object {
                                            "endDate": "Feb 01 2019",
                                            "page": 1,
                                            "perPage": 5,
                                            "startDate": "Feb 01 2019",
                                          },
                                        }
                                      }
                                      dateValue={
                                        Object {
                                          "endDate": "Feb 01 2019",
                                          "startDate": "Feb 01 2019",
                                        }
                                      }
                                    >
                                      <QueryAnalyticsLoading>
                                        <div
                                          className="average-meeting"
                                        >
                                          <div
                                            className="average-meeting-control"
                                          >
                                            <h4
                                              className="header-title"
                                            >
                                              Average time spent/Meeting Room
                                            </h4>
                                          </div>
                                          <div
                                            className="average-meeting-list"
                                          >
                                            <table>
                                              <TableHead
                                                titles={
                                                  Array [
                                                    "Room",
                                                    "No. of meetings",
                                                    "Average Meeting Duration",
                                                  ]
                                                }
                                              >
                                                <thead>
                                                  <tr>
                                                    <th
                                                      key="Room"
                                                    >
                                                      Room
                                                    </th>
                                                    <th
                                                      key="No. of meetings"
                                                    >
                                                      No. of meetings
                                                    </th>
                                                    <th
                                                      key="Average Meeting Duration"
                                                    >
                                                      Average Meeting Duration
                                                    </th>
                                                  </tr>
                                                </thead>
                                              </TableHead>
                                              <tbody>
                                                <tr>
                                                  <th
                                                    colSpan="3"
                                                  >
                                                    <ThemedProgressBar
                                                      buffer={0}
                                                      className=""
                                                      composeTheme="deeply"
                                                      mapThemrProps={[Function]}
                                                      max={100}
                                                      min={0}
                                                      mode="indeterminate"
                                                      multicolor={false}
                                                      type="linear"
                                                      value={0}
                                                    >
                                                      <ProgressBar
                                                        buffer={0}
                                                        className=""
                                                        max={100}
                                                        min={0}
                                                        mode="indeterminate"
                                                        multicolor={false}
                                                        theme={
                                                          Object {
                                                            "tooltipInner": "tooltipInner",
                                                          }
                                                        }
                                                        type="linear"
                                                        value={0}
                                                      >
                                                        <div
                                                          aria-valuemax={100}
                                                          aria-valuemin={0}
                                                          aria-valuenow={0}
                                                          className=""
                                                          data-react-toolbox="progress-bar"
                                                        >
                                                          <div>
                                                            <span
                                                              data-ref="buffer"
                                                            />
                                                            <span
                                                              data-ref="value"
                                                            />
                                                          </div>
                                                        </div>
                                                      </ProgressBar>
                                                    </ThemedProgressBar>
                                                  </th>
                                                </tr>
                                              </tbody>
                                            </table>
                                            <br />
                                          </div>
                                        </div>
                                      </QueryAnalyticsLoading>
                                    </AverageMeetingList>
                                  </Query>
                                </Apollo(AverageMeetingList)>
                              </AnalyticsOverview>
                            </div>
                          </AnalyticsActivity>
                        </Query>
                      </Apollo(AnalyticsActivity)>
                    </div>
                  </Analytics>
                </Route>
              </Switch>
            </App>
          </Route>
        </withRouter(App)>
      </Router>
    </MemoryRouter>
  </ApolloProvider>
</MockedProvider>
`;

exports[`App component should render properly in memory 1`] = `
<MockedProvider
  addTypename={true}
>
  <ApolloProvider
    client={
      ApolloClient {
        "__operations_cache__": Array [],
        "cache": InMemoryCache {
          "addTypename": true,
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "storeFactory": [Function],
          },
          "data": ObjectCache {
            "data": Object {},
          },
          "optimistic": Array [],
          "silenceBroadcast": false,
          "watches": Array [],
        },
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": ApolloLink {
          "request": [Function],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "ssrMode": false,
        "store": DataStore {
          "cache": InMemoryCache {
            "addTypename": true,
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "storeFactory": [Function],
            },
            "data": ObjectCache {
              "data": Object {},
            },
            "optimistic": Array [],
            "silenceBroadcast": false,
            "watches": Array [],
          },
        },
        "version": "2.3.1",
        "watchQuery": [Function],
      }
    }
  >
    <MemoryRouter
      initialEntries={
        Array [
          "/",
          "/settings",
        ]
      }
      initialIndex={1}
      keyLength={0}
    >
      <Router
        history={
          Object {
            "action": "REPLACE",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": Object {
                  "errorMessage": "You need to be loggedin to access this page",
                },
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 1,
            "length": 2,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": Object {
                "errorMessage": "You need to be loggedin to access this page",
              },
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <withRouter(App)>
          <Route
            render={[Function]}
          >
            <App
              history={
                Object {
                  "action": "REPLACE",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": Object {
                        "errorMessage": "You need to be loggedin to access this page",
                      },
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 1,
                  "length": 2,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": Object {
                      "errorMessage": "You need to be loggedin to access this page",
                    },
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": Object {
                    "errorMessage": "You need to be loggedin to access this page",
                  },
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
            >
              <Switch>
                <Route
                  component={[Function]}
                  computedMatch={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                  exact={true}
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": Object {
                        "errorMessage": "You need to be loggedin to access this page",
                      },
                    }
                  }
                  path="/"
                >
                  <withRouter(Login)
                    history={
                      Object {
                        "action": "REPLACE",
                        "block": [Function],
                        "canGo": [Function],
                        "createHref": [Function],
                        "entries": Array [
                          Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": Object {
                              "errorMessage": "You need to be loggedin to access this page",
                            },
                          },
                        ],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "index": 1,
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": Object {
                            "errorMessage": "You need to be loggedin to access this page",
                          },
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": Object {
                          "errorMessage": "You need to be loggedin to access this page",
                        },
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      }
                    }
                  >
                    <Route
                      render={[Function]}
                    >
                      <Login
                        history={
                          Object {
                            "action": "REPLACE",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": Object {
                                  "errorMessage": "You need to be loggedin to access this page",
                                },
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 1,
                            "length": 2,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": Object {
                                "errorMessage": "You need to be loggedin to access this page",
                              },
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": Object {
                              "errorMessage": "You need to be loggedin to access this page",
                            },
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          }
                        }
                      >
                        <header
                          className="home-header"
                        >
                          <h1>
                            CONVERGE
                          </h1>
                        </header>
                        <Component>
                          <div
                            id="converge-intro"
                          >
                            Meet the Meeting Room App
                            <br />
                            that your meeting room app aspires to be.
                          </div>
                        </Component>
                        <LoginButton>
                          <a
                            href="undefined=undefined"
                          >
                            <input
                              alt="Login With Your Email"
                              className="btn-signin"
                              src="test-file-stub"
                              type="image"
                            />
                          </a>
                        </LoginButton>
                        <img
                          alt="Dark Tablet"
                          id="dark-tablet"
                          src="test-file-stub"
                        />
                        <ThemedActivableRenderer
                          action="Dismiss"
                          active={true}
                          composeTheme="deeply"
                          delay={500}
                          label="You need to be loggedin to access this page"
                          mapThemrProps={[Function]}
                          onClick={[Function]}
                          onTimeout={[Function]}
                          theme={
                            Object {
                              "button": "button-error",
                              "snackbar": "error",
                            }
                          }
                          timeout={6000}
                          type="cancel"
                        >
                          <ActivableRenderer
                            action="Dismiss"
                            active={true}
                            delay={500}
                            label="You need to be loggedin to access this page"
                            onClick={[Function]}
                            onTimeout={[Function]}
                            theme={
                              Object {
                                "button": "button-error",
                                "snackbar": "error",
                                "tooltipInner": "tooltipInner",
                              }
                            }
                            timeout={6000}
                            type="cancel"
                          >
                            <Snackbar
                              action="Dismiss"
                              active={true}
                              label="You need to be loggedin to access this page"
                              onClick={[Function]}
                              onTimeout={[Function]}
                              theme={
                                Object {
                                  "button": "button-error",
                                  "snackbar": "error",
                                  "tooltipInner": "tooltipInner",
                                }
                              }
                              timeout={6000}
                              type="cancel"
                            >
                              <Portal
                                className=""
                              />
                            </Snackbar>
                          </ActivableRenderer>
                        </ThemedActivableRenderer>
                      </Login>
                    </Route>
                  </withRouter(Login)>
                </Route>
              </Switch>
            </App>
          </Route>
        </withRouter(App)>
      </Router>
    </MemoryRouter>
  </ApolloProvider>
</MockedProvider>
`;
