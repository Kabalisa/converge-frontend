// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RoomFeeback Component should render properly 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "blank",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <RoomFeedback
      user={
        Object {
          "user": Object {
            "roles": Array [
              Object {
                "id": 1,
                "name": "default",
              },
            ],
          },
        }
      }
    >
      <div
        className="room-feedback"
      >
        <div
          className="room-feedback__control"
        >
          <MenuTitle
            title="ROOM FEEDBACK"
          >
            <span
              className="menu-title"
            >
              ROOM FEEDBACK
            </span>
          </MenuTitle>
          <AddQuestion>
            <MrmModal
              buttonText="Add Question"
              className="add-question-modal"
              closeModal={false}
              handleCloseRequest={[Function]}
              modalButtonClassName="button"
              title="ADD QUESTION"
            >
              <IconButtons
                buttonText="Add Question"
                disabled={false}
                modalButtonClassName="button"
                openModal={[Function]}
              >
                <button
                  className="button"
                  disabled={false}
                  id="modal-button"
                  onClick={[Function]}
                >
                  Add Question
                </button>
              </IconButtons>
              <Modal
                ariaHideApp={false}
                bodyOpenClassName="ReactModal__Body--open"
                className="add-question-modal"
                closeTimeoutMS={0}
                contentLabel="Parent Modal"
                isOpen={false}
                onAfterOpen={[Function]}
                onRequestClose={[Function]}
                parentSelector={[Function]}
                portalClassName="ReactModalPortal"
                shouldCloseOnEsc={true}
                shouldCloseOnOverlayClick={false}
                shouldFocusAfterRender={true}
                shouldReturnFocusAfterClose={true}
                style={
                  Object {
                    "content": Object {
                      "backgroundColor": "#ffffff",
                      "border": "1px solid #CCCCCC",
                      "borderRadius": "4px",
                      "bottom": "auto",
                      "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                      "fontFamily": "DINPro-Regular",
                      "left": "50%",
                      "marginRight": "-50%",
                      "outline": "none",
                      "overflow": "auto",
                      "position": "absolute",
                      "right": "auto",
                      "top": "50%",
                      "transform": "translate(-50%, -50%)",
                    },
                  }
                }
              >
                <ModalPortal
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="add-question-modal"
                  closeTimeoutMS={0}
                  contentLabel="Parent Modal"
                  defaultStyles={
                    Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    }
                  }
                  isOpen={false}
                  onAfterOpen={[Function]}
                  onRequestClose={[Function]}
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={false}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                    Object {
                      "content": Object {
                        "backgroundColor": "#ffffff",
                        "border": "1px solid #CCCCCC",
                        "borderRadius": "4px",
                        "bottom": "auto",
                        "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                        "fontFamily": "DINPro-Regular",
                        "left": "50%",
                        "marginRight": "-50%",
                        "outline": "none",
                        "overflow": "auto",
                        "position": "absolute",
                        "right": "auto",
                        "top": "50%",
                        "transform": "translate(-50%, -50%)",
                      },
                    }
                  }
                />
              </Modal>
            </MrmModal>
          </AddQuestion>
        </div>
        <div
          className="room-feedback__list"
        >
          <table>
            <ColGroup
              numberOfMiddleColumns={2}
            >
              <colgroup>
                <col
                  className="first-col"
                />
                <col
                  key="col0"
                />
                <col
                  key="col1"
                />
                <col
                  className="last-col"
                />
              </colgroup>
            </ColGroup>
            <TableHead
              titles={
                Array [
                  "Question",
                  "Type",
                  "Responses",
                  "Start Date",
                  "Duration",
                  "Action",
                  "Status",
                ]
              }
            >
              <thead>
                <tr>
                  <th
                    key="Question"
                  >
                    Question
                  </th>
                  <th
                    key="Type"
                  >
                    Type
                  </th>
                  <th
                    key="Responses"
                  >
                    Responses
                  </th>
                  <th
                    key="Start Date"
                  >
                    Start Date
                  </th>
                  <th
                    key="Duration"
                  >
                    Duration
                  </th>
                  <th
                    key="Action"
                  >
                    Action
                  </th>
                  <th
                    key="Status"
                  >
                    Status
                  </th>
                </tr>
              </thead>
            </TableHead>
            <tbody>
              <Feedback
                feedback={
                  Array [
                    Object {
                      "duration": "3 weeks",
                      "question": "How would you rate the cleanliness of this room",
                      "responses": "60",
                      "startDate": "3 Nov 2018",
                      "status": true,
                      "type": "rate",
                    },
                    Object {
                      "duration": "3 weeks",
                      "question": "Is there any missing meeting tools",
                      "responses": "60",
                      "startDate": "3 Nov 2018",
                      "status": false,
                      "type": "check",
                    },
                    Object {
                      "duration": "3 weeks",
                      "question": "Any suggestions on how we can improve the service",
                      "responses": "60",
                      "startDate": "3 Nov 2018",
                      "status": true,
                      "type": "text",
                    },
                  ]
                }
              >
                <tr
                  key="0"
                >
                  <td>
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      className="questions"
                      to="/response"
                    >
                      <Route
                        path="/response"
                      >
                        <Link
                          aria-current={false}
                          className="questions"
                          replace={false}
                          to="/response"
                        >
                          <a
                            aria-current={false}
                            className="questions"
                            href="/response"
                            onClick={[Function]}
                          >
                            How would you rate the cleanliness of this room
                          </a>
                        </Link>
                      </Route>
                    </NavLink>
                  </td>
                  <td>
                    rate
                  </td>
                  <td>
                    60
                  </td>
                  <td>
                    3 Nov 2018
                  </td>
                  <td>
                    3 weeks
                  </td>
                  <td>
                    <EditFeedback
                      duration="3 weeks"
                      id="edit-modal"
                      question="How would you rate the cleanliness of this room"
                      startDate="3 Nov 2018"
                      type="rate"
                    >
                      <MrmModal
                        buttonText="Edit"
                        className="edit-feedback-modal"
                        closeModal={false}
                        handleCloseRequest={[Function]}
                        modalButtonClassName="edit-button"
                        title="Edit Question"
                      >
                        <IconButtons
                          buttonText="Edit"
                          disabled={false}
                          modalButtonClassName="edit-button"
                          openModal={[Function]}
                        >
                          <button
                            className="edit-button"
                            disabled={false}
                            id="modal-button"
                            onClick={[Function]}
                          >
                            <img
                              alt="Edit"
                              src="test-file-stub"
                            />
                          </button>
                        </IconButtons>
                        <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="edit-feedback-modal"
                          closeTimeoutMS={0}
                          contentLabel="Parent Modal"
                          isOpen={false}
                          onAfterOpen={[Function]}
                          onRequestClose={[Function]}
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={false}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                            Object {
                              "content": Object {
                                "backgroundColor": "#ffffff",
                                "border": "1px solid #CCCCCC",
                                "borderRadius": "4px",
                                "bottom": "auto",
                                "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                "fontFamily": "DINPro-Regular",
                                "left": "50%",
                                "marginRight": "-50%",
                                "outline": "none",
                                "overflow": "auto",
                                "position": "absolute",
                                "right": "auto",
                                "top": "50%",
                                "transform": "translate(-50%, -50%)",
                              },
                            }
                          }
                        >
                          <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="edit-feedback-modal"
                            closeTimeoutMS={0}
                            contentLabel="Parent Modal"
                            defaultStyles={
                              Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              }
                            }
                            isOpen={false}
                            onAfterOpen={[Function]}
                            onRequestClose={[Function]}
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={false}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                              Object {
                                "content": Object {
                                  "backgroundColor": "#ffffff",
                                  "border": "1px solid #CCCCCC",
                                  "borderRadius": "4px",
                                  "bottom": "auto",
                                  "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                  "fontFamily": "DINPro-Regular",
                                  "left": "50%",
                                  "marginRight": "-50%",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "position": "absolute",
                                  "right": "auto",
                                  "top": "50%",
                                  "transform": "translate(-50%, -50%)",
                                },
                              }
                            }
                          />
                        </Modal>
                      </MrmModal>
                    </EditFeedback>
                    <DeleteFeedback
                      id="delete-modal"
                      question="How would you rate the cleanliness of this room"
                    >
                      <MrmModal
                        buttonText="Delete"
                        className="delete-modal"
                        closeModal={false}
                        handleCloseRequest={[Function]}
                        modalButtonClassName="button"
                        title="Delete Question"
                      >
                        <IconButtons
                          buttonText="Delete"
                          disabled={false}
                          modalButtonClassName="button"
                          openModal={[Function]}
                        >
                          <button
                            className="button"
                            disabled={false}
                            id="modal-button"
                            onClick={[Function]}
                          >
                            <img
                              alt="Delete"
                              src="test-file-stub"
                            />
                          </button>
                        </IconButtons>
                        <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="delete-modal"
                          closeTimeoutMS={0}
                          contentLabel="Parent Modal"
                          isOpen={false}
                          onAfterOpen={[Function]}
                          onRequestClose={[Function]}
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={false}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                            Object {
                              "content": Object {
                                "backgroundColor": "#ffffff",
                                "border": "1px solid #CCCCCC",
                                "borderRadius": "4px",
                                "bottom": "auto",
                                "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                "fontFamily": "DINPro-Regular",
                                "left": "50%",
                                "marginRight": "-50%",
                                "outline": "none",
                                "overflow": "auto",
                                "position": "absolute",
                                "right": "auto",
                                "top": "50%",
                                "transform": "translate(-50%, -50%)",
                              },
                            }
                          }
                        >
                          <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="delete-modal"
                            closeTimeoutMS={0}
                            contentLabel="Parent Modal"
                            defaultStyles={
                              Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              }
                            }
                            isOpen={false}
                            onAfterOpen={[Function]}
                            onRequestClose={[Function]}
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={false}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                              Object {
                                "content": Object {
                                  "backgroundColor": "#ffffff",
                                  "border": "1px solid #CCCCCC",
                                  "borderRadius": "4px",
                                  "bottom": "auto",
                                  "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                  "fontFamily": "DINPro-Regular",
                                  "left": "50%",
                                  "marginRight": "-50%",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "position": "absolute",
                                  "right": "auto",
                                  "top": "50%",
                                  "transform": "translate(-50%, -50%)",
                                },
                              }
                            }
                          />
                        </Modal>
                      </MrmModal>
                    </DeleteFeedback>
                  </td>
                  <td>
                    <CheckboxSlide
                      checked={true}
                      onChange={[Function]}
                    >
                      <label
                        className="switch"
                        htmlFor="CheckboxSlide"
                      >
                        <input
                          checked={true}
                          className="checkbox"
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <span
                          className="checked slider round"
                        />
                      </label>
                    </CheckboxSlide>
                  </td>
                </tr>
                <tr
                  key="1"
                >
                  <td>
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      className="questions"
                      to="/response"
                    >
                      <Route
                        path="/response"
                      >
                        <Link
                          aria-current={false}
                          className="questions"
                          replace={false}
                          to="/response"
                        >
                          <a
                            aria-current={false}
                            className="questions"
                            href="/response"
                            onClick={[Function]}
                          >
                            Is there any missing meeting tools
                          </a>
                        </Link>
                      </Route>
                    </NavLink>
                  </td>
                  <td>
                    check
                  </td>
                  <td>
                    60
                  </td>
                  <td>
                    3 Nov 2018
                  </td>
                  <td>
                    3 weeks
                  </td>
                  <td>
                    <EditFeedback
                      duration="3 weeks"
                      id="edit-modal"
                      question="Is there any missing meeting tools"
                      startDate="3 Nov 2018"
                      type="check"
                    >
                      <MrmModal
                        buttonText="Edit"
                        className="edit-feedback-modal"
                        closeModal={false}
                        handleCloseRequest={[Function]}
                        modalButtonClassName="edit-button"
                        title="Edit Question"
                      >
                        <IconButtons
                          buttonText="Edit"
                          disabled={false}
                          modalButtonClassName="edit-button"
                          openModal={[Function]}
                        >
                          <button
                            className="edit-button"
                            disabled={false}
                            id="modal-button"
                            onClick={[Function]}
                          >
                            <img
                              alt="Edit"
                              src="test-file-stub"
                            />
                          </button>
                        </IconButtons>
                        <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="edit-feedback-modal"
                          closeTimeoutMS={0}
                          contentLabel="Parent Modal"
                          isOpen={false}
                          onAfterOpen={[Function]}
                          onRequestClose={[Function]}
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={false}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                            Object {
                              "content": Object {
                                "backgroundColor": "#ffffff",
                                "border": "1px solid #CCCCCC",
                                "borderRadius": "4px",
                                "bottom": "auto",
                                "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                "fontFamily": "DINPro-Regular",
                                "left": "50%",
                                "marginRight": "-50%",
                                "outline": "none",
                                "overflow": "auto",
                                "position": "absolute",
                                "right": "auto",
                                "top": "50%",
                                "transform": "translate(-50%, -50%)",
                              },
                            }
                          }
                        >
                          <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="edit-feedback-modal"
                            closeTimeoutMS={0}
                            contentLabel="Parent Modal"
                            defaultStyles={
                              Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              }
                            }
                            isOpen={false}
                            onAfterOpen={[Function]}
                            onRequestClose={[Function]}
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={false}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                              Object {
                                "content": Object {
                                  "backgroundColor": "#ffffff",
                                  "border": "1px solid #CCCCCC",
                                  "borderRadius": "4px",
                                  "bottom": "auto",
                                  "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                  "fontFamily": "DINPro-Regular",
                                  "left": "50%",
                                  "marginRight": "-50%",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "position": "absolute",
                                  "right": "auto",
                                  "top": "50%",
                                  "transform": "translate(-50%, -50%)",
                                },
                              }
                            }
                          />
                        </Modal>
                      </MrmModal>
                    </EditFeedback>
                    <DeleteFeedback
                      id="delete-modal"
                      question="Is there any missing meeting tools"
                    >
                      <MrmModal
                        buttonText="Delete"
                        className="delete-modal"
                        closeModal={false}
                        handleCloseRequest={[Function]}
                        modalButtonClassName="button"
                        title="Delete Question"
                      >
                        <IconButtons
                          buttonText="Delete"
                          disabled={false}
                          modalButtonClassName="button"
                          openModal={[Function]}
                        >
                          <button
                            className="button"
                            disabled={false}
                            id="modal-button"
                            onClick={[Function]}
                          >
                            <img
                              alt="Delete"
                              src="test-file-stub"
                            />
                          </button>
                        </IconButtons>
                        <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="delete-modal"
                          closeTimeoutMS={0}
                          contentLabel="Parent Modal"
                          isOpen={false}
                          onAfterOpen={[Function]}
                          onRequestClose={[Function]}
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={false}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                            Object {
                              "content": Object {
                                "backgroundColor": "#ffffff",
                                "border": "1px solid #CCCCCC",
                                "borderRadius": "4px",
                                "bottom": "auto",
                                "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                "fontFamily": "DINPro-Regular",
                                "left": "50%",
                                "marginRight": "-50%",
                                "outline": "none",
                                "overflow": "auto",
                                "position": "absolute",
                                "right": "auto",
                                "top": "50%",
                                "transform": "translate(-50%, -50%)",
                              },
                            }
                          }
                        >
                          <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="delete-modal"
                            closeTimeoutMS={0}
                            contentLabel="Parent Modal"
                            defaultStyles={
                              Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              }
                            }
                            isOpen={false}
                            onAfterOpen={[Function]}
                            onRequestClose={[Function]}
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={false}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                              Object {
                                "content": Object {
                                  "backgroundColor": "#ffffff",
                                  "border": "1px solid #CCCCCC",
                                  "borderRadius": "4px",
                                  "bottom": "auto",
                                  "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                  "fontFamily": "DINPro-Regular",
                                  "left": "50%",
                                  "marginRight": "-50%",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "position": "absolute",
                                  "right": "auto",
                                  "top": "50%",
                                  "transform": "translate(-50%, -50%)",
                                },
                              }
                            }
                          />
                        </Modal>
                      </MrmModal>
                    </DeleteFeedback>
                  </td>
                  <td>
                    <CheckboxSlide
                      checked={false}
                      onChange={[Function]}
                    >
                      <label
                        className="switch"
                        htmlFor="CheckboxSlide"
                      >
                        <input
                          checked={false}
                          className="checkbox"
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <span
                          className="false slider round"
                        />
                      </label>
                    </CheckboxSlide>
                  </td>
                </tr>
                <tr
                  key="2"
                >
                  <td>
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      className="questions"
                      to="/response"
                    >
                      <Route
                        path="/response"
                      >
                        <Link
                          aria-current={false}
                          className="questions"
                          replace={false}
                          to="/response"
                        >
                          <a
                            aria-current={false}
                            className="questions"
                            href="/response"
                            onClick={[Function]}
                          >
                            Any suggestions on how we can improve the service
                          </a>
                        </Link>
                      </Route>
                    </NavLink>
                  </td>
                  <td>
                    text
                  </td>
                  <td>
                    60
                  </td>
                  <td>
                    3 Nov 2018
                  </td>
                  <td>
                    3 weeks
                  </td>
                  <td>
                    <EditFeedback
                      duration="3 weeks"
                      id="edit-modal"
                      question="Any suggestions on how we can improve the service"
                      startDate="3 Nov 2018"
                      type="text"
                    >
                      <MrmModal
                        buttonText="Edit"
                        className="edit-feedback-modal"
                        closeModal={false}
                        handleCloseRequest={[Function]}
                        modalButtonClassName="edit-button"
                        title="Edit Question"
                      >
                        <IconButtons
                          buttonText="Edit"
                          disabled={false}
                          modalButtonClassName="edit-button"
                          openModal={[Function]}
                        >
                          <button
                            className="edit-button"
                            disabled={false}
                            id="modal-button"
                            onClick={[Function]}
                          >
                            <img
                              alt="Edit"
                              src="test-file-stub"
                            />
                          </button>
                        </IconButtons>
                        <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="edit-feedback-modal"
                          closeTimeoutMS={0}
                          contentLabel="Parent Modal"
                          isOpen={false}
                          onAfterOpen={[Function]}
                          onRequestClose={[Function]}
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={false}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                            Object {
                              "content": Object {
                                "backgroundColor": "#ffffff",
                                "border": "1px solid #CCCCCC",
                                "borderRadius": "4px",
                                "bottom": "auto",
                                "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                "fontFamily": "DINPro-Regular",
                                "left": "50%",
                                "marginRight": "-50%",
                                "outline": "none",
                                "overflow": "auto",
                                "position": "absolute",
                                "right": "auto",
                                "top": "50%",
                                "transform": "translate(-50%, -50%)",
                              },
                            }
                          }
                        >
                          <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="edit-feedback-modal"
                            closeTimeoutMS={0}
                            contentLabel="Parent Modal"
                            defaultStyles={
                              Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              }
                            }
                            isOpen={false}
                            onAfterOpen={[Function]}
                            onRequestClose={[Function]}
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={false}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                              Object {
                                "content": Object {
                                  "backgroundColor": "#ffffff",
                                  "border": "1px solid #CCCCCC",
                                  "borderRadius": "4px",
                                  "bottom": "auto",
                                  "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                  "fontFamily": "DINPro-Regular",
                                  "left": "50%",
                                  "marginRight": "-50%",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "position": "absolute",
                                  "right": "auto",
                                  "top": "50%",
                                  "transform": "translate(-50%, -50%)",
                                },
                              }
                            }
                          />
                        </Modal>
                      </MrmModal>
                    </EditFeedback>
                    <DeleteFeedback
                      id="delete-modal"
                      question="Any suggestions on how we can improve the service"
                    >
                      <MrmModal
                        buttonText="Delete"
                        className="delete-modal"
                        closeModal={false}
                        handleCloseRequest={[Function]}
                        modalButtonClassName="button"
                        title="Delete Question"
                      >
                        <IconButtons
                          buttonText="Delete"
                          disabled={false}
                          modalButtonClassName="button"
                          openModal={[Function]}
                        >
                          <button
                            className="button"
                            disabled={false}
                            id="modal-button"
                            onClick={[Function]}
                          >
                            <img
                              alt="Delete"
                              src="test-file-stub"
                            />
                          </button>
                        </IconButtons>
                        <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="delete-modal"
                          closeTimeoutMS={0}
                          contentLabel="Parent Modal"
                          isOpen={false}
                          onAfterOpen={[Function]}
                          onRequestClose={[Function]}
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={false}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                            Object {
                              "content": Object {
                                "backgroundColor": "#ffffff",
                                "border": "1px solid #CCCCCC",
                                "borderRadius": "4px",
                                "bottom": "auto",
                                "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                "fontFamily": "DINPro-Regular",
                                "left": "50%",
                                "marginRight": "-50%",
                                "outline": "none",
                                "overflow": "auto",
                                "position": "absolute",
                                "right": "auto",
                                "top": "50%",
                                "transform": "translate(-50%, -50%)",
                              },
                            }
                          }
                        >
                          <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="delete-modal"
                            closeTimeoutMS={0}
                            contentLabel="Parent Modal"
                            defaultStyles={
                              Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              }
                            }
                            isOpen={false}
                            onAfterOpen={[Function]}
                            onRequestClose={[Function]}
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={false}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                              Object {
                                "content": Object {
                                  "backgroundColor": "#ffffff",
                                  "border": "1px solid #CCCCCC",
                                  "borderRadius": "4px",
                                  "bottom": "auto",
                                  "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                  "fontFamily": "DINPro-Regular",
                                  "left": "50%",
                                  "marginRight": "-50%",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "position": "absolute",
                                  "right": "auto",
                                  "top": "50%",
                                  "transform": "translate(-50%, -50%)",
                                },
                              }
                            }
                          />
                        </Modal>
                      </MrmModal>
                    </DeleteFeedback>
                  </td>
                  <td>
                    <CheckboxSlide
                      checked={true}
                      onChange={[Function]}
                    >
                      <label
                        className="switch"
                        htmlFor="CheckboxSlide"
                      >
                        <input
                          checked={true}
                          className="checkbox"
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <span
                          className="checked slider round"
                        />
                      </label>
                    </CheckboxSlide>
                  </td>
                </tr>
              </Feedback>
            </tbody>
          </table>
        </div>
      </div>
    </RoomFeedback>
  </Router>
</BrowserRouter>
`;
