// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login component renders correctly 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <withRouter(Login)>
      <Route
        render={[Function]}
      >
        <Login
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <LoginModal
            closeModal={true}
            handleCloseModal={[Function]}
            openModal={false}
          >
            <MrmModal
              buttonText=""
              className="login-modal"
              closeModal={true}
              handleCloseRequest={[Function]}
              modalButtonClassName="button"
              openModal={false}
              showBtn={false}
              title={null}
            >
              <Modal
                ariaHideApp={false}
                bodyOpenClassName="ReactModal__Body--open"
                className="login-modal"
                closeTimeoutMS={0}
                contentLabel="Parent Modal"
                isOpen={false}
                onAfterOpen={[Function]}
                onRequestClose={[Function]}
                parentSelector={[Function]}
                portalClassName="ReactModalPortal"
                shouldCloseOnEsc={true}
                shouldCloseOnOverlayClick={false}
                shouldFocusAfterRender={true}
                shouldReturnFocusAfterClose={true}
                style={
                  Object {
                    "content": Object {
                      "backgroundColor": "#ffffff",
                      "border": "1px solid #CCCCCC",
                      "borderRadius": "15px",
                      "bottom": "auto",
                      "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                      "fontFamily": "DINPro-Regular",
                      "left": "50%",
                      "outline": "none",
                      "overflow": "auto",
                      "position": "absolute",
                      "right": "auto",
                      "top": "50%",
                      "transform": "translate(-50%, -50%)",
                    },
                  }
                }
              >
                <Portal
                  containerInfo={
                    <div
                      class="ReactModalPortal"
                    />
                  }
                >
                  <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="login-modal"
                    closeTimeoutMS={0}
                    contentLabel="Parent Modal"
                    defaultStyles={
                      Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      }
                    }
                    isOpen={false}
                    onAfterOpen={[Function]}
                    onRequestClose={[Function]}
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={false}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                      Object {
                        "content": Object {
                          "backgroundColor": "#ffffff",
                          "border": "1px solid #CCCCCC",
                          "borderRadius": "15px",
                          "bottom": "auto",
                          "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                          "fontFamily": "DINPro-Regular",
                          "left": "50%",
                          "outline": "none",
                          "overflow": "auto",
                          "position": "absolute",
                          "right": "auto",
                          "top": "50%",
                          "transform": "translate(-50%, -50%)",
                        },
                      }
                    }
                  />
                </Portal>
              </Modal>
            </MrmModal>
          </LoginModal>
          <header
            className="landing-page-header"
          >
            <div
              className="header-logo"
            >
              <img
                alt="logo"
                src="test-file-stub"
              />
            </div>
            <div
              className="login-btn"
            >
              <Button
                classProp="trigger-login-modal"
                handleClick={[Function]}
                id="Next"
                isDisabled={false}
                title="Login"
                type={1}
              >
                <button
                  className="trigger-login-modal btn-primary"
                  disabled={false}
                  id="Next"
                  onClick={[Function]}
                >
                  <span>
                    Login
                  </span>
                </button>
              </Button>
            </div>
          </header>
          <CustomCarousel
            autoplay={true}
            legendPosition="legend-center"
          >
            <div
              className="carousel"
            >
              <Slider
                appendDots={[Function]}
                autoplay={true}
                autoplaySpeed={3000}
                className="slide"
                cssEase="ease-in"
                dots={true}
                dotsClass="slick-dots"
                fade={true}
                infinite={true}
                onChange={[Function]}
                pauseOnDotsHover={true}
                pauseOnFocus={true}
                pauseOnHover={false}
                selectedItem={0}
                slidesToScroll={3}
                slidesToShow={1}
                speed={3000}
                touchThreshold={100}
              >
                <InnerSlider
                  accessibility={true}
                  adaptiveHeight={false}
                  afterChange={null}
                  appendDots={[Function]}
                  arrows={true}
                  autoplay={true}
                  autoplaySpeed={3000}
                  beforeChange={null}
                  centerMode={false}
                  centerPadding="50px"
                  className="slide"
                  cssEase="ease-in"
                  customPaging={[Function]}
                  dots={true}
                  dotsClass="slick-dots"
                  draggable={true}
                  easing="linear"
                  edgeFriction={0.35}
                  fade={true}
                  focusOnSelect={false}
                  infinite={true}
                  initialSlide={0}
                  lazyLoad={null}
                  nextArrow={null}
                  onChange={[Function]}
                  onEdge={null}
                  onInit={null}
                  onLazyLoadError={null}
                  onReInit={null}
                  pauseOnDotsHover={true}
                  pauseOnFocus={true}
                  pauseOnHover={false}
                  prevArrow={null}
                  responsive={null}
                  rows={1}
                  rtl={false}
                  selectedItem={0}
                  slide="div"
                  slidesPerRow={1}
                  slidesToScroll={1}
                  slidesToShow={1}
                  speed={3000}
                  swipe={true}
                  swipeEvent={null}
                  swipeToSlide={false}
                  touchMove={true}
                  touchThreshold={100}
                  useCSS={true}
                  useTransform={true}
                  variableWidth={false}
                  vertical={false}
                  waitForAnimate={true}
                >
                  <div
                    className="slick-slider slide slick-initialized"
                    dir="ltr"
                  >
                    <PrevArrow
                      centerMode={false}
                      clickHandler={[Function]}
                      currentSlide={0}
                      infinite={true}
                      nextArrow={null}
                      prevArrow={null}
                      slideCount={4}
                      slidesToShow={1}
                    >
                      <button
                        className="slick-arrow slick-prev"
                        data-role="none"
                        key="0"
                        onClick={[Function]}
                        style={
                          Object {
                            "display": "block",
                          }
                        }
                        type="button"
                      >
                         
                        Previous
                      </button>
                    </PrevArrow>
                    <div
                      className="slick-list"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={null}
                      onMouseMove={null}
                      onMouseUp={[Function]}
                      onTouchCancel={null}
                      onTouchEnd={[Function]}
                      onTouchMove={null}
                      onTouchStart={[Function]}
                      style={Object {}}
                    >
                      <Track
                        centerMode={false}
                        centerPadding="50px"
                        cssEase="ease-in"
                        currentSlide={0}
                        fade={true}
                        focusOnSelect={null}
                        infinite={true}
                        lazyLoad={null}
                        lazyLoadedList={Array []}
                        listHeight={0}
                        onMouseEnter={null}
                        onMouseLeave={null}
                        onMouseOver={null}
                        rtl={false}
                        slideCount={4}
                        slideHeight={0}
                        slideWidth={0}
                        slidesToScroll={1}
                        slidesToShow={1}
                        speed={3000}
                        trackStyle={
                          Object {
                            "opacity": 1,
                          }
                        }
                        variableWidth={false}
                        vertical={false}
                      >
                        <div
                          className="slick-track"
                          onMouseEnter={null}
                          onMouseLeave={null}
                          onMouseOver={null}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <div
                            aria-hidden={false}
                            className="slick-slide slick-active slick-current"
                            data-index={0}
                            key="original0"
                            onClick={[Function]}
                            style={
                              Object {
                                "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                                "left": -0,
                                "opacity": 1,
                                "outline": "none",
                                "position": "relative",
                                "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                                "width": 0,
                              }
                            }
                            tabIndex="-1"
                          >
                            <div
                              key="0"
                            >
                              <div
                                key="0"
                                style={
                                  Object {
                                    "display": "inline-block",
                                    "width": "100%",
                                  }
                                }
                                tabIndex={-1}
                              >
                                <p
                                  className="legend legend-center"
                                >
                                  Safari Meeting Room, Andela New York
                                </p>
                                <img
                                  alt="Safari Meeting Room, Andela New York"
                                  src="test-file-stub"
                                />
                              </div>
                            </div>
                          </div>
                          <div
                            aria-hidden={true}
                            className="slick-slide"
                            data-index={1}
                            key="original1"
                            onClick={[Function]}
                            style={
                              Object {
                                "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                                "left": -0,
                                "opacity": 0,
                                "outline": "none",
                                "position": "relative",
                                "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                                "width": 0,
                              }
                            }
                            tabIndex="-1"
                          >
                            <div
                              key="11"
                            >
                              <div
                                key="111"
                                style={
                                  Object {
                                    "display": "inline-block",
                                    "width": "100%",
                                  }
                                }
                                tabIndex={-1}
                              >
                                <p
                                  className="legend legend-center"
                                >
                                  Cognitio Meeting Room, Andela Lagos
                                </p>
                                <img
                                  alt="Cognitio Meeting Room, Andela Lagos"
                                  src="test-file-stub"
                                />
                              </div>
                            </div>
                          </div>
                          <div
                            aria-hidden={true}
                            className="slick-slide"
                            data-index={2}
                            key="original2"
                            onClick={[Function]}
                            style={
                              Object {
                                "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                                "left": -0,
                                "opacity": 0,
                                "outline": "none",
                                "position": "relative",
                                "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                                "width": 0,
                              }
                            }
                            tabIndex="-1"
                          >
                            <div
                              key="22"
                            >
                              <div
                                key="222"
                                style={
                                  Object {
                                    "display": "inline-block",
                                    "width": "100%",
                                  }
                                }
                                tabIndex={-1}
                              >
                                <p
                                  className="legend legend-center"
                                >
                                  Entebbe Meeting Room, Andela Kampala
                                </p>
                                <img
                                  alt="Entebbe Meeting Room, Andela Kampala"
                                  src="test-file-stub"
                                />
                              </div>
                            </div>
                          </div>
                          <div
                            aria-hidden={true}
                            className="slick-slide"
                            data-index={3}
                            key="original3"
                            onClick={[Function]}
                            style={
                              Object {
                                "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                                "left": -0,
                                "opacity": 0,
                                "outline": "none",
                                "position": "relative",
                                "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                                "width": 0,
                              }
                            }
                            tabIndex="-1"
                          >
                            <div
                              key="33"
                            >
                              <div
                                key="333"
                                style={
                                  Object {
                                    "display": "inline-block",
                                    "width": "100%",
                                  }
                                }
                                tabIndex={-1}
                              >
                                <p
                                  className="legend legend-center"
                                >
                                  Banku Meeting Room, Andela Lagos
                                </p>
                                <img
                                  alt="Banku Meeting Room, Andela Lagos"
                                  src="test-file-stub"
                                />
                              </div>
                            </div>
                          </div>
                        </div>
                      </Track>
                    </div>
                    <NextArrow
                      centerMode={false}
                      clickHandler={[Function]}
                      currentSlide={0}
                      infinite={true}
                      nextArrow={null}
                      prevArrow={null}
                      slideCount={4}
                      slidesToShow={1}
                    >
                      <button
                        className="slick-arrow slick-next"
                        data-role="none"
                        key="1"
                        onClick={[Function]}
                        style={
                          Object {
                            "display": "block",
                          }
                        }
                        type="button"
                      >
                         
                        Next
                      </button>
                    </NextArrow>
                    <Dots
                      appendDots={[Function]}
                      clickHandler={[Function]}
                      currentSlide={0}
                      customPaging={[Function]}
                      dotsClass="slick-dots"
                      infinite={true}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      slideCount={4}
                      slidesToScroll={1}
                      slidesToShow={1}
                    >
                      <div
                        className="slick-dots"
                        id="adjust-dots"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseOver={[Function]}
                      >
                        <ul>
                           
                          <li
                            className="slick-active"
                            key="0"
                          >
                            <button
                              onClick={[Function]}
                            >
                              1
                            </button>
                          </li>
                          <li
                            className=""
                            key="1"
                          >
                            <button
                              onClick={[Function]}
                            >
                              2
                            </button>
                          </li>
                          <li
                            className=""
                            key="2"
                          >
                            <button
                              onClick={[Function]}
                            >
                              3
                            </button>
                          </li>
                          <li
                            className=""
                            key="3"
                          >
                            <button
                              onClick={[Function]}
                            >
                              4
                            </button>
                          </li>
                           
                        </ul>
                      </div>
                    </Dots>
                  </div>
                </InnerSlider>
              </Slider>
            </div>
          </CustomCarousel>
        </Login>
      </Route>
    </withRouter(Login)>
  </Router>
</MemoryRouter>
`;

exports[`Login component should call componentWillUnmount when unmounted 1`] = `
<Fragment>
  <LoginModal
    closeModal={true}
    handleCloseModal={[Function]}
    openModal={false}
  />
  <header
    className="landing-page-header"
  >
    <div
      className="header-logo"
    >
      <img
        alt="logo"
        src="test-file-stub"
      />
    </div>
    <div
      className="login-btn"
    >
      <Button
        classProp="trigger-login-modal"
        handleClick={[Function]}
        id="Next"
        isDisabled={false}
        title="Login"
        type={1}
      />
    </div>
  </header>
  <CustomCarousel
    autoplay={true}
    legendPosition="legend-center"
  />
  <ThemedActivableRenderer
    action="Dismiss"
    active={true}
    composeTheme="deeply"
    delay={500}
    label="Something Went Wrong"
    mapThemrProps={[Function]}
    onClick={[Function]}
    onTimeout={[Function]}
    theme={
      Object {
        "button": "button-error",
        "snackbar": "error-theme",
      }
    }
    timeout={6000}
    type="cancel"
  />
</Fragment>
`;

exports[`Login component should display an error when login error occurs and close snackbar on time out 1`] = `
<Login
  history={
    Object {
      "push": [MockFunction],
    }
  }
  location={
    Object {
      "pathname": "/",
      "search": "?error=Something%20Went%20Wrong",
    }
  }
>
  <LoginModal
    closeModal={true}
    handleCloseModal={[Function]}
    openModal={false}
  >
    <MrmModal
      buttonText=""
      className="login-modal"
      closeModal={true}
      handleCloseRequest={[Function]}
      modalButtonClassName="button"
      openModal={false}
      showBtn={false}
      title={null}
    >
      <Modal
        ariaHideApp={false}
        bodyOpenClassName="ReactModal__Body--open"
        className="login-modal"
        closeTimeoutMS={0}
        contentLabel="Parent Modal"
        isOpen={false}
        onAfterOpen={[Function]}
        onRequestClose={[Function]}
        parentSelector={[Function]}
        portalClassName="ReactModalPortal"
        shouldCloseOnEsc={true}
        shouldCloseOnOverlayClick={false}
        shouldFocusAfterRender={true}
        shouldReturnFocusAfterClose={true}
        style={
          Object {
            "content": Object {
              "backgroundColor": "#ffffff",
              "border": "1px solid #CCCCCC",
              "borderRadius": "15px",
              "bottom": "auto",
              "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
              "fontFamily": "DINPro-Regular",
              "left": "50%",
              "outline": "none",
              "overflow": "auto",
              "position": "absolute",
              "right": "auto",
              "top": "50%",
              "transform": "translate(-50%, -50%)",
            },
          }
        }
      >
        <Portal
          containerInfo={
            <div
              class="ReactModalPortal"
            />
          }
        >
          <ModalPortal
            ariaHideApp={false}
            bodyOpenClassName="ReactModal__Body--open"
            className="login-modal"
            closeTimeoutMS={0}
            contentLabel="Parent Modal"
            defaultStyles={
              Object {
                "content": Object {
                  "WebkitOverflowScrolling": "touch",
                  "background": "#fff",
                  "border": "1px solid #ccc",
                  "borderRadius": "4px",
                  "bottom": "40px",
                  "left": "40px",
                  "outline": "none",
                  "overflow": "auto",
                  "padding": "20px",
                  "position": "absolute",
                  "right": "40px",
                  "top": "40px",
                },
                "overlay": Object {
                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                },
              }
            }
            isOpen={false}
            onAfterOpen={[Function]}
            onRequestClose={[Function]}
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={false}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
            style={
              Object {
                "content": Object {
                  "backgroundColor": "#ffffff",
                  "border": "1px solid #CCCCCC",
                  "borderRadius": "15px",
                  "bottom": "auto",
                  "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                  "fontFamily": "DINPro-Regular",
                  "left": "50%",
                  "outline": "none",
                  "overflow": "auto",
                  "position": "absolute",
                  "right": "auto",
                  "top": "50%",
                  "transform": "translate(-50%, -50%)",
                },
              }
            }
          />
        </Portal>
      </Modal>
    </MrmModal>
  </LoginModal>
  <header
    className="landing-page-header"
  >
    <div
      className="header-logo"
    >
      <img
        alt="logo"
        src="test-file-stub"
      />
    </div>
    <div
      className="login-btn"
    >
      <Button
        classProp="trigger-login-modal"
        handleClick={[Function]}
        id="Next"
        isDisabled={false}
        title="Login"
        type={1}
      >
        <button
          className="trigger-login-modal btn-primary"
          disabled={false}
          id="Next"
          onClick={[Function]}
        >
          <span>
            Login
          </span>
        </button>
      </Button>
    </div>
  </header>
  <CustomCarousel
    autoplay={true}
    legendPosition="legend-center"
  >
    <div
      className="carousel"
    >
      <Slider
        appendDots={[Function]}
        autoplay={true}
        autoplaySpeed={3000}
        className="slide"
        cssEase="ease-in"
        dots={true}
        dotsClass="slick-dots"
        fade={true}
        infinite={true}
        onChange={[Function]}
        pauseOnDotsHover={true}
        pauseOnFocus={true}
        pauseOnHover={false}
        selectedItem={0}
        slidesToScroll={3}
        slidesToShow={1}
        speed={3000}
        touchThreshold={100}
      >
        <InnerSlider
          accessibility={true}
          adaptiveHeight={false}
          afterChange={null}
          appendDots={[Function]}
          arrows={true}
          autoplay={true}
          autoplaySpeed={3000}
          beforeChange={null}
          centerMode={false}
          centerPadding="50px"
          className="slide"
          cssEase="ease-in"
          customPaging={[Function]}
          dots={true}
          dotsClass="slick-dots"
          draggable={true}
          easing="linear"
          edgeFriction={0.35}
          fade={true}
          focusOnSelect={false}
          infinite={true}
          initialSlide={0}
          lazyLoad={null}
          nextArrow={null}
          onChange={[Function]}
          onEdge={null}
          onInit={null}
          onLazyLoadError={null}
          onReInit={null}
          pauseOnDotsHover={true}
          pauseOnFocus={true}
          pauseOnHover={false}
          prevArrow={null}
          responsive={null}
          rows={1}
          rtl={false}
          selectedItem={0}
          slide="div"
          slidesPerRow={1}
          slidesToScroll={1}
          slidesToShow={1}
          speed={3000}
          swipe={true}
          swipeEvent={null}
          swipeToSlide={false}
          touchMove={true}
          touchThreshold={100}
          useCSS={true}
          useTransform={true}
          variableWidth={false}
          vertical={false}
          waitForAnimate={true}
        >
          <div
            className="slick-slider slide slick-initialized"
            dir="ltr"
          >
            <PrevArrow
              centerMode={false}
              clickHandler={[Function]}
              currentSlide={0}
              infinite={true}
              nextArrow={null}
              prevArrow={null}
              slideCount={4}
              slidesToShow={1}
            >
              <button
                className="slick-arrow slick-prev"
                data-role="none"
                key="0"
                onClick={[Function]}
                style={
                  Object {
                    "display": "block",
                  }
                }
                type="button"
              >
                 
                Previous
              </button>
            </PrevArrow>
            <div
              className="slick-list"
              onClick={[Function]}
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={null}
              onMouseMove={null}
              onMouseUp={[Function]}
              onTouchCancel={null}
              onTouchEnd={[Function]}
              onTouchMove={null}
              onTouchStart={[Function]}
              style={Object {}}
            >
              <Track
                centerMode={false}
                centerPadding="50px"
                cssEase="ease-in"
                currentSlide={0}
                fade={true}
                focusOnSelect={null}
                infinite={true}
                lazyLoad={null}
                lazyLoadedList={Array []}
                listHeight={0}
                onMouseEnter={null}
                onMouseLeave={null}
                onMouseOver={null}
                rtl={false}
                slideCount={4}
                slideHeight={0}
                slideWidth={0}
                slidesToScroll={1}
                slidesToShow={1}
                speed={3000}
                trackStyle={
                  Object {
                    "opacity": 1,
                  }
                }
                variableWidth={false}
                vertical={false}
              >
                <div
                  className="slick-track"
                  onMouseEnter={null}
                  onMouseLeave={null}
                  onMouseOver={null}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <div
                    aria-hidden={false}
                    className="slick-slide slick-active slick-current"
                    data-index={0}
                    key="original0"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "left": -0,
                        "opacity": 1,
                        "outline": "none",
                        "position": "relative",
                        "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "width": 0,
                      }
                    }
                    tabIndex="-1"
                  >
                    <div
                      key="0"
                    >
                      <div
                        key="0"
                        style={
                          Object {
                            "display": "inline-block",
                            "width": "100%",
                          }
                        }
                        tabIndex={-1}
                      >
                        <p
                          className="legend legend-center"
                        >
                          Safari Meeting Room, Andela New York
                        </p>
                        <img
                          alt="Safari Meeting Room, Andela New York"
                          src="test-file-stub"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    aria-hidden={true}
                    className="slick-slide"
                    data-index={1}
                    key="original1"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "left": -0,
                        "opacity": 0,
                        "outline": "none",
                        "position": "relative",
                        "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "width": 0,
                      }
                    }
                    tabIndex="-1"
                  >
                    <div
                      key="11"
                    >
                      <div
                        key="111"
                        style={
                          Object {
                            "display": "inline-block",
                            "width": "100%",
                          }
                        }
                        tabIndex={-1}
                      >
                        <p
                          className="legend legend-center"
                        >
                          Cognitio Meeting Room, Andela Lagos
                        </p>
                        <img
                          alt="Cognitio Meeting Room, Andela Lagos"
                          src="test-file-stub"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    aria-hidden={true}
                    className="slick-slide"
                    data-index={2}
                    key="original2"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "left": -0,
                        "opacity": 0,
                        "outline": "none",
                        "position": "relative",
                        "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "width": 0,
                      }
                    }
                    tabIndex="-1"
                  >
                    <div
                      key="22"
                    >
                      <div
                        key="222"
                        style={
                          Object {
                            "display": "inline-block",
                            "width": "100%",
                          }
                        }
                        tabIndex={-1}
                      >
                        <p
                          className="legend legend-center"
                        >
                          Entebbe Meeting Room, Andela Kampala
                        </p>
                        <img
                          alt="Entebbe Meeting Room, Andela Kampala"
                          src="test-file-stub"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    aria-hidden={true}
                    className="slick-slide"
                    data-index={3}
                    key="original3"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "left": -0,
                        "opacity": 0,
                        "outline": "none",
                        "position": "relative",
                        "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "width": 0,
                      }
                    }
                    tabIndex="-1"
                  >
                    <div
                      key="33"
                    >
                      <div
                        key="333"
                        style={
                          Object {
                            "display": "inline-block",
                            "width": "100%",
                          }
                        }
                        tabIndex={-1}
                      >
                        <p
                          className="legend legend-center"
                        >
                          Banku Meeting Room, Andela Lagos
                        </p>
                        <img
                          alt="Banku Meeting Room, Andela Lagos"
                          src="test-file-stub"
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </Track>
            </div>
            <NextArrow
              centerMode={false}
              clickHandler={[Function]}
              currentSlide={0}
              infinite={true}
              nextArrow={null}
              prevArrow={null}
              slideCount={4}
              slidesToShow={1}
            >
              <button
                className="slick-arrow slick-next"
                data-role="none"
                key="1"
                onClick={[Function]}
                style={
                  Object {
                    "display": "block",
                  }
                }
                type="button"
              >
                 
                Next
              </button>
            </NextArrow>
            <Dots
              appendDots={[Function]}
              clickHandler={[Function]}
              currentSlide={0}
              customPaging={[Function]}
              dotsClass="slick-dots"
              infinite={true}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              slideCount={4}
              slidesToScroll={1}
              slidesToShow={1}
            >
              <div
                className="slick-dots"
                id="adjust-dots"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
              >
                <ul>
                   
                  <li
                    className="slick-active"
                    key="0"
                  >
                    <button
                      onClick={[Function]}
                    >
                      1
                    </button>
                  </li>
                  <li
                    className=""
                    key="1"
                  >
                    <button
                      onClick={[Function]}
                    >
                      2
                    </button>
                  </li>
                  <li
                    className=""
                    key="2"
                  >
                    <button
                      onClick={[Function]}
                    >
                      3
                    </button>
                  </li>
                  <li
                    className=""
                    key="3"
                  >
                    <button
                      onClick={[Function]}
                    >
                      4
                    </button>
                  </li>
                   
                </ul>
              </div>
            </Dots>
          </div>
        </InnerSlider>
      </Slider>
    </div>
  </CustomCarousel>
  <ThemedActivableRenderer
    action="Dismiss"
    active={true}
    composeTheme="deeply"
    delay={500}
    label="Please Login With Your Andela Email"
    mapThemrProps={[Function]}
    onClick={[Function]}
    onTimeout={[Function]}
    theme={
      Object {
        "button": "button-error",
        "snackbar": "error-theme",
      }
    }
    timeout={6000}
    type="cancel"
  >
    <ActivableRenderer
      action="Dismiss"
      active={true}
      delay={500}
      label="Please Login With Your Andela Email"
      onClick={[Function]}
      onTimeout={[Function]}
      theme={
        Object {
          "button": "button-error",
          "snackbar": "error-theme",
        }
      }
      timeout={6000}
      type="cancel"
    >
      <Snackbar
        action="Dismiss"
        active={true}
        label="Please Login With Your Andela Email"
        onClick={[Function]}
        onTimeout={[Function]}
        theme={
          Object {
            "button": "button-error",
            "snackbar": "error-theme",
          }
        }
        timeout={6000}
        type="cancel"
      >
        <Portal
          className=""
        />
      </Snackbar>
    </ActivableRenderer>
  </ThemedActivableRenderer>
</Login>
`;

exports[`Login component should display an error when login error occurs and close snackbar on time out 2`] = `
<Login
  history={
    Object {
      "push": [MockFunction] {
        "calls": Array [
          Array [
            "/",
          ],
        ],
      },
    }
  }
  location={
    Object {
      "pathname": "/",
      "search": "?error=Something%20Went%20Wrong",
    }
  }
>
  <LoginModal
    closeModal={true}
    handleCloseModal={[Function]}
    openModal={false}
  >
    <MrmModal
      buttonText=""
      className="login-modal"
      closeModal={true}
      handleCloseRequest={[Function]}
      modalButtonClassName="button"
      openModal={false}
      showBtn={false}
      title={null}
    >
      <Modal
        ariaHideApp={false}
        bodyOpenClassName="ReactModal__Body--open"
        className="login-modal"
        closeTimeoutMS={0}
        contentLabel="Parent Modal"
        isOpen={false}
        onAfterOpen={[Function]}
        onRequestClose={[Function]}
        parentSelector={[Function]}
        portalClassName="ReactModalPortal"
        shouldCloseOnEsc={true}
        shouldCloseOnOverlayClick={false}
        shouldFocusAfterRender={true}
        shouldReturnFocusAfterClose={true}
        style={
          Object {
            "content": Object {
              "backgroundColor": "#ffffff",
              "border": "1px solid #CCCCCC",
              "borderRadius": "15px",
              "bottom": "auto",
              "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
              "fontFamily": "DINPro-Regular",
              "left": "50%",
              "outline": "none",
              "overflow": "auto",
              "position": "absolute",
              "right": "auto",
              "top": "50%",
              "transform": "translate(-50%, -50%)",
            },
          }
        }
      >
        <Portal
          containerInfo={
            <div
              class="ReactModalPortal"
            />
          }
        >
          <ModalPortal
            ariaHideApp={false}
            bodyOpenClassName="ReactModal__Body--open"
            className="login-modal"
            closeTimeoutMS={0}
            contentLabel="Parent Modal"
            defaultStyles={
              Object {
                "content": Object {
                  "WebkitOverflowScrolling": "touch",
                  "background": "#fff",
                  "border": "1px solid #ccc",
                  "borderRadius": "4px",
                  "bottom": "40px",
                  "left": "40px",
                  "outline": "none",
                  "overflow": "auto",
                  "padding": "20px",
                  "position": "absolute",
                  "right": "40px",
                  "top": "40px",
                },
                "overlay": Object {
                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                },
              }
            }
            isOpen={false}
            onAfterOpen={[Function]}
            onRequestClose={[Function]}
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={false}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
            style={
              Object {
                "content": Object {
                  "backgroundColor": "#ffffff",
                  "border": "1px solid #CCCCCC",
                  "borderRadius": "15px",
                  "bottom": "auto",
                  "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                  "fontFamily": "DINPro-Regular",
                  "left": "50%",
                  "outline": "none",
                  "overflow": "auto",
                  "position": "absolute",
                  "right": "auto",
                  "top": "50%",
                  "transform": "translate(-50%, -50%)",
                },
              }
            }
          />
        </Portal>
      </Modal>
    </MrmModal>
  </LoginModal>
  <header
    className="landing-page-header"
  >
    <div
      className="header-logo"
    >
      <img
        alt="logo"
        src="test-file-stub"
      />
    </div>
    <div
      className="login-btn"
    >
      <Button
        classProp="trigger-login-modal"
        handleClick={[Function]}
        id="Next"
        isDisabled={false}
        title="Login"
        type={1}
      >
        <button
          className="trigger-login-modal btn-primary"
          disabled={false}
          id="Next"
          onClick={[Function]}
        >
          <span>
            Login
          </span>
        </button>
      </Button>
    </div>
  </header>
  <CustomCarousel
    autoplay={true}
    legendPosition="legend-center"
  >
    <div
      className="carousel"
    >
      <Slider
        appendDots={[Function]}
        autoplay={true}
        autoplaySpeed={3000}
        className="slide"
        cssEase="ease-in"
        dots={true}
        dotsClass="slick-dots"
        fade={true}
        infinite={true}
        onChange={[Function]}
        pauseOnDotsHover={true}
        pauseOnFocus={true}
        pauseOnHover={false}
        selectedItem={0}
        slidesToScroll={3}
        slidesToShow={1}
        speed={3000}
        touchThreshold={100}
      >
        <InnerSlider
          accessibility={true}
          adaptiveHeight={false}
          afterChange={null}
          appendDots={[Function]}
          arrows={true}
          autoplay={true}
          autoplaySpeed={3000}
          beforeChange={null}
          centerMode={false}
          centerPadding="50px"
          className="slide"
          cssEase="ease-in"
          customPaging={[Function]}
          dots={true}
          dotsClass="slick-dots"
          draggable={true}
          easing="linear"
          edgeFriction={0.35}
          fade={true}
          focusOnSelect={false}
          infinite={true}
          initialSlide={0}
          lazyLoad={null}
          nextArrow={null}
          onChange={[Function]}
          onEdge={null}
          onInit={null}
          onLazyLoadError={null}
          onReInit={null}
          pauseOnDotsHover={true}
          pauseOnFocus={true}
          pauseOnHover={false}
          prevArrow={null}
          responsive={null}
          rows={1}
          rtl={false}
          selectedItem={0}
          slide="div"
          slidesPerRow={1}
          slidesToScroll={1}
          slidesToShow={1}
          speed={3000}
          swipe={true}
          swipeEvent={null}
          swipeToSlide={false}
          touchMove={true}
          touchThreshold={100}
          useCSS={true}
          useTransform={true}
          variableWidth={false}
          vertical={false}
          waitForAnimate={true}
        >
          <div
            className="slick-slider slide slick-initialized"
            dir="ltr"
          >
            <PrevArrow
              centerMode={false}
              clickHandler={[Function]}
              currentSlide={0}
              infinite={true}
              nextArrow={null}
              prevArrow={null}
              slideCount={4}
              slidesToShow={1}
            >
              <button
                className="slick-arrow slick-prev"
                data-role="none"
                key="0"
                onClick={[Function]}
                style={
                  Object {
                    "display": "block",
                  }
                }
                type="button"
              >
                 
                Previous
              </button>
            </PrevArrow>
            <div
              className="slick-list"
              onClick={[Function]}
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={null}
              onMouseMove={null}
              onMouseUp={[Function]}
              onTouchCancel={null}
              onTouchEnd={[Function]}
              onTouchMove={null}
              onTouchStart={[Function]}
              style={Object {}}
            >
              <Track
                centerMode={false}
                centerPadding="50px"
                cssEase="ease-in"
                currentSlide={0}
                fade={true}
                focusOnSelect={null}
                infinite={true}
                lazyLoad={null}
                lazyLoadedList={Array []}
                listHeight={0}
                onMouseEnter={null}
                onMouseLeave={null}
                onMouseOver={null}
                rtl={false}
                slideCount={4}
                slideHeight={0}
                slideWidth={0}
                slidesToScroll={1}
                slidesToShow={1}
                speed={3000}
                trackStyle={
                  Object {
                    "opacity": 1,
                  }
                }
                variableWidth={false}
                vertical={false}
              >
                <div
                  className="slick-track"
                  onMouseEnter={null}
                  onMouseLeave={null}
                  onMouseOver={null}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <div
                    aria-hidden={false}
                    className="slick-slide slick-active slick-current"
                    data-index={0}
                    key="original0"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "left": -0,
                        "opacity": 1,
                        "outline": "none",
                        "position": "relative",
                        "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "width": 0,
                      }
                    }
                    tabIndex="-1"
                  >
                    <div
                      key="0"
                    >
                      <div
                        key="0"
                        style={
                          Object {
                            "display": "inline-block",
                            "width": "100%",
                          }
                        }
                        tabIndex={-1}
                      >
                        <p
                          className="legend legend-center"
                        >
                          Safari Meeting Room, Andela New York
                        </p>
                        <img
                          alt="Safari Meeting Room, Andela New York"
                          src="test-file-stub"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    aria-hidden={true}
                    className="slick-slide"
                    data-index={1}
                    key="original1"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "left": -0,
                        "opacity": 0,
                        "outline": "none",
                        "position": "relative",
                        "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "width": 0,
                      }
                    }
                    tabIndex="-1"
                  >
                    <div
                      key="11"
                    >
                      <div
                        key="111"
                        style={
                          Object {
                            "display": "inline-block",
                            "width": "100%",
                          }
                        }
                        tabIndex={-1}
                      >
                        <p
                          className="legend legend-center"
                        >
                          Cognitio Meeting Room, Andela Lagos
                        </p>
                        <img
                          alt="Cognitio Meeting Room, Andela Lagos"
                          src="test-file-stub"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    aria-hidden={true}
                    className="slick-slide"
                    data-index={2}
                    key="original2"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "left": -0,
                        "opacity": 0,
                        "outline": "none",
                        "position": "relative",
                        "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "width": 0,
                      }
                    }
                    tabIndex="-1"
                  >
                    <div
                      key="22"
                    >
                      <div
                        key="222"
                        style={
                          Object {
                            "display": "inline-block",
                            "width": "100%",
                          }
                        }
                        tabIndex={-1}
                      >
                        <p
                          className="legend legend-center"
                        >
                          Entebbe Meeting Room, Andela Kampala
                        </p>
                        <img
                          alt="Entebbe Meeting Room, Andela Kampala"
                          src="test-file-stub"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    aria-hidden={true}
                    className="slick-slide"
                    data-index={3}
                    key="original3"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitTransition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "left": -0,
                        "opacity": 0,
                        "outline": "none",
                        "position": "relative",
                        "transition": "opacity 3000ms ease-in, visibility 3000ms ease-in",
                        "width": 0,
                      }
                    }
                    tabIndex="-1"
                  >
                    <div
                      key="33"
                    >
                      <div
                        key="333"
                        style={
                          Object {
                            "display": "inline-block",
                            "width": "100%",
                          }
                        }
                        tabIndex={-1}
                      >
                        <p
                          className="legend legend-center"
                        >
                          Banku Meeting Room, Andela Lagos
                        </p>
                        <img
                          alt="Banku Meeting Room, Andela Lagos"
                          src="test-file-stub"
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </Track>
            </div>
            <NextArrow
              centerMode={false}
              clickHandler={[Function]}
              currentSlide={0}
              infinite={true}
              nextArrow={null}
              prevArrow={null}
              slideCount={4}
              slidesToShow={1}
            >
              <button
                className="slick-arrow slick-next"
                data-role="none"
                key="1"
                onClick={[Function]}
                style={
                  Object {
                    "display": "block",
                  }
                }
                type="button"
              >
                 
                Next
              </button>
            </NextArrow>
            <Dots
              appendDots={[Function]}
              clickHandler={[Function]}
              currentSlide={0}
              customPaging={[Function]}
              dotsClass="slick-dots"
              infinite={true}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              slideCount={4}
              slidesToScroll={1}
              slidesToShow={1}
            >
              <div
                className="slick-dots"
                id="adjust-dots"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
              >
                <ul>
                   
                  <li
                    className="slick-active"
                    key="0"
                  >
                    <button
                      onClick={[Function]}
                    >
                      1
                    </button>
                  </li>
                  <li
                    className=""
                    key="1"
                  >
                    <button
                      onClick={[Function]}
                    >
                      2
                    </button>
                  </li>
                  <li
                    className=""
                    key="2"
                  >
                    <button
                      onClick={[Function]}
                    >
                      3
                    </button>
                  </li>
                  <li
                    className=""
                    key="3"
                  >
                    <button
                      onClick={[Function]}
                    >
                      4
                    </button>
                  </li>
                   
                </ul>
              </div>
            </Dots>
          </div>
        </InnerSlider>
      </Slider>
    </div>
  </CustomCarousel>
</Login>
`;
