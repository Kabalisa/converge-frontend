// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Bookings Count Bar Graph Component renders correctly 1`] = `
<MockedProvider
  addTypename={true}
  mocks={Array []}
>
  <ApolloProvider
    client={
      ApolloClient {
        "__operations_cache__": Map {},
        "cache": InMemoryCache {
          "addTypename": true,
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "storeFactory": [Function],
          },
          "data": ObjectCache {
            "data": Object {},
          },
          "optimistic": Array [],
          "silenceBroadcast": false,
          "watches": Array [],
        },
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": ApolloLink {
          "request": [Function],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "ssrMode": false,
        "store": DataStore {
          "cache": InMemoryCache {
            "addTypename": true,
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "storeFactory": [Function],
            },
            "data": ObjectCache {
              "data": Object {},
            },
            "optimistic": Array [],
            "silenceBroadcast": false,
            "watches": Array [],
          },
        },
        "version": "2.3.1",
        "watchQuery": [Function],
      }
    }
  >
    <BookingsCountBarGraph
      dateValue={
        Object {
          "endDate": "Nov 03 2018",
          "startDate": "Nov 01 2018",
        }
      }
      updateParent={[MockFunction]}
    >
      <article
        className="bar-graph"
      >
        <section
          className="graph-header"
        >
          <p
            className="graph-title"
          >
            Total Bookings Count
          </p>
          <ThemedTooltippedComponent
            className=""
            composeTheme="deeply"
            mapThemrProps={[Function]}
            theme={null}
            tooltip="Total count of bookings in a given time"
            tooltipDelay={0}
            tooltipHideOnClick={true}
            tooltipPosition="top"
            tooltipShowOnClick={true}
          >
            <TooltippedComponent
              className=""
              theme={
                Object {
                  "tooltipInner": "tooltipInner",
                }
              }
              tooltip="Total count of bookings in a given time"
              tooltipDelay={0}
              tooltipHideOnClick={true}
              tooltipPosition="top"
              tooltipShowOnClick={true}
            >
              <ThemedLink
                active={false}
                className=""
                composeTheme="deeply"
                mapThemrProps={[Function]}
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                theme={
                  Object {
                    "tooltipInner": "tooltipInner",
                  }
                }
              >
                <Link
                  active={false}
                  className=""
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  theme={
                    Object {
                      "tooltipInner": "tooltipInner",
                    }
                  }
                >
                  <a
                    className=""
                    data-react-toolbox="link"
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                  >
                    <img
                      alt="help icon"
                      src="https://firebasestorage.googleapis.com/v0/b/learning-map-app.appspot.com/o/MrmFrontImages%2Fhelp_outline_24px.svg?alt=media&token=839e3137-c29e-463d-9a68-361e28794911"
                    />
                  </a>
                </Link>
              </ThemedLink>
            </TooltippedComponent>
          </ThemedTooltippedComponent>
        </section>
        <section
          className="graph-content"
        >
          <QueryBookingsCount
            dateValue={
              Object {
                "endDate": "Nov 03 2018",
                "startDate": "Nov 01 2018",
              }
            }
            updateParent={[MockFunction]}
          >
            <Spinner
              size=""
            >
              <div
                className="centered"
              >
                <div
                  className="spinner"
                />
              </div>
            </Spinner>
          </QueryBookingsCount>
        </section>
      </article>
    </BookingsCountBarGraph>
  </ApolloProvider>
</MockedProvider>
`;

exports[`Bookings Count Bar Graph Component should be able to hover 1`] = `
<MockedProvider
  addTypename={true}
  mocks={Array []}
>
  <ApolloProvider
    client={
      ApolloClient {
        "__operations_cache__": Map {},
        "cache": InMemoryCache {
          "addTypename": true,
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "storeFactory": [Function],
          },
          "data": ObjectCache {
            "data": Object {},
          },
          "optimistic": Array [],
          "silenceBroadcast": false,
          "watches": Array [],
        },
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": ApolloLink {
          "request": [Function],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "ssrMode": false,
        "store": DataStore {
          "cache": InMemoryCache {
            "addTypename": true,
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "storeFactory": [Function],
            },
            "data": ObjectCache {
              "data": Object {},
            },
            "optimistic": Array [],
            "silenceBroadcast": false,
            "watches": Array [],
          },
        },
        "version": "2.3.1",
        "watchQuery": [Function],
      }
    }
  >
    <BookingsCountBarGraph
      dateValue={
        Object {
          "endDate": "Nov 03 2018",
          "startDate": "Nov 01 2018",
        }
      }
      updateParent={[MockFunction]}
    >
      <article
        className="bar-graph"
      >
        <section
          className="graph-header"
        >
          <p
            className="graph-title"
          >
            Total Bookings Count
          </p>
          <ThemedTooltippedComponent
            className=""
            composeTheme="deeply"
            mapThemrProps={[Function]}
            theme={null}
            tooltip="Total count of bookings in a given time"
            tooltipDelay={0}
            tooltipHideOnClick={true}
            tooltipPosition="top"
            tooltipShowOnClick={true}
          >
            <TooltippedComponent
              className=""
              theme={
                Object {
                  "tooltipInner": "tooltipInner",
                }
              }
              tooltip="Total count of bookings in a given time"
              tooltipDelay={0}
              tooltipHideOnClick={true}
              tooltipPosition="top"
              tooltipShowOnClick={true}
            >
              <ThemedLink
                active={false}
                className=""
                composeTheme="deeply"
                mapThemrProps={[Function]}
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                theme={
                  Object {
                    "tooltipInner": "tooltipInner",
                  }
                }
              >
                <Link
                  active={false}
                  className=""
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  theme={
                    Object {
                      "tooltipInner": "tooltipInner",
                    }
                  }
                >
                  <a
                    className=""
                    data-react-toolbox="link"
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                  >
                    <img
                      alt="help icon"
                      src="https://firebasestorage.googleapis.com/v0/b/learning-map-app.appspot.com/o/MrmFrontImages%2Fhelp_outline_24px.svg?alt=media&token=839e3137-c29e-463d-9a68-361e28794911"
                    />
                  </a>
                </Link>
              </ThemedLink>
            </TooltippedComponent>
          </ThemedTooltippedComponent>
        </section>
        <section
          className="graph-content"
        >
          <QueryBookingsCount
            dateValue={
              Object {
                "endDate": "Nov 03 2018",
                "startDate": "Nov 01 2018",
              }
            }
            updateParent={[MockFunction]}
          >
            <Spinner
              size=""
            >
              <div
                className="centered"
              >
                <div
                  className="spinner"
                />
              </div>
            </Spinner>
          </QueryBookingsCount>
        </section>
      </article>
    </BookingsCountBarGraph>
  </ApolloProvider>
</MockedProvider>
`;

exports[`Bookings Count Bar Graph Component should be able to hover 2`] = `
<MockedProvider
  addTypename={true}
  mocks={Array []}
>
  <ApolloProvider
    client={
      ApolloClient {
        "__operations_cache__": Map {},
        "cache": InMemoryCache {
          "addTypename": true,
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "storeFactory": [Function],
          },
          "data": ObjectCache {
            "data": Object {},
          },
          "optimistic": Array [],
          "silenceBroadcast": false,
          "watches": Array [],
        },
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": ApolloLink {
          "request": [Function],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "ssrMode": false,
        "store": DataStore {
          "cache": InMemoryCache {
            "addTypename": true,
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "storeFactory": [Function],
            },
            "data": ObjectCache {
              "data": Object {},
            },
            "optimistic": Array [],
            "silenceBroadcast": false,
            "watches": Array [],
          },
        },
        "version": "2.3.1",
        "watchQuery": [Function],
      }
    }
  >
    <BookingsCountBarGraph
      dateValue={
        Object {
          "endDate": "Nov 03 2018",
          "startDate": "Nov 01 2018",
        }
      }
      updateParent={[MockFunction]}
    >
      <article
        className="bar-graph"
      >
        <section
          className="graph-header"
        >
          <p
            className="graph-title"
          >
            Total Bookings Count
          </p>
          <ThemedTooltippedComponent
            className=""
            composeTheme="deeply"
            mapThemrProps={[Function]}
            theme={null}
            tooltip="Total count of bookings in a given time"
            tooltipDelay={0}
            tooltipHideOnClick={true}
            tooltipPosition="top"
            tooltipShowOnClick={true}
          >
            <TooltippedComponent
              className=""
              theme={
                Object {
                  "tooltipInner": "tooltipInner",
                }
              }
              tooltip="Total count of bookings in a given time"
              tooltipDelay={0}
              tooltipHideOnClick={true}
              tooltipPosition="top"
              tooltipShowOnClick={true}
            >
              <ThemedLink
                active={false}
                className=""
                composeTheme="deeply"
                mapThemrProps={[Function]}
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                theme={
                  Object {
                    "tooltipInner": "tooltipInner",
                  }
                }
              >
                <Link
                  active={false}
                  className=""
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  theme={
                    Object {
                      "tooltipInner": "tooltipInner",
                    }
                  }
                >
                  <a
                    className=""
                    data-react-toolbox="link"
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                  >
                    <img
                      alt="help icon"
                      src="https://firebasestorage.googleapis.com/v0/b/learning-map-app.appspot.com/o/MrmFrontImages%2Fhelp_outline_24px.svg?alt=media&token=839e3137-c29e-463d-9a68-361e28794911"
                    />
                  </a>
                </Link>
              </ThemedLink>
            </TooltippedComponent>
          </ThemedTooltippedComponent>
        </section>
        <section
          className="graph-content"
        >
          <QueryBookingsCount
            dateValue={
              Object {
                "endDate": "Nov 03 2018",
                "startDate": "Nov 01 2018",
              }
            }
            updateParent={[MockFunction]}
          >
            <Spinner
              size=""
            >
              <div
                className="centered"
              >
                <div
                  className="spinner"
                />
              </div>
            </Spinner>
          </QueryBookingsCount>
        </section>
      </article>
    </BookingsCountBarGraph>
  </ApolloProvider>
</MockedProvider>
`;
