// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddRoomNairobi should pop up a modal when modal button is clicked 1`] = `
<MockedProvider
  addTypename={false}
  mocks={
    Array [
      Object {
        "request": Object {
          "query": undefined,
          "variables": Object {
            "imageUrl": "test/image",
            "office_id": 2,
            "roomCalendar": "andela.com",
            "roomCapacity": 3,
            "roomFloorId": 2,
            "roomName": "Test room 1",
            "roomType": "meeting room",
          },
        },
        "result": Object {
          "data": Object {
            "createRoom": Object {
              "room": Object {
                "floorId": 2,
                "name": "Test room 4",
              },
            },
          },
        },
      },
    ]
  }
>
  <ApolloProvider
    client={
      ApolloClient {
        "__operations_cache__": Map {
          "officeDetails" => Object {
            "query": Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "officeDetails",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "name",
                            },
                            "value": Object {
                              "block": false,
                              "kind": "StringValue",
                              "value": "St Catherines",
                            },
                          },
                        ],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "getOfficeByName",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "name",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "location",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "blocks",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "floors",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "variableDefinitions": Array [],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 239,
                "start": 0,
              },
            },
            "variables": undefined,
          },
          "data" => Object {
            "query": Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": undefined,
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "allRemoteRooms",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "rooms",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "calendarId",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "variableDefinitions": Array [],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 93,
                "start": 0,
              },
            },
            "variables": undefined,
          },
        },
        "cache": InMemoryCache {
          "addTypename": false,
          "config": Object {
            "addTypename": false,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "storeFactory": [Function],
          },
          "data": ObjectCache {
            "data": Object {},
          },
          "optimistic": Array [],
          "silenceBroadcast": false,
          "watches": Array [
            Object {
              "callback": [Function],
              "optimistic": true,
              "previousResult": [Function],
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": undefined,
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "allRemoteRooms",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "rooms",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "calendarId",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 93,
                  "start": 0,
                },
              },
              "variables": undefined,
            },
            Object {
              "callback": [Function],
              "optimistic": true,
              "previousResult": [Function],
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "officeDetails",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "name",
                              },
                              "value": Object {
                                "block": false,
                                "kind": "StringValue",
                                "value": "St Catherines",
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "getOfficeByName",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "name",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "location",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "blocks",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "floors",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 239,
                  "start": 0,
                },
              },
              "variables": undefined,
            },
          ],
        },
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": ApolloLink {
          "request": [Function],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "queryManager": QueryManager {
          "dataStore": DataStore {
            "cache": InMemoryCache {
              "addTypename": false,
              "config": Object {
                "addTypename": false,
                "dataIdFromObject": [Function],
                "fragmentMatcher": HeuristicFragmentMatcher {},
                "storeFactory": [Function],
              },
              "data": ObjectCache {
                "data": Object {},
              },
              "optimistic": Array [],
              "silenceBroadcast": false,
              "watches": Array [
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "previousResult": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": undefined,
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "allRemoteRooms",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "rooms",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "calendarId",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 93,
                      "start": 0,
                    },
                  },
                  "variables": undefined,
                },
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "previousResult": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "officeDetails",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "value": Object {
                                    "block": false,
                                    "kind": "StringValue",
                                    "value": "St Catherines",
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "getOfficeByName",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "location",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "blocks",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "floors",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "name",
                                                },
                                                "selectionSet": undefined,
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 239,
                      "start": 0,
                    },
                  },
                  "variables": undefined,
                },
              ],
            },
          },
          "deduplicator": ApolloLink {
            "request": [Function],
          },
          "fetchQueryPromises": Map {},
          "idCounter": 5,
          "link": ApolloLink {
            "request": [Function],
          },
          "mutationStore": MutationStore {
            "store": Object {},
          },
          "onBroadcast": [Function],
          "queries": Map {
            "2" => Object {
              "cancel": [Function],
              "document": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": undefined,
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "allRemoteRooms",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "rooms",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "calendarId",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 93,
                  "start": 0,
                },
              },
              "invalidate": false,
              "invalidated": false,
              "lastRequestId": 3,
              "listeners": Array [
                [Function],
              ],
              "newData": null,
              "observableQuery": ObservableQuery {
                "_subscriber": [Function],
                "isCurrentlyPolling": false,
                "isTornDown": false,
                "lastError": [Error: Network error: No more mocked responses for the query: {
  allRemoteRooms {
    rooms {
      calendarId
      name
    }
  }
}
, variables: {}],
                "lastResult": undefined,
                "observers": Array [
                  SubscriptionObserver {
                    "_subscription": Subscription {
                      "_cleanup": [Function],
                      "_observer": Object {
                        "error": [Function],
                        "next": [Function],
                      },
                      "_queue": undefined,
                      "_state": "ready",
                    },
                  },
                ],
                "options": Object {
                  "context": Object {},
                  "metadata": Object {
                    "reactComponent": Object {
                      "displayName": "Apollo(Apollo(AddRoomNairobi))",
                    },
                  },
                  "notifyOnNetworkStatusChange": false,
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": undefined,
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "allRemoteRooms",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "rooms",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "calendarId",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 93,
                      "start": 0,
                    },
                  },
                },
                "queryId": "2",
                "queryManager": [Circular],
                "scheduler": QueryScheduler {
                  "inFlightQueries": Object {},
                  "intervalQueries": Object {},
                  "pollingTimers": Object {},
                  "queryManager": [Circular],
                  "registeredQueries": Object {},
                  "ssrMode": false,
                },
                "shouldSubscribe": true,
                "subscriptionHandles": Array [],
                "variables": Object {},
              },
              "subscriptions": Array [],
            },
            "1" => Object {
              "cancel": [Function],
              "document": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "officeDetails",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "name",
                              },
                              "value": Object {
                                "block": false,
                                "kind": "StringValue",
                                "value": "St Catherines",
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "getOfficeByName",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "name",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "location",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "blocks",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "floors",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 239,
                  "start": 0,
                },
              },
              "invalidate": false,
              "invalidated": false,
              "lastRequestId": 4,
              "listeners": Array [
                [Function],
              ],
              "newData": null,
              "observableQuery": ObservableQuery {
                "_subscriber": [Function],
                "isCurrentlyPolling": false,
                "isTornDown": false,
                "lastError": [Error: Network error: No more mocked responses for the query: query officeDetails {
  getOfficeByName(name: "St Catherines") {
    id
    name
    location {
      id
      name
    }
    blocks {
      id
      name
      floors {
        id
        name
      }
    }
  }
}
, variables: {}],
                "lastResult": undefined,
                "observers": Array [
                  SubscriptionObserver {
                    "_subscription": Subscription {
                      "_cleanup": [Function],
                      "_observer": Object {
                        "error": [Function],
                        "next": [Function],
                      },
                      "_queue": undefined,
                      "_state": "ready",
                    },
                  },
                ],
                "options": Object {
                  "context": Object {},
                  "metadata": Object {
                    "reactComponent": Object {
                      "displayName": "Apollo(Apollo(Apollo(AddRoomNairobi)))",
                    },
                  },
                  "notifyOnNetworkStatusChange": false,
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "officeDetails",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "value": Object {
                                    "block": false,
                                    "kind": "StringValue",
                                    "value": "St Catherines",
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "getOfficeByName",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "location",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "blocks",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "floors",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "name",
                                                },
                                                "selectionSet": undefined,
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 239,
                      "start": 0,
                    },
                  },
                },
                "queryId": "1",
                "queryManager": [Circular],
                "scheduler": QueryScheduler {
                  "inFlightQueries": Object {},
                  "intervalQueries": Object {},
                  "pollingTimers": Object {},
                  "queryManager": [Circular],
                  "registeredQueries": Object {},
                  "ssrMode": false,
                },
                "shouldSubscribe": true,
                "subscriptionHandles": Array [],
                "variables": Object {},
              },
              "subscriptions": Array [],
            },
          },
          "queryDeduplication": true,
          "queryIdsByName": Object {
            "officeDetails": Array [
              "1",
            ],
          },
          "queryStore": QueryStore {
            "store": Object {
              "1": Object {
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "officeDetails",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "name",
                                },
                                "value": Object {
                                  "block": false,
                                  "kind": "StringValue",
                                  "value": "St Catherines",
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "getOfficeByName",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "location",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "blocks",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "floors",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "name",
                                              },
                                              "selectionSet": undefined,
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 239,
                    "start": 0,
                  },
                },
                "graphQLErrors": Array [],
                "metadata": Object {
                  "reactComponent": Object {
                    "displayName": "Apollo(Apollo(Apollo(AddRoomNairobi)))",
                  },
                },
                "networkError": [Error: No more mocked responses for the query: query officeDetails {
  getOfficeByName(name: "St Catherines") {
    id
    name
    location {
      id
      name
    }
    blocks {
      id
      name
      floors {
        id
        name
      }
    }
  }
}
, variables: {}],
                "networkStatus": 8,
                "previousVariables": null,
                "variables": Object {},
              },
              "2": Object {
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": undefined,
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "allRemoteRooms",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "rooms",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "calendarId",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 93,
                    "start": 0,
                  },
                },
                "graphQLErrors": Array [],
                "metadata": Object {
                  "reactComponent": Object {
                    "displayName": "Apollo(Apollo(AddRoomNairobi))",
                  },
                },
                "networkError": [Error: No more mocked responses for the query: {
  allRemoteRooms {
    rooms {
      calendarId
      name
    }
  }
}
, variables: {}],
                "networkStatus": 8,
                "previousVariables": null,
                "variables": Object {},
              },
            },
          },
          "scheduler": QueryScheduler {
            "inFlightQueries": Object {},
            "intervalQueries": Object {},
            "pollingTimers": Object {},
            "queryManager": [Circular],
            "registeredQueries": Object {},
            "ssrMode": false,
          },
        },
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "ssrMode": false,
        "store": DataStore {
          "cache": InMemoryCache {
            "addTypename": false,
            "config": Object {
              "addTypename": false,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "storeFactory": [Function],
            },
            "data": ObjectCache {
              "data": Object {},
            },
            "optimistic": Array [],
            "silenceBroadcast": false,
            "watches": Array [
              Object {
                "callback": [Function],
                "optimistic": true,
                "previousResult": [Function],
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": undefined,
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "allRemoteRooms",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "rooms",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "calendarId",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 93,
                    "start": 0,
                  },
                },
                "variables": undefined,
              },
              Object {
                "callback": [Function],
                "optimistic": true,
                "previousResult": [Function],
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "officeDetails",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "name",
                                },
                                "value": Object {
                                  "block": false,
                                  "kind": "StringValue",
                                  "value": "St Catherines",
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "getOfficeByName",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "location",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "blocks",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "floors",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "name",
                                              },
                                              "selectionSet": undefined,
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 239,
                    "start": 0,
                  },
                },
                "variables": undefined,
              },
            ],
          },
        },
        "version": "2.3.1",
        "watchQuery": [Function],
      }
    }
  >
    <Apollo(Apollo(Apollo(AddRoomNairobi)))
      locations={
        Array [
          Object {
            "__typename": "Location",
            "id": "1",
            "name": "Kampala",
          },
          Object {
            "__typename": "Location",
            "id": "2",
            "name": "Lagos",
          },
          Object {
            "__typename": "Location",
            "id": "3",
            "name": "Nairobi",
          },
        ]
      }
    >
      <Query
        displayName="Apollo(Apollo(Apollo(AddRoomNairobi)))"
        query={
          Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "officeDetails",
                },
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "name",
                          },
                          "value": Object {
                            "block": false,
                            "kind": "StringValue",
                            "value": "St Catherines",
                          },
                        },
                      ],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "getOfficeByName",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "name",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "location",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "blocks",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "floors",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 239,
              "start": 0,
            },
          }
        }
        skip={false}
        warnUnhandledError={true}
      >
        <Apollo(Apollo(AddRoomNairobi))
          locations={
            Array [
              Object {
                "__typename": "Location",
                "id": "1",
                "name": "Kampala",
              },
              Object {
                "__typename": "Location",
                "id": "2",
                "name": "Lagos",
              },
              Object {
                "__typename": "Location",
                "id": "3",
                "name": "Nairobi",
              },
            ]
          }
          officeDetails={
            Object {
              "error": [Error: Network error: No more mocked responses for the query: query officeDetails {
  getOfficeByName(name: "St Catherines") {
    id
    name
    location {
      id
      name
    }
    blocks {
      id
      name
      floors {
        id
        name
      }
    }
  }
}
, variables: {}],
              "fetchMore": [Function],
              "loading": false,
              "networkStatus": 8,
              "refetch": [Function],
              "startPolling": [Function],
              "stopPolling": [Function],
              "subscribeToMore": [Function],
              "updateQuery": [Function],
              "variables": Object {},
            }
          }
        >
          <Query
            displayName="Apollo(Apollo(AddRoomNairobi))"
            query={
              Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": undefined,
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "allRemoteRooms",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "rooms",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "calendarId",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 93,
                  "start": 0,
                },
              }
            }
            skip={false}
            warnUnhandledError={true}
          >
            <Apollo(AddRoomNairobi)
              locations={
                Array [
                  Object {
                    "__typename": "Location",
                    "id": "1",
                    "name": "Kampala",
                  },
                  Object {
                    "__typename": "Location",
                    "id": "2",
                    "name": "Lagos",
                  },
                  Object {
                    "__typename": "Location",
                    "id": "3",
                    "name": "Nairobi",
                  },
                ]
              }
              officeDetails={
                Object {
                  "error": [Error: Network error: No more mocked responses for the query: query officeDetails {
  getOfficeByName(name: "St Catherines") {
    id
    name
    location {
      id
      name
    }
    blocks {
      id
      name
      floors {
        id
        name
      }
    }
  }
}
, variables: {}],
                  "fetchMore": [Function],
                  "loading": false,
                  "networkStatus": 8,
                  "refetch": [Function],
                  "startPolling": [Function],
                  "stopPolling": [Function],
                  "subscribeToMore": [Function],
                  "updateQuery": [Function],
                  "variables": Object {},
                }
              }
              remoteRooms={
                Object {
                  "error": [Error: Network error: No more mocked responses for the query: {
  allRemoteRooms {
    rooms {
      calendarId
      name
    }
  }
}
, variables: {}],
                  "fetchMore": [Function],
                  "loading": false,
                  "networkStatus": 8,
                  "refetch": [Function],
                  "startPolling": [Function],
                  "stopPolling": [Function],
                  "subscribeToMore": [Function],
                  "updateQuery": [Function],
                  "variables": Object {},
                }
              }
            >
              <Mutation
                ignoreResults={true}
                mutation={
                  Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "CreateRoom",
                        },
                        "operation": "mutation",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "roomType",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "roomType",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "roomName",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "floorId",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "roomFloorId",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "capacity",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "roomCapacity",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "calendarId",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "roomCalendar",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "imageUrl",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "roomImageUrl",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "officeId",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "office_id",
                                    },
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "createRoom",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "room",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "roomType",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "capacity",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "imageUrl",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "roomType",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "roomName",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Int",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "roomFloorId",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Int",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "roomCapacity",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "String",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "roomCalendar",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Int",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "office_id",
                              },
                            },
                          },
                          Object {
                            "defaultValue": undefined,
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "String",
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "roomImageUrl",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 430,
                      "start": 0,
                    },
                  }
                }
              >
                <AddRoomNairobi
                  dojoMutation={[Function]}
                  locations={
                    Array [
                      Object {
                        "__typename": "Location",
                        "id": "1",
                        "name": "Kampala",
                      },
                      Object {
                        "__typename": "Location",
                        "id": "2",
                        "name": "Lagos",
                      },
                      Object {
                        "__typename": "Location",
                        "id": "3",
                        "name": "Nairobi",
                      },
                    ]
                  }
                  officeDetails={
                    Object {
                      "error": [Error: Network error: No more mocked responses for the query: query officeDetails {
  getOfficeByName(name: "St Catherines") {
    id
    name
    location {
      id
      name
    }
    blocks {
      id
      name
      floors {
        id
        name
      }
    }
  }
}
, variables: {}],
                      "fetchMore": [Function],
                      "loading": false,
                      "networkStatus": 8,
                      "refetch": [Function],
                      "startPolling": [Function],
                      "stopPolling": [Function],
                      "subscribeToMore": [Function],
                      "updateQuery": [Function],
                      "variables": Object {},
                    }
                  }
                  remoteRooms={
                    Object {
                      "error": [Error: Network error: No more mocked responses for the query: {
  allRemoteRooms {
    rooms {
      calendarId
      name
    }
  }
}
, variables: {}],
                      "fetchMore": [Function],
                      "loading": false,
                      "networkStatus": 8,
                      "refetch": [Function],
                      "startPolling": [Function],
                      "stopPolling": [Function],
                      "subscribeToMore": [Function],
                      "updateQuery": [Function],
                      "variables": Object {},
                    }
                  }
                >
                  <MrmModal
                    buttonText="St Catherines"
                    className="nbo-add-room-modal button addRoomBtn"
                    closeModal={false}
                    handleCloseRequest={[Function]}
                    modalButtonClassName="button"
                    title="ADD ROOM"
                  >
                    <IconButtons
                      btnImage=""
                      buttonText="St Catherines"
                      disabled={false}
                      modalButtonClassName="button"
                      openModal={[Function]}
                    >
                      <button
                        className="button"
                        disabled={false}
                        id="modal-button"
                        onClick={[Function]}
                      >
                        St Catherines
                      </button>
                    </IconButtons>
                    <Modal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="nbo-add-room-modal button addRoomBtn"
                      closeTimeoutMS={0}
                      contentLabel="Parent Modal"
                      isOpen={true}
                      onAfterOpen={[Function]}
                      onRequestClose={[Function]}
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={false}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                        Object {
                          "content": Object {
                            "backgroundColor": "#ffffff",
                            "border": "1px solid #CCCCCC",
                            "borderRadius": "4px",
                            "bottom": "auto",
                            "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                            "fontFamily": "DINPro-Regular",
                            "left": "50%",
                            "outline": "none",
                            "overflow": "auto",
                            "position": "absolute",
                            "right": "auto",
                            "top": "50%",
                            "transform": "translate(-50%, -50%)",
                          },
                        }
                      }
                    >
                      <Portal
                        containerInfo={
                          <div
                            class="ReactModalPortal"
                          >
                            <div
                              aria-modal="true"
                              class="ReactModal__Overlay ReactModal__Overlay--after-open"
                              style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: rgba(255, 255, 255, 0.75);"
                            >
                              <div
                                aria-label="Parent Modal"
                                class="ReactModal__Content ReactModal__Content--after-open nbo-add-room-modal button addRoomBtn"
                                style="font-family: DINPro-Regular; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); border: 1px solid #cccccc; border-radius: 4px; outline: none; box-shadow: 0 2px 40px 10px rgba(185, 180, 180, 0.2); background-color: rgb(255, 255, 255); overflow: auto;"
                                tabindex="-1"
                              >
                                <h2
                                  style="color: rgb(255, 0, 0);"
                                >
                                  ADD ROOM
                                </h2>
                                <form
                                  class="modal-form"
                                >
                                  <div
                                    class="image-select"
                                  >
                                    <div
                                      class="thumbnail"
                                    >
                                      <div
                                        class="placeholder"
                                      />
                                    </div>
                                    <div
                                      class="select-button"
                                    >
                                      <div>
                                        Upload a thumbnail
                                      </div>
                                      <button
                                        class=""
                                        data-react-toolbox="button"
                                        id="upload_widget_opener"
                                        type="button"
                                      >
                                        Select Image
                                      </button>
                                      <div
                                        class="invisible-input"
                                      >
                                        <input
                                          name="selectImage"
                                          type="file"
                                        />
                                      </div>
                                    </div>
                                  </div>
                                  <div
                                    class="form-inputs"
                                  >
                                    <div
                                      class="input1"
                                    >
                                      <label
                                        for="remoteRoomName"
                                      >
                                        Select Google Calendar Room
                                        <select
                                          class=" default-select"
                                          id="remoteRoomName"
                                          name="remoteRoomName"
                                        >
                                          <option
                                            selected=""
                                            value=""
                                          >
                                            Select Google Calendar Room 
                                          </option>
                                          0
                                        </select>
                                      </label>
                                    </div>
                                    <div
                                      class="input1"
                                    >
                                      <label
                                        for="roomName"
                                      >
                                        Room Name
                                        <input
                                          class="mrm-input epic-tower-input"
                                          id="roomName"
                                          name="roomName"
                                          pattern="^[a-zA-Z]+(([' .-][a-zA-Z ])?[a-zA-Z]*)*$"
                                          placeholder="Enter room name"
                                          required=""
                                          title="Name cannot be numbers or any special characters"
                                          type="text"
                                          value=""
                                        />
                                      </label>
                                    </div>
                                    <div
                                      class="input1"
                                    >
                                      <label
                                        for="roomCapacity"
                                      >
                                        Room Capacity
                                        <input
                                          class="mrm-input default-input"
                                          id="roomCapacity"
                                          min="1"
                                          name="roomCapacity"
                                          placeholder="1"
                                          required=""
                                          type="number"
                                          value="0"
                                        />
                                        <div
                                          class="controls "
                                        >
                                          <button
                                            class="control up"
                                            name="up"
                                          >
                                            <img
                                              alt="up"
                                              name="up"
                                              src="https://firebasestorage.googleapis.com/v0/b/learning-map-app.appspot.com/o/MrmFrontImages%2Fchevron.svg?alt=media&token=54c2d83a-0834-44dd-8195-53b5ac74e2ff"
                                            />
                                          </button>
                                          <button
                                            class="control down"
                                            name="down"
                                          >
                                            <img
                                              alt="down"
                                              name="down"
                                              src="https://firebasestorage.googleapis.com/v0/b/learning-map-app.appspot.com/o/MrmFrontImages%2Fchevron.svg?alt=media&token=54c2d83a-0834-44dd-8195-53b5ac74e2ff"
                                            />
                                          </button>
                                        </div>
                                      </label>
                                    </div>
                                    <div
                                      class="input1"
                                    >
                                      <label
                                        for="officeBlock"
                                      >
                                        Select Block
                                        <select
                                          class="default-select"
                                          id="officeBlock"
                                          name="officeBlock"
                                          required=""
                                        >
                                          <option
                                            selected=""
                                            value=""
                                          >
                                            Select block 
                                          </option>
                                          0
                                        </select>
                                      </label>
                                    </div>
                                    <div
                                      class="input-wrapper"
                                    >
                                      <label
                                        for="officeFloor"
                                      >
                                        Select Floor
                                        <select
                                          class="default-select"
                                          id="officeFloor"
                                          name="officeFloor"
                                          required=""
                                        >
                                          <option
                                            selected=""
                                            value=""
                                          >
                                            Select floor 
                                          </option>
                                          0
                                        </select>
                                      </label>
                                    </div>
                                  </div>
                                  <div
                                    class="form-action-buttons"
                                  >
                                    <button
                                      class="null btn-primary"
                                    >
                                      <span>
                                        CANCEL
                                      </span>
                                    </button>
                                    <button
                                      class="main-button btn-secondary"
                                    >
                                      <span>
                                        ADD ROOM
                                      </span>
                                    </button>
                                  </div>
                                </form>
                              </div>
                            </div>
                          </div>
                        }
                      >
                        <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="nbo-add-room-modal button addRoomBtn"
                          closeTimeoutMS={0}
                          contentLabel="Parent Modal"
                          defaultStyles={
                            Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            }
                          }
                          isOpen={true}
                          onAfterOpen={[Function]}
                          onRequestClose={[Function]}
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={false}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                            Object {
                              "content": Object {
                                "backgroundColor": "#ffffff",
                                "border": "1px solid #CCCCCC",
                                "borderRadius": "4px",
                                "bottom": "auto",
                                "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                "fontFamily": "DINPro-Regular",
                                "left": "50%",
                                "outline": "none",
                                "overflow": "auto",
                                "position": "absolute",
                                "right": "auto",
                                "top": "50%",
                                "transform": "translate(-50%, -50%)",
                              },
                            }
                          }
                        >
                          <div
                            aria-modal="true"
                            className="ReactModal__Overlay ReactModal__Overlay--after-open"
                            onClick={[Function]}
                            onMouseDown={[Function]}
                            style={
                              Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <div
                              aria-label="Parent Modal"
                              className="ReactModal__Content ReactModal__Content--after-open nbo-add-room-modal button addRoomBtn"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "border": "1px solid #CCCCCC",
                                  "borderRadius": "4px",
                                  "bottom": "auto",
                                  "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                                  "fontFamily": "DINPro-Regular",
                                  "left": "50%",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "position": "absolute",
                                  "right": "auto",
                                  "top": "50%",
                                  "transform": "translate(-50%, -50%)",
                                }
                              }
                              tabIndex="-1"
                            >
                              <h2>
                                ADD ROOM
                              </h2>
                              <form
                                className="modal-form"
                                onSubmit={[Function]}
                              >
                                <SelectImage
                                  imageUrl=""
                                  thumbnailName="Upload a thumbnail"
                                  updateThumbnailState={[Function]}
                                >
                                  <div
                                    className="image-select"
                                  >
                                    <div
                                      className="thumbnail"
                                    >
                                      <div
                                        className="placeholder"
                                      />
                                    </div>
                                    <div
                                      className="select-button"
                                    >
                                      <div>
                                        Upload a thumbnail
                                      </div>
                                      <ThemedThemed
                                        composeTheme="deeply"
                                        disabled={false}
                                        id="upload_widget_opener"
                                        label="Select Image"
                                        mapThemrProps={[Function]}
                                        ripple={true}
                                        rippleCentered={false}
                                        rippleClassName=""
                                        rippleMultiple={true}
                                        rippleSpread={2}
                                      >
                                        <ThemedRippledComponent
                                          composeTheme="deeply"
                                          disabled={false}
                                          id="upload_widget_opener"
                                          label="Select Image"
                                          mapThemrProps={[Function]}
                                          ripple={true}
                                          rippleCentered={false}
                                          rippleClassName=""
                                          rippleMultiple={true}
                                          rippleSpread={2}
                                          theme={Object {}}
                                        >
                                          <RippledComponent
                                            disabled={false}
                                            id="upload_widget_opener"
                                            label="Select Image"
                                            ripple={true}
                                            rippleCentered={false}
                                            rippleClassName=""
                                            rippleMultiple={true}
                                            rippleSpread={2}
                                            theme={Object {}}
                                          >
                                            <Button
                                              accent={false}
                                              className=""
                                              disabled={false}
                                              flat={false}
                                              floating={false}
                                              id="upload_widget_opener"
                                              label="Select Image"
                                              mini={false}
                                              neutral={true}
                                              onMouseDown={[Function]}
                                              onTouchStart={[Function]}
                                              primary={false}
                                              raised={false}
                                              theme={Object {}}
                                              type="button"
                                            >
                                              <button
                                                className=""
                                                data-react-toolbox="button"
                                                disabled={false}
                                                id="upload_widget_opener"
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchStart={[Function]}
                                                type="button"
                                              >
                                                Select Image
                                              </button>
                                            </Button>
                                          </RippledComponent>
                                        </ThemedRippledComponent>
                                      </ThemedThemed>
                                      <div
                                        className="invisible-input"
                                      >
                                        <input
                                          name="selectImage"
                                          onChange={[Function]}
                                          type="file"
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </SelectImage>
                                <NairobiRoomInputs
                                  allRemoteRooms={Array []}
                                  blockOptions={Array []}
                                  floorOptions={Array []}
                                  handleInputChange={[Function]}
                                  officeBlock=""
                                  officeFloor=""
                                  remoteRoomName=""
                                  roomCapacity={0}
                                  roomName=""
                                >
                                  <div
                                    className="form-inputs"
                                  >
                                    <SelectInput
                                      id="remoteRoomName"
                                      isValue={false}
                                      labelText="Select Google Calendar Room"
                                      name="remoteRoomName"
                                      onChange={[Function]}
                                      options={Array []}
                                      placeholder="Select Google Calendar Room"
                                      placeholderValue=""
                                      required={false}
                                      selectInputClassName=" default-select"
                                      value=""
                                      wrapperClassName="input1"
                                    >
                                      <div
                                        className="input1"
                                      >
                                        <label
                                          htmlFor="remoteRoomName"
                                        >
                                          Select Google Calendar Room
                                          <select
                                            className=" default-select"
                                            defaultValue=""
                                            id="remoteRoomName"
                                            name="remoteRoomName"
                                            onChange={[Function]}
                                            required={false}
                                          >
                                            <option
                                              value=""
                                            >
                                              Select Google Calendar Room
                                               
                                            </option>
                                            0
                                          </select>
                                        </label>
                                      </div>
                                    </SelectInput>
                                    <Input
                                      controlsClass=""
                                      id="roomName"
                                      inputClass="mrm-input epic-tower-input"
                                      labelClass="input1"
                                      labelName="Room Name"
                                      name="roomName"
                                      onChange={[Function]}
                                      pattern="^[a-zA-Z]+(([' .-][a-zA-Z ])?[a-zA-Z]*)*$"
                                      placeholder="Enter room name"
                                      required={true}
                                      title="Name cannot be numbers or any special characters"
                                      type="text"
                                      value=""
                                    >
                                      <div
                                        className="input1"
                                      >
                                        <label
                                          htmlFor="roomName"
                                        >
                                          Room Name
                                          <input
                                            className="mrm-input epic-tower-input"
                                            defaultValue=""
                                            id="roomName"
                                            name="roomName"
                                            onChange={[Function]}
                                            pattern="^[a-zA-Z]+(([' .-][a-zA-Z ])?[a-zA-Z]*)*$"
                                            placeholder="Enter room name"
                                            required={true}
                                            title="Name cannot be numbers or any special characters"
                                            type="text"
                                          />
                                        </label>
                                      </div>
                                    </Input>
                                    <Input
                                      controlsClass=""
                                      id="roomCapacity"
                                      inputClass="mrm-input default-input"
                                      labelClass="input1"
                                      labelName="Room Capacity"
                                      min="1"
                                      name="roomCapacity"
                                      onChange={[Function]}
                                      placeholder="1"
                                      required={true}
                                      type="number"
                                      value={0}
                                    >
                                      <div
                                        className="input1"
                                      >
                                        <label
                                          htmlFor="roomCapacity"
                                        >
                                          Room Capacity
                                          <input
                                            className="mrm-input default-input"
                                            defaultValue={0}
                                            id="roomCapacity"
                                            min="1"
                                            name="roomCapacity"
                                            onChange={[Function]}
                                            placeholder="1"
                                            required={true}
                                            type="number"
                                          />
                                          <Controls
                                            controlsClass=""
                                            handleIncrement={[Function]}
                                          >
                                            <div
                                              className="controls "
                                            >
                                              <button
                                                className="control up"
                                                name="up"
                                                onClick={[Function]}
                                              >
                                                <img
                                                  alt="up"
                                                  name="up"
                                                  src="https://firebasestorage.googleapis.com/v0/b/learning-map-app.appspot.com/o/MrmFrontImages%2Fchevron.svg?alt=media&token=54c2d83a-0834-44dd-8195-53b5ac74e2ff"
                                                />
                                              </button>
                                              <button
                                                className="control down"
                                                name="down"
                                                onClick={[Function]}
                                              >
                                                <img
                                                  alt="down"
                                                  name="down"
                                                  src="https://firebasestorage.googleapis.com/v0/b/learning-map-app.appspot.com/o/MrmFrontImages%2Fchevron.svg?alt=media&token=54c2d83a-0834-44dd-8195-53b5ac74e2ff"
                                                />
                                              </button>
                                            </div>
                                          </Controls>
                                        </label>
                                      </div>
                                    </Input>
                                    <SelectInput
                                      id="officeBlock"
                                      isValue={false}
                                      key=""
                                      labelText="Select Block"
                                      name="officeBlock"
                                      onChange={[Function]}
                                      options={Array []}
                                      placeholder="Select block"
                                      placeholderValue=""
                                      required={true}
                                      selectInputClassName="default-select"
                                      value=""
                                      wrapperClassName="input1"
                                    >
                                      <div
                                        className="input1"
                                      >
                                        <label
                                          htmlFor="officeBlock"
                                        >
                                          Select Block
                                          <select
                                            className="default-select"
                                            defaultValue=""
                                            id="officeBlock"
                                            name="officeBlock"
                                            onChange={[Function]}
                                            required={true}
                                          >
                                            <option
                                              value=""
                                            >
                                              Select block
                                               
                                            </option>
                                            0
                                          </select>
                                        </label>
                                      </div>
                                    </SelectInput>
                                    <SelectInput
                                      id="officeFloor"
                                      isValue={false}
                                      labelText="Select Floor"
                                      name="officeFloor"
                                      onChange={[Function]}
                                      options={Array []}
                                      placeholder="Select floor"
                                      placeholderValue=""
                                      required={true}
                                      selectInputClassName="default-select"
                                      value=""
                                      wrapperClassName="input-wrapper"
                                    >
                                      <div
                                        className="input-wrapper"
                                      >
                                        <label
                                          htmlFor="officeFloor"
                                        >
                                          Select Floor
                                          <select
                                            className="default-select"
                                            defaultValue=""
                                            id="officeFloor"
                                            name="officeFloor"
                                            onChange={[Function]}
                                            required={true}
                                          >
                                            <option
                                              value=""
                                            >
                                              Select floor
                                               
                                            </option>
                                            0
                                          </select>
                                        </label>
                                      </div>
                                    </SelectInput>
                                  </div>
                                </NairobiRoomInputs>
                                <ActionButtons
                                  actionButtonText="ADD ROOM"
                                  cancelButtonText="CANCEL"
                                  isLoading={false}
                                  onClickCancel={[Function]}
                                  onClickSubmit={[Function]}
                                  showActionButton={true}
                                  withCancel={true}
                                >
                                  <div
                                    className="form-action-buttons"
                                  >
                                    <Button
                                      classProp={null}
                                      handleClick={[Function]}
                                      isDisabled={false}
                                      title="CANCEL"
                                      type={1}
                                    >
                                      <button
                                        className="null btn-primary"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <span>
                                          CANCEL
                                        </span>
                                      </button>
                                    </Button>
                                    <Button
                                      classProp="main-button"
                                      handleClick={[Function]}
                                      isDisabled={false}
                                      title="ADD ROOM"
                                      type={2}
                                    >
                                      <button
                                        className="main-button btn-secondary"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <span>
                                          ADD ROOM
                                        </span>
                                      </button>
                                    </Button>
                                  </div>
                                </ActionButtons>
                              </form>
                            </div>
                          </div>
                        </ModalPortal>
                      </Portal>
                    </Modal>
                  </MrmModal>
                </AddRoomNairobi>
              </Mutation>
            </Apollo(AddRoomNairobi)>
          </Query>
        </Apollo(Apollo(AddRoomNairobi))>
      </Query>
    </Apollo(Apollo(Apollo(AddRoomNairobi)))>
  </ApolloProvider>
</MockedProvider>
`;
