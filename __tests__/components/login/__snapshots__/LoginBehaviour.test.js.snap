// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login component should redirect to another page when a token is present in localstorage 1`] = `
<Login
  history={
    Object {
      "push": [MockFunction] {
        "calls": Array [
          Array [
            "/main_page",
          ],
          Array [
            "/main_page",
          ],
          Array [
            undefined,
          ],
        ],
      },
    }
  }
  location={
    Object {
      "pathname": "/",
    }
  }
>
  <LoginModal
    closeModal={true}
    handleCloseModal={[Function]}
    openModal={false}
  >
    <MrmModal
      buttonText=""
      className="login-modal"
      closeModal={true}
      handleCloseRequest={[Function]}
      modalButtonClassName="button"
      openModal={false}
      showBtn={false}
      title={null}
    >
      <Modal
        ariaHideApp={false}
        bodyOpenClassName="ReactModal__Body--open"
        className="login-modal"
        closeTimeoutMS={0}
        contentLabel="Parent Modal"
        isOpen={false}
        onAfterOpen={[Function]}
        onRequestClose={[Function]}
        parentSelector={[Function]}
        portalClassName="ReactModalPortal"
        shouldCloseOnEsc={true}
        shouldCloseOnOverlayClick={false}
        shouldFocusAfterRender={true}
        shouldReturnFocusAfterClose={true}
        style={
          Object {
            "content": Object {
              "backgroundColor": "#ffffff",
              "border": "1px solid #CCCCCC",
              "borderRadius": "15px",
              "bottom": "auto",
              "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
              "fontFamily": "DINPro-Regular",
              "left": "50%",
              "outline": "none",
              "overflow": "auto",
              "position": "absolute",
              "right": "auto",
              "top": "50%",
              "transform": "translate(-50%, -50%)",
            },
          }
        }
      >
        <Portal
          containerInfo={
            <div
              class="ReactModalPortal"
            />
          }
        >
          <ModalPortal
            ariaHideApp={false}
            bodyOpenClassName="ReactModal__Body--open"
            className="login-modal"
            closeTimeoutMS={0}
            contentLabel="Parent Modal"
            defaultStyles={
              Object {
                "content": Object {
                  "WebkitOverflowScrolling": "touch",
                  "background": "#fff",
                  "border": "1px solid #ccc",
                  "borderRadius": "4px",
                  "bottom": "40px",
                  "left": "40px",
                  "outline": "none",
                  "overflow": "auto",
                  "padding": "20px",
                  "position": "absolute",
                  "right": "40px",
                  "top": "40px",
                },
                "overlay": Object {
                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                },
              }
            }
            isOpen={false}
            onAfterOpen={[Function]}
            onRequestClose={[Function]}
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={false}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
            style={
              Object {
                "content": Object {
                  "backgroundColor": "#ffffff",
                  "border": "1px solid #CCCCCC",
                  "borderRadius": "15px",
                  "bottom": "auto",
                  "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                  "fontFamily": "DINPro-Regular",
                  "left": "50%",
                  "outline": "none",
                  "overflow": "auto",
                  "position": "absolute",
                  "right": "auto",
                  "top": "50%",
                  "transform": "translate(-50%, -50%)",
                },
              }
            }
          />
        </Portal>
      </Modal>
    </MrmModal>
  </LoginModal>
  <header
    className="landing-page-header"
  >
    <div
      className="header-logo"
    >
      <img
        alt="logo"
        src="test-file-stub"
      />
    </div>
    <div
      className="login-btn"
    >
      <Button
        classProp="trigger-login-modal"
        handleClick={[Function]}
        id="Next"
        isDisabled={false}
        title="Login"
        type={1}
      >
        <button
          className="trigger-login-modal btn-primary"
          disabled={false}
          id="Next"
          onClick={[Function]}
        >
          <span>
            Login
          </span>
        </button>
      </Button>
    </div>
  </header>
  <CustomCarousel
    autoplay={true}
    legendPosition="legend-center"
  >
    <Carousel
      autoPlay={true}
      axis="horizontal"
      centerMode={false}
      centerSlidePercentage={80}
      dynamicHeight={false}
      emulateTouch={false}
      infiniteLoop={true}
      interval={3000}
      labels={
        Object {
          "item": "slide item",
          "leftArrow": "previous slide / item",
          "rightArrow": "next slide / item",
        }
      }
      onChange={[Function]}
      onClickItem={[Function]}
      onClickThumb={[Function]}
      onSwipeEnd={[Function]}
      onSwipeMove={[Function]}
      onSwipeStart={[Function]}
      selectedItem={0}
      showArrows={false}
      showIndicators={true}
      showStatus={false}
      showThumbs={true}
      statusFormatter={[Function]}
      stopOnHover={false}
      swipeScrollTolerance={5}
      swipeable={true}
      transitionTime={2000}
      useKeyboardArrows={false}
      verticalSwipe="standard"
      width="100%"
    >
      <div>
        <div
          className="carousel carousel-slider"
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <button
            aria-label="previous slide / item"
            className="control-arrow control-prev control-disabled"
            onClick={[Function]}
            type="button"
          />
          <div
            className="slider-wrapper axis-horizontal"
            style={Object {}}
          >
            <ReactSwipe
              allowMouseEvents={false}
              className="slider animated"
              onSwipeDown={[Function]}
              onSwipeEnd={[Function]}
              onSwipeLeft={[Function]}
              onSwipeMove={[Function]}
              onSwipeRight={[Function]}
              onSwipeStart={[Function]}
              onSwipeUp={[Function]}
              selectedItem={0}
              style={
                Object {
                  "MozTransform": "translate3d(-100%,0,0)",
                  "MozTransitionDuration": "2000ms",
                  "MsTransform": "translate3d(-100%,0,0)",
                  "MsTransitionDuration": "2000ms",
                  "OTransform": "translate3d(-100%,0,0)",
                  "OTransitionDuration": "2000ms",
                  "WebkitTransform": "translate3d(-100%,0,0)",
                  "WebkitTransitionDuration": "2000ms",
                  "msTransform": "translate3d(-100%,0,0)",
                  "msTransitionDuration": "2000ms",
                  "transform": "translate3d(-100%,0,0)",
                  "transitionDuration": "2000ms",
                }
              }
              tagName="ul"
              tolerance={5}
            >
              <ul
                className="slider animated"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "MozTransform": "translate3d(-100%,0,0)",
                    "MozTransitionDuration": "2000ms",
                    "MsTransform": "translate3d(-100%,0,0)",
                    "MsTransitionDuration": "2000ms",
                    "OTransform": "translate3d(-100%,0,0)",
                    "OTransitionDuration": "2000ms",
                    "WebkitTransform": "translate3d(-100%,0,0)",
                    "WebkitTransitionDuration": "2000ms",
                    "msTransform": "translate3d(-100%,0,0)",
                    "msTransitionDuration": "2000ms",
                    "transform": "translate3d(-100%,0,0)",
                    "transitionDuration": "2000ms",
                  }
                }
              >
                <li
                  className="slide"
                  key="itemKey3clone/.$Banku Meeting Room, Andela Lagos"
                  onClick={[Function]}
                >
                  <div
                    key="Banku Meeting Room, Andela Lagos"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Banku Meeting Room, Andela Lagos
                    </p>
                    <img
                      alt="Banku Meeting Room, Andela Lagos"
                      src="test-file-stub"
                    />
                  </div>
                </li>
                <li
                  className="slide selected"
                  key="itemKey0/.$Safari Meeting Room, Andela New York"
                  onClick={[Function]}
                >
                  <div
                    key="Safari Meeting Room, Andela New York"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Safari Meeting Room, Andela New York
                    </p>
                    <img
                      alt="Safari Meeting Room, Andela New York"
                      src="test-file-stub"
                    />
                  </div>
                </li>
                <li
                  className="slide"
                  key="itemKey1/.$Cognitio Meeting Room, Andela Lagos"
                  onClick={[Function]}
                >
                  <div
                    key="Cognitio Meeting Room, Andela Lagos"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Cognitio Meeting Room, Andela Lagos
                    </p>
                    <img
                      alt="Cognitio Meeting Room, Andela Lagos"
                      src="test-file-stub"
                    />
                  </div>
                </li>
                <li
                  className="slide"
                  key="itemKey2/.$Entebbe Meeting Room, Andela Kampala"
                  onClick={[Function]}
                >
                  <div
                    key="Entebbe Meeting Room, Andela Kampala"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Entebbe Meeting Room, Andela Kampala
                    </p>
                    <img
                      alt="Entebbe Meeting Room, Andela Kampala"
                      src="test-file-stub"
                    />
                  </div>
                </li>
                <li
                  className="slide"
                  key="itemKey3/.$Banku Meeting Room, Andela Lagos"
                  onClick={[Function]}
                >
                  <div
                    key="Banku Meeting Room, Andela Lagos"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Banku Meeting Room, Andela Lagos
                    </p>
                    <img
                      alt="Banku Meeting Room, Andela Lagos"
                      src="test-file-stub"
                    />
                  </div>
                </li>
                <li
                  className="slide selected"
                  key="itemKey0clone/.$Safari Meeting Room, Andela New York"
                  onClick={[Function]}
                >
                  <div
                    key="Safari Meeting Room, Andela New York"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Safari Meeting Room, Andela New York
                    </p>
                    <img
                      alt="Safari Meeting Room, Andela New York"
                      src="test-file-stub"
                    />
                  </div>
                </li>
              </ul>
            </ReactSwipe>
          </div>
          <button
            aria-label="next slide / item"
            className="control-arrow control-next control-disabled"
            onClick={[Function]}
            type="button"
          />
          <ul
            className="control-dots"
          >
            <li
              aria-label="slide item 1"
              className="dot selected"
              key="0/.$Safari Meeting Room, Andela New York"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="button"
              tabIndex={0}
              value={0}
            />
            <li
              aria-label="slide item 2"
              className="dot"
              key="1/.$Cognitio Meeting Room, Andela Lagos"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="button"
              tabIndex={0}
              value={1}
            />
            <li
              aria-label="slide item 3"
              className="dot"
              key="2/.$Entebbe Meeting Room, Andela Kampala"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="button"
              tabIndex={0}
              value={2}
            />
            <li
              aria-label="slide item 4"
              className="dot"
              key="3/.$Banku Meeting Room, Andela Lagos"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="button"
              tabIndex={0}
              value={3}
            />
          </ul>
        </div>
        <Thumbs
          axis="horizontal"
          labels={
            Object {
              "item": "slide item",
              "leftArrow": "previous slide / item",
              "rightArrow": "next slide / item",
            }
          }
          onSelectItem={[Function]}
          selectedItem={0}
          transitionTime={2000}
        >
          <div
            className="carousel"
          >
            <div
              className="thumbs-wrapper axis-vertical"
            >
              <button
                aria-label="previous slide / item"
                className="control-arrow control-prev control-disabled"
                onClick={[Function]}
                type="button"
              />
              <ReactSwipe
                allowMouseEvents={false}
                className="thumbs animated"
                onSwipeDown={[Function]}
                onSwipeEnd={[Function]}
                onSwipeLeft={[Function]}
                onSwipeMove={[Function]}
                onSwipeRight={[Function]}
                onSwipeStart={[Function]}
                onSwipeUp={[Function]}
                selectedItem={0}
                style={
                  Object {
                    "MozTransform": "translate3d(NaNpx,0,0)",
                    "MozTransitionDuration": "2000ms",
                    "MsTransform": "translate3d(NaNpx,0,0)",
                    "MsTransitionDuration": "2000ms",
                    "OTransform": "translate3d(NaNpx,0,0)",
                    "OTransitionDuration": "2000ms",
                    "WebkitTransform": "translate3d(NaNpx,0,0)",
                    "WebkitTransitionDuration": "2000ms",
                    "msTransform": "translate3d(NaNpx,0,0)",
                    "msTransitionDuration": "2000ms",
                    "transform": "translate3d(NaNpx,0,0)",
                    "transitionDuration": "2000ms",
                  }
                }
                tagName="ul"
                tolerance={0}
              >
                <ul
                  className="thumbs animated"
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchStart={[Function]}
                  style={
                    Object {
                      "MozTransform": "translate3d(NaNpx,0,0)",
                      "MozTransitionDuration": "2000ms",
                      "MsTransform": "translate3d(NaNpx,0,0)",
                      "MsTransitionDuration": "2000ms",
                      "OTransform": "translate3d(NaNpx,0,0)",
                      "OTransitionDuration": "2000ms",
                      "WebkitTransform": "translate3d(NaNpx,0,0)",
                      "WebkitTransitionDuration": "2000ms",
                      "msTransform": "translate3d(NaNpx,0,0)",
                      "msTransitionDuration": "2000ms",
                      "transform": "translate3d(NaNpx,0,0)",
                      "transitionDuration": "2000ms",
                    }
                  }
                >
                  <li
                    aria-label="slide item 1"
                    className="thumb"
                    key="0"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="button"
                    tabIndex={0}
                  >
                    <img
                      alt="Safari Meeting Room, Andela New York"
                      key=".1/.$Safari Meeting Room, Andela New York"
                      onLoad={[Function]}
                      src="test-file-stub"
                    />
                  </li>
                  <li
                    aria-label="slide item 2"
                    className="thumb"
                    key="1"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="button"
                    tabIndex={0}
                  >
                    <img
                      alt="Cognitio Meeting Room, Andela Lagos"
                      key=".1/.$Cognitio Meeting Room, Andela Lagos"
                      src="test-file-stub"
                    />
                  </li>
                  <li
                    aria-label="slide item 3"
                    className="thumb"
                    key="2"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="button"
                    tabIndex={0}
                  >
                    <img
                      alt="Entebbe Meeting Room, Andela Kampala"
                      key=".1/.$Entebbe Meeting Room, Andela Kampala"
                      src="test-file-stub"
                    />
                  </li>
                  <li
                    aria-label="slide item 4"
                    className="thumb"
                    key="3"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="button"
                    tabIndex={0}
                  >
                    <img
                      alt="Banku Meeting Room, Andela Lagos"
                      key=".1/.$Banku Meeting Room, Andela Lagos"
                      src="test-file-stub"
                    />
                  </li>
                </ul>
              </ReactSwipe>
              <button
                aria-label="next slide / item"
                className="control-arrow control-next control-disabled"
                onClick={[Function]}
                type="button"
              />
            </div>
          </div>
        </Thumbs>
      </div>
    </Carousel>
  </CustomCarousel>
</Login>
`;

exports[`Login component should redirect to another page when a user successfully logs in and his token decoded 1`] = `
<Login
  history={
    Object {
      "push": [MockFunction] {
        "calls": Array [
          Array [
            "/main_page",
          ],
        ],
      },
    }
  }
  location={
    Object {
      "pathname": "/",
    }
  }
>
  <LoginModal
    closeModal={true}
    handleCloseModal={[Function]}
    openModal={false}
  >
    <MrmModal
      buttonText=""
      className="login-modal"
      closeModal={true}
      handleCloseRequest={[Function]}
      modalButtonClassName="button"
      openModal={false}
      showBtn={false}
      title={null}
    >
      <Modal
        ariaHideApp={false}
        bodyOpenClassName="ReactModal__Body--open"
        className="login-modal"
        closeTimeoutMS={0}
        contentLabel="Parent Modal"
        isOpen={false}
        onAfterOpen={[Function]}
        onRequestClose={[Function]}
        parentSelector={[Function]}
        portalClassName="ReactModalPortal"
        shouldCloseOnEsc={true}
        shouldCloseOnOverlayClick={false}
        shouldFocusAfterRender={true}
        shouldReturnFocusAfterClose={true}
        style={
          Object {
            "content": Object {
              "backgroundColor": "#ffffff",
              "border": "1px solid #CCCCCC",
              "borderRadius": "15px",
              "bottom": "auto",
              "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
              "fontFamily": "DINPro-Regular",
              "left": "50%",
              "outline": "none",
              "overflow": "auto",
              "position": "absolute",
              "right": "auto",
              "top": "50%",
              "transform": "translate(-50%, -50%)",
            },
          }
        }
      >
        <Portal
          containerInfo={
            <div
              class="ReactModalPortal"
            />
          }
        >
          <ModalPortal
            ariaHideApp={false}
            bodyOpenClassName="ReactModal__Body--open"
            className="login-modal"
            closeTimeoutMS={0}
            contentLabel="Parent Modal"
            defaultStyles={
              Object {
                "content": Object {
                  "WebkitOverflowScrolling": "touch",
                  "background": "#fff",
                  "border": "1px solid #ccc",
                  "borderRadius": "4px",
                  "bottom": "40px",
                  "left": "40px",
                  "outline": "none",
                  "overflow": "auto",
                  "padding": "20px",
                  "position": "absolute",
                  "right": "40px",
                  "top": "40px",
                },
                "overlay": Object {
                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                },
              }
            }
            isOpen={false}
            onAfterOpen={[Function]}
            onRequestClose={[Function]}
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={false}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
            style={
              Object {
                "content": Object {
                  "backgroundColor": "#ffffff",
                  "border": "1px solid #CCCCCC",
                  "borderRadius": "15px",
                  "bottom": "auto",
                  "boxShadow": "0 2px 40px 10px rgba(185, 180, 180, 0.2)",
                  "fontFamily": "DINPro-Regular",
                  "left": "50%",
                  "outline": "none",
                  "overflow": "auto",
                  "position": "absolute",
                  "right": "auto",
                  "top": "50%",
                  "transform": "translate(-50%, -50%)",
                },
              }
            }
          />
        </Portal>
      </Modal>
    </MrmModal>
  </LoginModal>
  <header
    className="landing-page-header"
  >
    <div
      className="header-logo"
    >
      <img
        alt="logo"
        src="test-file-stub"
      />
    </div>
    <div
      className="login-btn"
    >
      <Button
        classProp="trigger-login-modal"
        handleClick={[Function]}
        id="Next"
        isDisabled={false}
        title="Login"
        type={1}
      >
        <button
          className="trigger-login-modal btn-primary"
          disabled={false}
          id="Next"
          onClick={[Function]}
        >
          <span>
            Login
          </span>
        </button>
      </Button>
    </div>
  </header>
  <CustomCarousel
    autoplay={true}
    legendPosition="legend-center"
  >
    <Carousel
      autoPlay={true}
      axis="horizontal"
      centerMode={false}
      centerSlidePercentage={80}
      dynamicHeight={false}
      emulateTouch={false}
      infiniteLoop={true}
      interval={3000}
      labels={
        Object {
          "item": "slide item",
          "leftArrow": "previous slide / item",
          "rightArrow": "next slide / item",
        }
      }
      onChange={[Function]}
      onClickItem={[Function]}
      onClickThumb={[Function]}
      onSwipeEnd={[Function]}
      onSwipeMove={[Function]}
      onSwipeStart={[Function]}
      selectedItem={0}
      showArrows={false}
      showIndicators={true}
      showStatus={false}
      showThumbs={true}
      statusFormatter={[Function]}
      stopOnHover={false}
      swipeScrollTolerance={5}
      swipeable={true}
      transitionTime={2000}
      useKeyboardArrows={false}
      verticalSwipe="standard"
      width="100%"
    >
      <div>
        <div
          className="carousel carousel-slider"
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <button
            aria-label="previous slide / item"
            className="control-arrow control-prev control-disabled"
            onClick={[Function]}
            type="button"
          />
          <div
            className="slider-wrapper axis-horizontal"
            style={Object {}}
          >
            <ReactSwipe
              allowMouseEvents={false}
              className="slider animated"
              onSwipeDown={[Function]}
              onSwipeEnd={[Function]}
              onSwipeLeft={[Function]}
              onSwipeMove={[Function]}
              onSwipeRight={[Function]}
              onSwipeStart={[Function]}
              onSwipeUp={[Function]}
              selectedItem={0}
              style={
                Object {
                  "MozTransform": "translate3d(-100%,0,0)",
                  "MozTransitionDuration": "2000ms",
                  "MsTransform": "translate3d(-100%,0,0)",
                  "MsTransitionDuration": "2000ms",
                  "OTransform": "translate3d(-100%,0,0)",
                  "OTransitionDuration": "2000ms",
                  "WebkitTransform": "translate3d(-100%,0,0)",
                  "WebkitTransitionDuration": "2000ms",
                  "msTransform": "translate3d(-100%,0,0)",
                  "msTransitionDuration": "2000ms",
                  "transform": "translate3d(-100%,0,0)",
                  "transitionDuration": "2000ms",
                }
              }
              tagName="ul"
              tolerance={5}
            >
              <ul
                className="slider animated"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "MozTransform": "translate3d(-100%,0,0)",
                    "MozTransitionDuration": "2000ms",
                    "MsTransform": "translate3d(-100%,0,0)",
                    "MsTransitionDuration": "2000ms",
                    "OTransform": "translate3d(-100%,0,0)",
                    "OTransitionDuration": "2000ms",
                    "WebkitTransform": "translate3d(-100%,0,0)",
                    "WebkitTransitionDuration": "2000ms",
                    "msTransform": "translate3d(-100%,0,0)",
                    "msTransitionDuration": "2000ms",
                    "transform": "translate3d(-100%,0,0)",
                    "transitionDuration": "2000ms",
                  }
                }
              >
                <li
                  className="slide"
                  key="itemKey3clone/.$Banku Meeting Room, Andela Lagos"
                  onClick={[Function]}
                >
                  <div
                    key="Banku Meeting Room, Andela Lagos"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Banku Meeting Room, Andela Lagos
                    </p>
                    <img
                      alt="Banku Meeting Room, Andela Lagos"
                      src="test-file-stub"
                    />
                  </div>
                </li>
                <li
                  className="slide selected"
                  key="itemKey0/.$Safari Meeting Room, Andela New York"
                  onClick={[Function]}
                >
                  <div
                    key="Safari Meeting Room, Andela New York"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Safari Meeting Room, Andela New York
                    </p>
                    <img
                      alt="Safari Meeting Room, Andela New York"
                      src="test-file-stub"
                    />
                  </div>
                </li>
                <li
                  className="slide"
                  key="itemKey1/.$Cognitio Meeting Room, Andela Lagos"
                  onClick={[Function]}
                >
                  <div
                    key="Cognitio Meeting Room, Andela Lagos"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Cognitio Meeting Room, Andela Lagos
                    </p>
                    <img
                      alt="Cognitio Meeting Room, Andela Lagos"
                      src="test-file-stub"
                    />
                  </div>
                </li>
                <li
                  className="slide"
                  key="itemKey2/.$Entebbe Meeting Room, Andela Kampala"
                  onClick={[Function]}
                >
                  <div
                    key="Entebbe Meeting Room, Andela Kampala"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Entebbe Meeting Room, Andela Kampala
                    </p>
                    <img
                      alt="Entebbe Meeting Room, Andela Kampala"
                      src="test-file-stub"
                    />
                  </div>
                </li>
                <li
                  className="slide"
                  key="itemKey3/.$Banku Meeting Room, Andela Lagos"
                  onClick={[Function]}
                >
                  <div
                    key="Banku Meeting Room, Andela Lagos"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Banku Meeting Room, Andela Lagos
                    </p>
                    <img
                      alt="Banku Meeting Room, Andela Lagos"
                      src="test-file-stub"
                    />
                  </div>
                </li>
                <li
                  className="slide selected"
                  key="itemKey0clone/.$Safari Meeting Room, Andela New York"
                  onClick={[Function]}
                >
                  <div
                    key="Safari Meeting Room, Andela New York"
                  >
                    <p
                      className="legend legend-center"
                    >
                      Safari Meeting Room, Andela New York
                    </p>
                    <img
                      alt="Safari Meeting Room, Andela New York"
                      src="test-file-stub"
                    />
                  </div>
                </li>
              </ul>
            </ReactSwipe>
          </div>
          <button
            aria-label="next slide / item"
            className="control-arrow control-next control-disabled"
            onClick={[Function]}
            type="button"
          />
          <ul
            className="control-dots"
          >
            <li
              aria-label="slide item 1"
              className="dot selected"
              key="0/.$Safari Meeting Room, Andela New York"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="button"
              tabIndex={0}
              value={0}
            />
            <li
              aria-label="slide item 2"
              className="dot"
              key="1/.$Cognitio Meeting Room, Andela Lagos"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="button"
              tabIndex={0}
              value={1}
            />
            <li
              aria-label="slide item 3"
              className="dot"
              key="2/.$Entebbe Meeting Room, Andela Kampala"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="button"
              tabIndex={0}
              value={2}
            />
            <li
              aria-label="slide item 4"
              className="dot"
              key="3/.$Banku Meeting Room, Andela Lagos"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="button"
              tabIndex={0}
              value={3}
            />
          </ul>
        </div>
        <Thumbs
          axis="horizontal"
          labels={
            Object {
              "item": "slide item",
              "leftArrow": "previous slide / item",
              "rightArrow": "next slide / item",
            }
          }
          onSelectItem={[Function]}
          selectedItem={0}
          transitionTime={2000}
        >
          <div
            className="carousel"
          >
            <div
              className="thumbs-wrapper axis-vertical"
            >
              <button
                aria-label="previous slide / item"
                className="control-arrow control-prev control-disabled"
                onClick={[Function]}
                type="button"
              />
              <ReactSwipe
                allowMouseEvents={false}
                className="thumbs animated"
                onSwipeDown={[Function]}
                onSwipeEnd={[Function]}
                onSwipeLeft={[Function]}
                onSwipeMove={[Function]}
                onSwipeRight={[Function]}
                onSwipeStart={[Function]}
                onSwipeUp={[Function]}
                selectedItem={0}
                style={
                  Object {
                    "MozTransform": "translate3d(NaNpx,0,0)",
                    "MozTransitionDuration": "2000ms",
                    "MsTransform": "translate3d(NaNpx,0,0)",
                    "MsTransitionDuration": "2000ms",
                    "OTransform": "translate3d(NaNpx,0,0)",
                    "OTransitionDuration": "2000ms",
                    "WebkitTransform": "translate3d(NaNpx,0,0)",
                    "WebkitTransitionDuration": "2000ms",
                    "msTransform": "translate3d(NaNpx,0,0)",
                    "msTransitionDuration": "2000ms",
                    "transform": "translate3d(NaNpx,0,0)",
                    "transitionDuration": "2000ms",
                  }
                }
                tagName="ul"
                tolerance={0}
              >
                <ul
                  className="thumbs animated"
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchStart={[Function]}
                  style={
                    Object {
                      "MozTransform": "translate3d(NaNpx,0,0)",
                      "MozTransitionDuration": "2000ms",
                      "MsTransform": "translate3d(NaNpx,0,0)",
                      "MsTransitionDuration": "2000ms",
                      "OTransform": "translate3d(NaNpx,0,0)",
                      "OTransitionDuration": "2000ms",
                      "WebkitTransform": "translate3d(NaNpx,0,0)",
                      "WebkitTransitionDuration": "2000ms",
                      "msTransform": "translate3d(NaNpx,0,0)",
                      "msTransitionDuration": "2000ms",
                      "transform": "translate3d(NaNpx,0,0)",
                      "transitionDuration": "2000ms",
                    }
                  }
                >
                  <li
                    aria-label="slide item 1"
                    className="thumb"
                    key="0"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="button"
                    tabIndex={0}
                  >
                    <img
                      alt="Safari Meeting Room, Andela New York"
                      key=".1/.$Safari Meeting Room, Andela New York"
                      onLoad={[Function]}
                      src="test-file-stub"
                    />
                  </li>
                  <li
                    aria-label="slide item 2"
                    className="thumb"
                    key="1"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="button"
                    tabIndex={0}
                  >
                    <img
                      alt="Cognitio Meeting Room, Andela Lagos"
                      key=".1/.$Cognitio Meeting Room, Andela Lagos"
                      src="test-file-stub"
                    />
                  </li>
                  <li
                    aria-label="slide item 3"
                    className="thumb"
                    key="2"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="button"
                    tabIndex={0}
                  >
                    <img
                      alt="Entebbe Meeting Room, Andela Kampala"
                      key=".1/.$Entebbe Meeting Room, Andela Kampala"
                      src="test-file-stub"
                    />
                  </li>
                  <li
                    aria-label="slide item 4"
                    className="thumb"
                    key="3"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="button"
                    tabIndex={0}
                  >
                    <img
                      alt="Banku Meeting Room, Andela Lagos"
                      key=".1/.$Banku Meeting Room, Andela Lagos"
                      src="test-file-stub"
                    />
                  </li>
                </ul>
              </ReactSwipe>
              <button
                aria-label="next slide / item"
                className="control-arrow control-next control-disabled"
                onClick={[Function]}
                type="button"
              />
            </div>
          </div>
        </Thumbs>
      </div>
    </Carousel>
  </CustomCarousel>
</Login>
`;
